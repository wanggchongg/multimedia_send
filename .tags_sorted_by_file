!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
szASC12	CharSet.cpp	/^extern const unsigned char szASC12[] = $/;"	v
szASC16	CharSet.cpp	/^extern const unsigned char szASC16[] = $/;"	v
szASC24	CharSet.cpp	/^extern const unsigned char szASC24[] = $/;"	v
szHZK12	CharSet.cpp	/^extern const unsigned char szHZK12[] = $/;"	v
szHZK16	CharSet.cpp	/^extern const unsigned char szHZK16[] = $/;"	v
szHZK24	CharSet.cpp	/^extern const unsigned char szHZK24[] = $/;"	v
CharSet_H	CharSet.h	3;"	d
LOG_MSG	Common/LogMsg.c	/^void LOG_MSG(LOG_LEVEL level, const char *func_name, const char *msg, ...)$/;"	f
level_str	Common/LogMsg.c	/^static const char *level_str[] = {"TRACE", "WARNING", "ERROR"};$/;"	v	file:
log_level	Common/LogMsg.c	/^static const LOG_LEVEL log_level = LOG_TRACE;$/;"	v	file:
modulename	Common/LogMsg.c	/^static const char *modulename = "APPLICATIONS";$/;"	v	file:
LOG_ERROR	Common/LogMsg.h	/^	LOG_ERROR   = 2$/;"	e	enum:__anon38
LOG_LEVEL	Common/LogMsg.h	/^} LOG_LEVEL;$/;"	t	typeref:enum:__anon38
LOG_TRACE	Common/LogMsg.h	/^	LOG_TRACE   = 0,$/;"	e	enum:__anon38
LOG_WARNING	Common/LogMsg.h	/^	LOG_WARNING = 1,$/;"	e	enum:__anon38
__SAMSUNG_SYSLSI_APDEV_LOG_MSG_H__	Common/LogMsg.h	2;"	d
CC	Common/Makefile	/^CC = \/usr\/local\/arm\/4.3.2\/bin\/arm-linux-gcc-4.3.2$/;"	m
CFLAGS	Common/Makefile	/^CFLAGS = -g -c -Os -Wall$/;"	m
DEPENDENCY	Common/Makefile	/^DEPENDENCY = lcd.h 				\\$/;"	m
INC	Common/Makefile	/^INC = -I..\/Common$/;"	m
OBJECTS	Common/Makefile	/^OBJECTS = performance.o \\$/;"	m
SRCS	Common/Makefile	/^SRCS = $(OBJECTS:.o=.c)$/;"	m
TARGET	Common/Makefile	/^TARGET = app$/;"	m
BUF_SIZE	Common/MfcDriver.h	52;"	d
IOCTL_MFC_GET_CONFIG	Common/MfcDriver.h	39;"	d
IOCTL_MFC_GET_FRAM_BUF_ADDR	Common/MfcDriver.h	36;"	d
IOCTL_MFC_GET_LINE_BUF_ADDR	Common/MfcDriver.h	34;"	d
IOCTL_MFC_GET_PHY_FRAM_BUF_ADDR	Common/MfcDriver.h	38;"	d
IOCTL_MFC_GET_POST_BUF_ADDR	Common/MfcDriver.h	37;"	d
IOCTL_MFC_GET_RING_BUF_ADDR	Common/MfcDriver.h	35;"	d
IOCTL_MFC_H263_DEC_EXE	Common/MfcDriver.h	28;"	d
IOCTL_MFC_H263_DEC_INIT	Common/MfcDriver.h	26;"	d
IOCTL_MFC_H263_ENC_EXE	Common/MfcDriver.h	29;"	d
IOCTL_MFC_H263_ENC_INIT	Common/MfcDriver.h	27;"	d
IOCTL_MFC_H264_DEC_EXE	Common/MfcDriver.h	23;"	d
IOCTL_MFC_H264_DEC_INIT	Common/MfcDriver.h	21;"	d
IOCTL_MFC_H264_ENC_EXE	Common/MfcDriver.h	24;"	d
IOCTL_MFC_H264_ENC_INIT	Common/MfcDriver.h	22;"	d
IOCTL_MFC_MPEG4_DEC_EXE	Common/MfcDriver.h	18;"	d
IOCTL_MFC_MPEG4_DEC_INIT	Common/MfcDriver.h	16;"	d
IOCTL_MFC_MPEG4_ENC_EXE	Common/MfcDriver.h	19;"	d
IOCTL_MFC_MPEG4_ENC_INIT	Common/MfcDriver.h	17;"	d
IOCTL_MFC_SET_CONFIG	Common/MfcDriver.h	42;"	d
IOCTL_MFC_SET_H263_MULTIPLE_SLICE	Common/MfcDriver.h	41;"	d
IOCTL_MFC_VC1_DEC_EXE	Common/MfcDriver.h	32;"	d
IOCTL_MFC_VC1_DEC_INIT	Common/MfcDriver.h	31;"	d
MFCDRV_RET_ERR_HANDLE_INVALIDATED	Common/MfcDriver.h	46;"	d
MFCDRV_RET_ERR_INVALID_PARAM	Common/MfcDriver.h	45;"	d
MFCDRV_RET_ERR_OTHERS	Common/MfcDriver.h	47;"	d
MFCDRV_RET_OK	Common/MfcDriver.h	44;"	d
MFC_DEV_NAME	Common/MfcDriver.h	55;"	d
S3C6400_BASEADDR_MFC_DATA_BUF	Common/MfcDriver.h	51;"	d
VIDEO_BUFFER_SIZE	Common/MfcDriver.h	53;"	d
__SAMSUNG_SYSLSI_APDEV_S3C_MFC_H__	Common/MfcDriver.h	2;"	d
DEC_PIC_OPT_MP4ASP	Common/MfcDrvParams.h	107;"	d
ENC_PARAM_BITRATE	Common/MfcDrvParams.h	97;"	d
ENC_PARAM_F_RATE	Common/MfcDrvParams.h	98;"	d
ENC_PARAM_GOP_NUM	Common/MfcDrvParams.h	95;"	d
ENC_PARAM_INTRA_QP	Common/MfcDrvParams.h	96;"	d
ENC_PARAM_INTRA_REF	Common/MfcDrvParams.h	99;"	d
ENC_PARAM_SLICE_MODE	Common/MfcDrvParams.h	100;"	d
ENC_PIC_OPT_IDR	Common/MfcDrvParams.h	102;"	d
ENC_PIC_OPT_RECOVERY	Common/MfcDrvParams.h	104;"	d
ENC_PIC_OPT_SKIP	Common/MfcDrvParams.h	103;"	d
MFC_ARGS	Common/MfcDrvParams.h	/^} MFC_ARGS;$/;"	t	typeref:union:__anon49
MFC_DEC_EXE_ARG	Common/MfcDrvParams.h	/^} MFC_DEC_EXE_ARG;$/;"	t	typeref:struct:__anon45
MFC_DEC_INIT_ARG	Common/MfcDrvParams.h	/^} MFC_DEC_INIT_ARG;$/;"	t	typeref:struct:__anon44
MFC_ENC_EXE_ARG	Common/MfcDrvParams.h	/^} MFC_ENC_EXE_ARG;$/;"	t	typeref:struct:__anon43
MFC_ENC_INIT_ARG	Common/MfcDrvParams.h	/^} MFC_ENC_INIT_ARG;$/;"	t	typeref:struct:__anon42
MFC_GET_BUF_ADDR_ARG	Common/MfcDrvParams.h	/^} MFC_GET_BUF_ADDR_ARG;$/;"	t	typeref:struct:__anon46
MFC_GET_CONFIG_ARG	Common/MfcDrvParams.h	/^} MFC_GET_CONFIG_ARG;$/;"	t	typeref:struct:__anon47
MFC_GET_CONFIG_DEC_BYTE_CONSUMED	Common/MfcDrvParams.h	78;"	d
MFC_GET_CONFIG_DEC_FRAME_NEED_COUNT	Common/MfcDrvParams.h	69;"	d
MFC_GET_CONFIG_DEC_MP4ASP_FCODE	Common/MfcDrvParams.h	73;"	d
MFC_GET_CONFIG_DEC_MP4ASP_MBTYPE	Common/MfcDrvParams.h	71;"	d
MFC_GET_CONFIG_DEC_MP4ASP_MV	Common/MfcDrvParams.h	70;"	d
MFC_GET_CONFIG_DEC_MP4ASP_NONB_TIME_LAST	Common/MfcDrvParams.h	76;"	d
MFC_GET_CONFIG_DEC_MP4ASP_TIME_BASE_LAST	Common/MfcDrvParams.h	75;"	d
MFC_GET_CONFIG_DEC_MP4ASP_TRD	Common/MfcDrvParams.h	77;"	d
MFC_GET_CONFIG_DEC_MP4ASP_VOP_TIME_RES	Common/MfcDrvParams.h	74;"	d
MFC_SET_CACHE_CLEAN	Common/MfcDrvParams.h	89;"	d
MFC_SET_CACHE_CLEAN_INVALIDATE	Common/MfcDrvParams.h	91;"	d
MFC_SET_CACHE_INVALIDATE	Common/MfcDrvParams.h	90;"	d
MFC_SET_CONFIG_ARG	Common/MfcDrvParams.h	/^} MFC_SET_CONFIG_ARG;$/;"	t	typeref:struct:__anon48
MFC_SET_CONFIG_DEC_OPTION	Common/MfcDrvParams.h	82;"	d
MFC_SET_CONFIG_DEC_ROTATE	Common/MfcDrvParams.h	81;"	d
MFC_SET_CONFIG_ENC_CUR_PIC_OPT	Common/MfcDrvParams.h	87;"	d
MFC_SET_CONFIG_ENC_H263_PARAM	Common/MfcDrvParams.h	84;"	d
MFC_SET_CONFIG_ENC_PARAM_CHANGE	Common/MfcDrvParams.h	86;"	d
MFC_SET_CONFIG_ENC_SLICE_MODE	Common/MfcDrvParams.h	85;"	d
MFC_SET_PADDING_SIZE	Common/MfcDrvParams.h	93;"	d
__SAMSUNG_SYSLSI_APDEV_MFC_DRV_PARAMS_H__	Common/MfcDrvParams.h	2;"	d
dec_exe	Common/MfcDrvParams.h	/^	MFC_DEC_EXE_ARG			dec_exe;$/;"	m	union:__anon49
dec_init	Common/MfcDrvParams.h	/^	MFC_DEC_INIT_ARG		dec_init;$/;"	m	union:__anon49
enc_exe	Common/MfcDrvParams.h	/^	MFC_ENC_EXE_ARG			enc_exe;$/;"	m	union:__anon49
enc_init	Common/MfcDrvParams.h	/^	MFC_ENC_INIT_ARG		enc_init;$/;"	m	union:__anon49
get_buf_addr	Common/MfcDrvParams.h	/^	MFC_GET_BUF_ADDR_ARG	get_buf_addr;$/;"	m	union:__anon49
get_config	Common/MfcDrvParams.h	/^	MFC_GET_CONFIG_ARG		get_config;$/;"	m	union:__anon49
in_bitrate	Common/MfcDrvParams.h	/^	int in_bitrate;			\/\/ [IN]  Encoding parameter: Bitrate (kbps)$/;"	m	struct:__anon42
in_config_param	Common/MfcDrvParams.h	/^	int in_config_param;			\/\/ [IN]  Configurable parameter type$/;"	m	struct:__anon47
in_config_param	Common/MfcDrvParams.h	/^	int in_config_param;			\/\/ [IN]  Configurable parameter type$/;"	m	struct:__anon48
in_config_param2	Common/MfcDrvParams.h	/^	int in_config_param2;$/;"	m	struct:__anon47
in_config_value	Common/MfcDrvParams.h	/^	int in_config_value[3];			\/\/ [IN]  Values to be set for the configurable parameter.$/;"	m	struct:__anon48
in_frameRateDiv	Common/MfcDrvParams.h	/^	int in_frameRateDiv;	\/\/ [IN]  Encoding parameter: Frame rate (Divider)$/;"	m	struct:__anon42
in_frameRateRes	Common/MfcDrvParams.h	/^	int in_frameRateRes;	\/\/ [IN]  Encoding parameter: Frame rate (Res)$/;"	m	struct:__anon42
in_gopNum	Common/MfcDrvParams.h	/^	int in_gopNum;			\/\/ [IN]  Encoding parameter: GOP Number (interval of I-frame)$/;"	m	struct:__anon42
in_height	Common/MfcDrvParams.h	/^	int in_height;			\/\/ [IN]  height of YUV420 frame to be encoded$/;"	m	struct:__anon42
in_strmSize	Common/MfcDrvParams.h	/^	int in_strmSize;		\/\/ [IN]  Size of video stream filled in STRM_BUF$/;"	m	struct:__anon44
in_strmSize	Common/MfcDrvParams.h	/^	int in_strmSize;		\/\/ [IN]  Size of video stream filled in STRM_BUF$/;"	m	struct:__anon45
in_usr_data	Common/MfcDrvParams.h	/^	int in_usr_data;		\/\/ [IN]  User data for translating Kernel-mode address to User-mode address$/;"	m	struct:__anon46
in_usr_data2	Common/MfcDrvParams.h	/^	int in_usr_data2;$/;"	m	struct:__anon46
in_width	Common/MfcDrvParams.h	/^	int in_width;			\/\/ [IN]  width  of YUV420 frame to be encoded$/;"	m	struct:__anon42
out_buf_addr	Common/MfcDrvParams.h	/^	int out_buf_addr;		\/\/ [OUT] Buffer address$/;"	m	struct:__anon46
out_buf_height	Common/MfcDrvParams.h	/^	int out_buf_height;		\/\/ [OUT] buffer's height of YUV420 frame$/;"	m	struct:__anon44
out_buf_size	Common/MfcDrvParams.h	/^	int out_buf_size;		\/\/ [OUT] Size of buffer address$/;"	m	struct:__anon46
out_buf_width	Common/MfcDrvParams.h	/^	int out_buf_width;		\/\/ [OUT] buffer's width of YUV420 frame$/;"	m	struct:__anon44
out_config_value	Common/MfcDrvParams.h	/^	int out_config_value[2];		\/\/ [IN]  Values to get for the configurable parameter.$/;"	m	struct:__anon47
out_config_value_old	Common/MfcDrvParams.h	/^	int out_config_value_old[2];	\/\/ [OUT] Old values of the configurable parameters$/;"	m	struct:__anon48
out_encoded_size	Common/MfcDrvParams.h	/^	int out_encoded_size;	\/\/ [OUT] Length of Encoded video stream$/;"	m	struct:__anon43
out_header_size	Common/MfcDrvParams.h	/^	int out_header_size;	\/\/ [OUT] Length of video stream header$/;"	m	struct:__anon43
out_height	Common/MfcDrvParams.h	/^	int out_height;			\/\/ [OUT] height of YUV420 frame$/;"	m	struct:__anon44
out_width	Common/MfcDrvParams.h	/^	int out_width;			\/\/ [OUT] width  of YUV420 frame$/;"	m	struct:__anon44
ret_code	Common/MfcDrvParams.h	/^	int ret_code;					\/\/ [OUT] Return code$/;"	m	struct:__anon47
ret_code	Common/MfcDrvParams.h	/^	int ret_code;					\/\/ [OUT] Return code$/;"	m	struct:__anon48
ret_code	Common/MfcDrvParams.h	/^	int ret_code;			\/\/ [OUT] Return code$/;"	m	struct:__anon42
ret_code	Common/MfcDrvParams.h	/^	int ret_code;			\/\/ [OUT] Return code$/;"	m	struct:__anon43
ret_code	Common/MfcDrvParams.h	/^	int ret_code;			\/\/ [OUT] Return code$/;"	m	struct:__anon44
ret_code	Common/MfcDrvParams.h	/^	int ret_code;			\/\/ [OUT] Return code$/;"	m	struct:__anon45
ret_code	Common/MfcDrvParams.h	/^	int ret_code;			\/\/ [OUT] Return code$/;"	m	struct:__anon46
set_config	Common/MfcDrvParams.h	/^	MFC_SET_CONFIG_ARG      set_config;$/;"	m	union:__anon49
BitsPerPixel	Common/lcd.h	56;"	d
Bpp	Common/lcd.h	/^	int Bpp;$/;"	m	struct:__anon50
BytesPerPixel	Common/lcd.h	55;"	d
FBIO_WAITFORVSYNC	Common/lcd.h	27;"	d
FB_DEV_NAME	Common/lcd.h	42;"	d
FB_DEV_NAME1	Common/lcd.h	43;"	d
FB_DEV_NAME2	Common/lcd.h	44;"	d
FB_DEV_NAME3	Common/lcd.h	45;"	d
FB_DEV_NAME4	Common/lcd.h	46;"	d
FB_HEIGHT	Common/lcd.h	49;"	d
FB_VIRTUAL_HEIGHT	Common/lcd.h	53;"	d
FB_VIRTUAL_WIDTH	Common/lcd.h	52;"	d
FB_WIDTH	Common/lcd.h	48;"	d
GET_FB_INFO	Common/lcd.h	38;"	d
Height	Common/lcd.h	/^	int Height;$/;"	m	struct:__anon50
LeftTop_x	Common/lcd.h	/^	int LeftTop_x;$/;"	m	struct:__anon50
LeftTop_y	Common/lcd.h	/^	int LeftTop_y;$/;"	m	struct:__anon50
SET_FB_CHANGE_REQ	Common/lcd.h	39;"	d
SET_OSD_INFO	Common/lcd.h	34;"	d
SET_OSD_START	Common/lcd.h	35;"	d
SET_OSD_STOP	Common/lcd.h	36;"	d
SET_VSYNC_INT	Common/lcd.h	40;"	d
SET_VS_INFO	Common/lcd.h	31;"	d
SET_VS_MOVE	Common/lcd.h	32;"	d
SET_VS_START	Common/lcd.h	29;"	d
SET_VS_STOP	Common/lcd.h	30;"	d
Width	Common/lcd.h	/^	int Width;$/;"	m	struct:__anon50
__SAMSUNG_SYSLSI_APDEV_S3C_LCD_H__	Common/lcd.h	2;"	d
bpp	Common/lcd.h	/^	int bpp;$/;"	m	struct:__anon51
height	Common/lcd.h	/^	int height;$/;"	m	struct:__anon51
map_dma_f1	Common/lcd.h	/^	unsigned int map_dma_f1;$/;"	m	struct:s3c_fb_dma_info
map_dma_f2	Common/lcd.h	/^	unsigned int map_dma_f2;$/;"	m	struct:s3c_fb_dma_info
offset	Common/lcd.h	/^	int offset;$/;"	m	struct:__anon51
s3c_fb_dma_info	Common/lcd.h	/^struct s3c_fb_dma_info$/;"	s
s3c_win_info_t	Common/lcd.h	/^} s3c_win_info_t;$/;"	t	typeref:struct:__anon50
v_height	Common/lcd.h	/^	int v_height;$/;"	m	struct:__anon51
v_width	Common/lcd.h	/^	int v_width;$/;"	m	struct:__anon51
vs_info_t	Common/lcd.h	/^}vs_info_t;$/;"	t	typeref:struct:__anon51
width	Common/lcd.h	/^	int width;$/;"	m	struct:__anon51
BUF_SIZE	Common/mfc.h	52;"	d
IOCTL_MFC_GET_CONFIG	Common/mfc.h	39;"	d
IOCTL_MFC_GET_FRAM_BUF_ADDR	Common/mfc.h	36;"	d
IOCTL_MFC_GET_LINE_BUF_ADDR	Common/mfc.h	34;"	d
IOCTL_MFC_GET_PHY_FRAM_BUF_ADDR	Common/mfc.h	38;"	d
IOCTL_MFC_GET_POST_BUF_ADDR	Common/mfc.h	37;"	d
IOCTL_MFC_GET_RING_BUF_ADDR	Common/mfc.h	35;"	d
IOCTL_MFC_H263_DEC_EXE	Common/mfc.h	28;"	d
IOCTL_MFC_H263_DEC_INIT	Common/mfc.h	26;"	d
IOCTL_MFC_H263_ENC_EXE	Common/mfc.h	29;"	d
IOCTL_MFC_H263_ENC_INIT	Common/mfc.h	27;"	d
IOCTL_MFC_H264_DEC_EXE	Common/mfc.h	23;"	d
IOCTL_MFC_H264_DEC_INIT	Common/mfc.h	21;"	d
IOCTL_MFC_H264_ENC_EXE	Common/mfc.h	24;"	d
IOCTL_MFC_H264_ENC_INIT	Common/mfc.h	22;"	d
IOCTL_MFC_MPEG4_DEC_EXE	Common/mfc.h	18;"	d
IOCTL_MFC_MPEG4_DEC_INIT	Common/mfc.h	16;"	d
IOCTL_MFC_MPEG4_ENC_EXE	Common/mfc.h	19;"	d
IOCTL_MFC_MPEG4_ENC_INIT	Common/mfc.h	17;"	d
IOCTL_MFC_SET_CONFIG	Common/mfc.h	42;"	d
IOCTL_MFC_SET_H263_MULTIPLE_SLICE	Common/mfc.h	41;"	d
IOCTL_MFC_VC1_DEC_EXE	Common/mfc.h	32;"	d
IOCTL_MFC_VC1_DEC_INIT	Common/mfc.h	31;"	d
MFCDRV_RET_ERR_HANDLE_INVALIDATED	Common/mfc.h	46;"	d
MFCDRV_RET_ERR_INVALID_PARAM	Common/mfc.h	45;"	d
MFCDRV_RET_ERR_OTHERS	Common/mfc.h	47;"	d
MFCDRV_RET_OK	Common/mfc.h	44;"	d
MFC_DEV_NAME	Common/mfc.h	55;"	d
S3C6400_BASEADDR_MFC_DATA_BUF	Common/mfc.h	51;"	d
VIDEO_BUFFER_SIZE	Common/mfc.h	53;"	d
__SAMSUNG_SYSLSI_APDEV_S3C_MFC_H__	Common/mfc.h	2;"	d
measureTime	Common/performance.c	/^unsigned int measureTime(struct timeval *start, struct timeval *stop)$/;"	f
__SAMSUNG_SYSLSI_APDEV_PERFORMANCE_H__	Common/performance.h	2;"	d
ARGB16	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
ARGB24	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
ARGB8	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
CBYCRY	Common/post.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon55
CRYCBY	Common/post.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon55
DstCSpace	Common/post.h	/^	cspace_t DstCSpace; 		\/\/ Color Space ot the Source Image$/;"	m	struct:__anon57
DstFrmSt	Common/post.h	/^	unsigned int DstFrmSt; 			\/\/ Base Address of the Source Image : Physical Address$/;"	m	struct:__anon57
DstFullHeight	Common/post.h	/^	unsigned int DstFullHeight; 		\/\/ Source Image Full Height(Virtual screen size)$/;"	m	struct:__anon57
DstFullWidth	Common/post.h	/^	unsigned int DstFullWidth; 		\/\/ Source Image Full Width(Virtual screen size)$/;"	m	struct:__anon57
DstHeight	Common/post.h	/^	unsigned int DstHeight; 			\/\/ Source Image Height$/;"	m	struct:__anon57
DstStartX	Common/post.h	/^	unsigned int DstStartX; 			\/\/ Source Image Start width offset$/;"	m	struct:__anon57
DstStartY	Common/post.h	/^	unsigned int DstStartY; 			\/\/ Source Image Start height offset$/;"	m	struct:__anon57
DstWidth	Common/post.h	/^	unsigned int DstWidth; 			\/\/ Source Image Width$/;"	m	struct:__anon57
EXT_27MHZ	Common/post.h	/^	HCLK = 0, PLL_EXT = 1, EXT_27MHZ = 3$/;"	e	enum:__anon56
FREE_RUN	Common/post.h	/^	ONE_SHOT, FREE_RUN$/;"	e	enum:__anon54
HCLK	Common/post.h	/^	HCLK = 0, PLL_EXT = 1, EXT_27MHZ = 3$/;"	e	enum:__anon56
INTERLACE_MODE	Common/post.h	/^	INTERLACE_MODE,$/;"	e	enum:__anon52
InPath	Common/post.h	/^	s3c_pp_path_t InPath;$/;"	m	struct:__anon57
Mode	Common/post.h	/^	s3c_pp_run_mode_t Mode; 	\/\/ POST running mode(PER_FRAME or FREE_RUN)$/;"	m	struct:__anon57
ONE_SHOT	Common/post.h	/^	ONE_SHOT, FREE_RUN$/;"	e	enum:__anon54
OutPath	Common/post.h	/^	s3c_pp_path_t OutPath; 	\/\/ Data path of the desitination image$/;"	m	struct:__anon57
PAL1	Common/post.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon55
PAL2	Common/post.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon55
PAL4	Common/post.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon55
PAL8	Common/post.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon55
PLL_EXT	Common/post.h	/^	HCLK = 0, PLL_EXT = 1, EXT_27MHZ = 3$/;"	e	enum:__anon56
POST_DMA	Common/post.h	/^	POST_DMA, POST_FIFO$/;"	e	enum:__anon53
POST_FIFO	Common/post.h	/^	POST_DMA, POST_FIFO$/;"	e	enum:__anon53
PPROC_GET_BUF_SIZE	Common/post.h	13;"	d
PPROC_GET_INBUF_SIZE	Common/post.h	12;"	d
PPROC_GET_OUT_DATA_SIZE	Common/post.h	15;"	d
PPROC_GET_PHY_INBUF_ADDR	Common/post.h	11;"	d
PPROC_INTERLACE_MODE	Common/post.h	9;"	d
PPROC_PROGRESSIVE_MODE	Common/post.h	10;"	d
PPROC_SET_NXT_BUF_ADDR	Common/post.h	16;"	d
PPROC_SET_PARAMS	Common/post.h	6;"	d
PPROC_START	Common/post.h	7;"	d
PPROC_START_ONLY	Common/post.h	14;"	d
PPROC_STOP	Common/post.h	8;"	d
PPROC_WAIT_INT	Common/post.h	17;"	d
PP_DEV_NAME	Common/post.h	20;"	d
PP_IOCTL_MAGIC	Common/post.h	4;"	d
PROGRESSIVE_MODE	Common/post.h	/^	PROGRESSIVE_MODE$/;"	e	enum:__anon52
RGB16	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
RGB18	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
RGB24	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
RGB30	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
RGB8	Common/post.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon55
SrcCSpace	Common/post.h	/^	cspace_t SrcCSpace; 		\/\/ Color Space ot the Source Image$/;"	m	struct:__anon57
SrcFrmBufNum	Common/post.h	/^	unsigned int SrcFrmBufNum; 		\/\/ Frame buffer number$/;"	m	struct:__anon57
SrcFrmSt	Common/post.h	/^	unsigned int SrcFrmSt; 			\/\/ Base Address of the Source Image : Physical Address$/;"	m	struct:__anon57
SrcFullHeight	Common/post.h	/^	unsigned int SrcFullHeight; 		\/\/ Source Image Full Height(Virtual screen size)$/;"	m	struct:__anon57
SrcFullWidth	Common/post.h	/^	unsigned int SrcFullWidth; 		\/\/ Source Image Full Width(Virtual screen size)$/;"	m	struct:__anon57
SrcHeight	Common/post.h	/^	unsigned int SrcHeight; 			\/\/ Source Image Height$/;"	m	struct:__anon57
SrcNxtFrmSt	Common/post.h	/^	unsigned int SrcNxtFrmSt;$/;"	m	struct:__anon57
SrcStartX	Common/post.h	/^	unsigned int SrcStartX; 			\/\/ Source Image Start width offset$/;"	m	struct:__anon57
SrcStartY	Common/post.h	/^	unsigned int SrcStartY; 			\/\/ Source Image Start height offset$/;"	m	struct:__anon57
SrcWidth	Common/post.h	/^	unsigned int SrcWidth;			\/\/ Source Image Width$/;"	m	struct:__anon57
YC420	Common/post.h	/^	YC420, YC422, \/\/ Non-interleave$/;"	e	enum:__anon55
YC422	Common/post.h	/^	YC420, YC422, \/\/ Non-interleave$/;"	e	enum:__anon55
YCBYCR	Common/post.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon55
YCRYCB	Common/post.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon55
YUV444	Common/post.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon55
__SAMSUNG_SYSLSI_APDEV_S3C_POST_H__	Common/post.h	2;"	d
buff_addr_t	Common/post.h	/^} buff_addr_t;$/;"	t	typeref:struct:__anon58
cspace_t	Common/post.h	/^} cspace_t;$/;"	t	typeref:enum:__anon55
in_pixel_size	Common/post.h	/^	unsigned int in_pixel_size;$/;"	m	struct:__anon57
out_pixel_size	Common/post.h	/^	unsigned int out_pixel_size;$/;"	m	struct:__anon57
post_phy_addr	Common/post.h	/^	unsigned int post_phy_addr;$/;"	m	struct:__anon58
post_virt_addr	Common/post.h	/^	unsigned char *post_virt_addr;$/;"	m	struct:__anon58
pp_clk_src_t	Common/post.h	/^} pp_clk_src_t;$/;"	t	typeref:enum:__anon56
pp_params	Common/post.h	/^}pp_params;$/;"	t	typeref:struct:__anon57
pre_phy_addr	Common/post.h	/^	unsigned int pre_phy_addr;$/;"	m	struct:__anon58
pre_virt_addr	Common/post.h	/^	unsigned char *pre_virt_addr;$/;"	m	struct:__anon58
s3c_pp_path_t	Common/post.h	/^} s3c_pp_path_t;$/;"	t	typeref:enum:__anon53
s3c_pp_run_mode_t	Common/post.h	/^} s3c_pp_run_mode_t;$/;"	t	typeref:enum:__anon54
s3c_pp_scan_mode_t	Common/post.h	/^} s3c_pp_scan_mode_t;$/;"	t	typeref:enum:__anon52
APP_data	Common/videodev2.h	/^	char APP_data[60];      \/* Data in the JPEG APPn segment. *\/$/;"	m	struct:v4l2_jpegcompression
APP_len	Common/videodev2.h	/^	int  APP_len;           \/* Length of data in JPEG APPn segment *\/$/;"	m	struct:v4l2_jpegcompression
APPn	Common/videodev2.h	/^	int  APPn;              \/* Number of APP segment to be written,$/;"	m	struct:v4l2_jpegcompression
BASE_VIDIOC_PRIVATE	Common/videodev2.h	928;"	d
COM_data	Common/videodev2.h	/^	char COM_data[60];      \/* Data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
COM_len	Common/videodev2.h	/^	int  COM_len;           \/* Length of data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
V4L2_AUDCAP_AVL	Common/videodev2.h	790;"	d
V4L2_AUDCAP_STEREO	Common/videodev2.h	789;"	d
V4L2_AUDMODE_AVL	Common/videodev2.h	793;"	d
V4L2_BITRATE_CBR	Common/videodev2.h	/^	V4L2_BITRATE_CBR,	\/* constant bitrate *\/$/;"	e	enum:v4l2_bitrate_mode
V4L2_BITRATE_NONE	Common/videodev2.h	/^	V4L2_BITRATE_NONE = 0,	\/* not specified *\/$/;"	e	enum:v4l2_bitrate_mode
V4L2_BITRATE_VBR	Common/videodev2.h	/^	V4L2_BITRATE_VBR,	\/* variable bitrate *\/$/;"	e	enum:v4l2_bitrate_mode
V4L2_BUF_FLAG_BFRAME	Common/videodev2.h	428;"	d
V4L2_BUF_FLAG_DONE	Common/videodev2.h	425;"	d
V4L2_BUF_FLAG_INPUT	Common/videodev2.h	430;"	d
V4L2_BUF_FLAG_KEYFRAME	Common/videodev2.h	426;"	d
V4L2_BUF_FLAG_MAPPED	Common/videodev2.h	423;"	d
V4L2_BUF_FLAG_PFRAME	Common/videodev2.h	427;"	d
V4L2_BUF_FLAG_QUEUED	Common/videodev2.h	424;"	d
V4L2_BUF_FLAG_TIMECODE	Common/videodev2.h	429;"	d
V4L2_BUF_TYPE_PRIVATE	Common/videodev2.h	/^	V4L2_BUF_TYPE_PRIVATE        = 0x80,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_CAPTURE	Common/videodev2.h	/^	V4L2_BUF_TYPE_VBI_CAPTURE    = 4,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_OUTPUT	Common/videodev2.h	/^	V4L2_BUF_TYPE_VBI_OUTPUT     = 5,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_CAPTURE	Common/videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_CAPTURE  = 1,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT	Common/videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT   = 2,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OVERLAY	Common/videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OVERLAY  = 3,$/;"	e	enum:v4l2_buf_type
V4L2_CAP_ASYNCIO	Common/videodev2.h	162;"	d
V4L2_CAP_AUDIO	Common/videodev2.h	158;"	d
V4L2_CAP_RADIO	Common/videodev2.h	159;"	d
V4L2_CAP_RDS_CAPTURE	Common/videodev2.h	155;"	d
V4L2_CAP_READWRITE	Common/videodev2.h	161;"	d
V4L2_CAP_STREAMING	Common/videodev2.h	163;"	d
V4L2_CAP_TIMEPERFRAME	Common/videodev2.h	485;"	d
V4L2_CAP_TUNER	Common/videodev2.h	157;"	d
V4L2_CAP_VBI_CAPTURE	Common/videodev2.h	153;"	d
V4L2_CAP_VBI_OUTPUT	Common/videodev2.h	154;"	d
V4L2_CAP_VIDEO_CAPTURE	Common/videodev2.h	150;"	d
V4L2_CAP_VIDEO_OUTPUT	Common/videodev2.h	151;"	d
V4L2_CAP_VIDEO_OVERLAY	Common/videodev2.h	152;"	d
V4L2_CID_AUDIO_BALANCE	Common/videodev2.h	697;"	d
V4L2_CID_AUDIO_BASS	Common/videodev2.h	698;"	d
V4L2_CID_AUDIO_LOUDNESS	Common/videodev2.h	701;"	d
V4L2_CID_AUDIO_MUTE	Common/videodev2.h	700;"	d
V4L2_CID_AUDIO_TREBLE	Common/videodev2.h	699;"	d
V4L2_CID_AUDIO_VOLUME	Common/videodev2.h	696;"	d
V4L2_CID_AUTOGAIN	Common/videodev2.h	710;"	d
V4L2_CID_AUTO_WHITE_BALANCE	Common/videodev2.h	703;"	d
V4L2_CID_BASE	Common/videodev2.h	688;"	d
V4L2_CID_BLACK_LEVEL	Common/videodev2.h	702;"	d
V4L2_CID_BLUE_BALANCE	Common/videodev2.h	706;"	d
V4L2_CID_BRIGHTNESS	Common/videodev2.h	692;"	d
V4L2_CID_CONTRAST	Common/videodev2.h	693;"	d
V4L2_CID_DO_WHITE_BALANCE	Common/videodev2.h	704;"	d
V4L2_CID_EXPOSURE	Common/videodev2.h	709;"	d
V4L2_CID_GAIN	Common/videodev2.h	711;"	d
V4L2_CID_GAMMA	Common/videodev2.h	707;"	d
V4L2_CID_HCENTER	Common/videodev2.h	714;"	d
V4L2_CID_HFLIP	Common/videodev2.h	712;"	d
V4L2_CID_HUE	Common/videodev2.h	695;"	d
V4L2_CID_LASTP1	Common/videodev2.h	716;"	d
V4L2_CID_PRIVATE_BASE	Common/videodev2.h	690;"	d
V4L2_CID_RED_BALANCE	Common/videodev2.h	705;"	d
V4L2_CID_SATURATION	Common/videodev2.h	694;"	d
V4L2_CID_VCENTER	Common/videodev2.h	715;"	d
V4L2_CID_VFLIP	Common/videodev2.h	713;"	d
V4L2_CID_WHITENESS	Common/videodev2.h	708;"	d
V4L2_COLORSPACE_470_SYSTEM_BG	Common/videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_BG = 6,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_470_SYSTEM_M	Common/videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_M  = 5,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_BT878	Common/videodev2.h	/^	V4L2_COLORSPACE_BT878         = 4,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_JPEG	Common/videodev2.h	/^	V4L2_COLORSPACE_JPEG          = 7,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_REC709	Common/videodev2.h	/^	V4L2_COLORSPACE_REC709        = 3,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE170M	Common/videodev2.h	/^	V4L2_COLORSPACE_SMPTE170M     = 1,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE240M	Common/videodev2.h	/^	V4L2_COLORSPACE_SMPTE240M     = 2,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SRGB	Common/videodev2.h	/^	V4L2_COLORSPACE_SRGB          = 8,$/;"	e	enum:v4l2_colorspace
V4L2_CTRL_FLAG_DISABLED	Common/videodev2.h	684;"	d
V4L2_CTRL_FLAG_GRABBED	Common/videodev2.h	685;"	d
V4L2_CTRL_TYPE_BOOLEAN	Common/videodev2.h	/^	V4L2_CTRL_TYPE_BOOLEAN	     = 2,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_BUTTON	Common/videodev2.h	/^	V4L2_CTRL_TYPE_BUTTON	     = 4,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER	Common/videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER	     = 1,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_MENU	Common/videodev2.h	/^	V4L2_CTRL_TYPE_MENU	     = 3,$/;"	e	enum:v4l2_ctrl_type
V4L2_FBUF_CAP_BITMAP_CLIPPING	Common/videodev2.h	448;"	d
V4L2_FBUF_CAP_CHROMAKEY	Common/videodev2.h	446;"	d
V4L2_FBUF_CAP_EXTERNOVERLAY	Common/videodev2.h	445;"	d
V4L2_FBUF_CAP_LIST_CLIPPING	Common/videodev2.h	447;"	d
V4L2_FBUF_FLAG_CHROMAKEY	Common/videodev2.h	452;"	d
V4L2_FBUF_FLAG_OVERLAY	Common/videodev2.h	451;"	d
V4L2_FBUF_FLAG_PRIMARY	Common/videodev2.h	450;"	d
V4L2_FIELD_ALTERNATE	Common/videodev2.h	/^	V4L2_FIELD_ALTERNATE  = 7, \/* both fields alternating into$/;"	e	enum:v4l2_field
V4L2_FIELD_ANY	Common/videodev2.h	/^	V4L2_FIELD_ANY        = 0, \/* driver can choose from none,$/;"	e	enum:v4l2_field
V4L2_FIELD_BOTTOM	Common/videodev2.h	/^	V4L2_FIELD_BOTTOM     = 3, \/* bottom field only *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_HAS_BOTH	Common/videodev2.h	55;"	d
V4L2_FIELD_HAS_BOTTOM	Common/videodev2.h	50;"	d
V4L2_FIELD_HAS_TOP	Common/videodev2.h	45;"	d
V4L2_FIELD_INTERLACED	Common/videodev2.h	/^	V4L2_FIELD_INTERLACED = 4, \/* both fields interlaced *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_NONE	Common/videodev2.h	/^	V4L2_FIELD_NONE       = 1, \/* this device has no fields ... *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_BT	Common/videodev2.h	/^	V4L2_FIELD_SEQ_BT     = 6, \/* same as above + bottom-top order *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_TB	Common/videodev2.h	/^	V4L2_FIELD_SEQ_TB     = 5, \/* both fields sequential into one$/;"	e	enum:v4l2_field
V4L2_FIELD_TOP	Common/videodev2.h	/^	V4L2_FIELD_TOP        = 2, \/* top field only *\/$/;"	e	enum:v4l2_field
V4L2_FMT_FLAG_COMPRESSED	Common/videodev2.h	236;"	d
V4L2_INPUT_TYPE_CAMERA	Common/videodev2.h	612;"	d
V4L2_INPUT_TYPE_TUNER	Common/videodev2.h	611;"	d
V4L2_IN_ST_COLOR_KILL	Common/videodev2.h	621;"	d
V4L2_IN_ST_MACROVISION	Common/videodev2.h	629;"	d
V4L2_IN_ST_NO_ACCESS	Common/videodev2.h	630;"	d
V4L2_IN_ST_NO_CARRIER	Common/videodev2.h	626;"	d
V4L2_IN_ST_NO_COLOR	Common/videodev2.h	617;"	d
V4L2_IN_ST_NO_EQU	Common/videodev2.h	625;"	d
V4L2_IN_ST_NO_H_LOCK	Common/videodev2.h	620;"	d
V4L2_IN_ST_NO_POWER	Common/videodev2.h	615;"	d
V4L2_IN_ST_NO_SIGNAL	Common/videodev2.h	616;"	d
V4L2_IN_ST_NO_SYNC	Common/videodev2.h	624;"	d
V4L2_IN_ST_VTR	Common/videodev2.h	631;"	d
V4L2_JPEG_MARKER_APP	Common/videodev2.h	384;"	d
V4L2_JPEG_MARKER_COM	Common/videodev2.h	383;"	d
V4L2_JPEG_MARKER_DHT	Common/videodev2.h	380;"	d
V4L2_JPEG_MARKER_DQT	Common/videodev2.h	381;"	d
V4L2_JPEG_MARKER_DRI	Common/videodev2.h	382;"	d
V4L2_MEMORY_MMAP	Common/videodev2.h	/^	V4L2_MEMORY_MMAP             = 1,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_OVERLAY	Common/videodev2.h	/^	V4L2_MEMORY_OVERLAY          = 3,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_USERPTR	Common/videodev2.h	/^	V4L2_MEMORY_USERPTR          = 2,$/;"	e	enum:v4l2_memory
V4L2_MODE_HIGHQUALITY	Common/videodev2.h	484;"	d
V4L2_MPEG_AC3	Common/videodev2.h	/^	V4L2_MPEG_AC3,		\/* AC3 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_ASPECT_16_9	Common/videodev2.h	/^	V4L2_MPEG_ASPECT_16_9   = 3,   \/* 16 : 9       *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_ASPECT_1_221	Common/videodev2.h	/^	V4L2_MPEG_ASPECT_1_221  = 4,   \/*  1 : 2,21    *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_ASPECT_4_3	Common/videodev2.h	/^	V4L2_MPEG_ASPECT_4_3    = 2,   \/*  4 : 3       *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_ASPECT_SQUARE	Common/videodev2.h	/^	V4L2_MPEG_ASPECT_SQUARE = 1,   \/* square pixel *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_AU_2_I	Common/videodev2.h	/^	V4L2_MPEG_AU_2_I,	\/* MPEG-2 layer 1 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_AU_2_II	Common/videodev2.h	/^	V4L2_MPEG_AU_2_II,	\/* MPEG-2 layer 2 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_AU_2_III	Common/videodev2.h	/^	V4L2_MPEG_AU_2_III,	\/* MPEG-2 layer 3 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_LPCM	Common/videodev2.h	/^	V4L2_MPEG_LPCM,		\/* LPCM *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_PS_2	Common/videodev2.h	/^	V4L2_MPEG_PS_2,		\/* MPEG-2 program stream *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_PS_DVD	Common/videodev2.h	/^	V4L2_MPEG_PS_DVD,      	\/* MPEG-2 program stream with DVD header fixups *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_SS_1	Common/videodev2.h	/^	V4L2_MPEG_SS_1,		\/* MPEG-1 system stream *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_TS_2	Common/videodev2.h	/^	V4L2_MPEG_TS_2,		\/* MPEG-2 transport stream *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_VI_1	Common/videodev2.h	/^	V4L2_MPEG_VI_1,		\/* MPEG-1 *\/$/;"	e	enum:v4l2_mpeg_videotype
V4L2_MPEG_VI_2	Common/videodev2.h	/^	V4L2_MPEG_VI_2,		\/* MPEG-2 *\/$/;"	e	enum:v4l2_mpeg_videotype
V4L2_OUTPUT_TYPE_ANALOG	Common/videodev2.h	648;"	d
V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY	Common/videodev2.h	649;"	d
V4L2_OUTPUT_TYPE_MODULATOR	Common/videodev2.h	647;"	d
V4L2_PIX_FMT_BGR24	Common/videodev2.h	187;"	d
V4L2_PIX_FMT_BGR32	Common/videodev2.h	189;"	d
V4L2_PIX_FMT_DV	Common/videodev2.h	216;"	d
V4L2_PIX_FMT_GREY	Common/videodev2.h	191;"	d
V4L2_PIX_FMT_HI240	Common/videodev2.h	208;"	d
V4L2_PIX_FMT_JPEG	Common/videodev2.h	215;"	d
V4L2_PIX_FMT_MJPEG	Common/videodev2.h	214;"	d
V4L2_PIX_FMT_MPEG	Common/videodev2.h	217;"	d
V4L2_PIX_FMT_NV12	Common/videodev2.h	201;"	d
V4L2_PIX_FMT_NV21	Common/videodev2.h	202;"	d
V4L2_PIX_FMT_RGB24	Common/videodev2.h	188;"	d
V4L2_PIX_FMT_RGB32	Common/videodev2.h	190;"	d
V4L2_PIX_FMT_RGB332	Common/videodev2.h	182;"	d
V4L2_PIX_FMT_RGB555	Common/videodev2.h	183;"	d
V4L2_PIX_FMT_RGB555X	Common/videodev2.h	185;"	d
V4L2_PIX_FMT_RGB565	Common/videodev2.h	184;"	d
V4L2_PIX_FMT_RGB565X	Common/videodev2.h	186;"	d
V4L2_PIX_FMT_SBGGR8	Common/videodev2.h	211;"	d
V4L2_PIX_FMT_SN9C10X	Common/videodev2.h	221;"	d
V4L2_PIX_FMT_UYVY	Common/videodev2.h	195;"	d
V4L2_PIX_FMT_WNVA	Common/videodev2.h	220;"	d
V4L2_PIX_FMT_Y41P	Common/videodev2.h	198;"	d
V4L2_PIX_FMT_YUV410	Common/videodev2.h	205;"	d
V4L2_PIX_FMT_YUV411P	Common/videodev2.h	197;"	d
V4L2_PIX_FMT_YUV420	Common/videodev2.h	206;"	d
V4L2_PIX_FMT_YUV422P	Common/videodev2.h	196;"	d
V4L2_PIX_FMT_YUYV	Common/videodev2.h	194;"	d
V4L2_PIX_FMT_YVU410	Common/videodev2.h	192;"	d
V4L2_PIX_FMT_YVU420	Common/videodev2.h	193;"	d
V4L2_PIX_FMT_YYUV	Common/videodev2.h	207;"	d
V4L2_PRIORITY_BACKGROUND	Common/videodev2.h	/^	V4L2_PRIORITY_BACKGROUND  = 1,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_DEFAULT	Common/videodev2.h	/^	V4L2_PRIORITY_DEFAULT     = V4L2_PRIORITY_INTERACTIVE,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_INTERACTIVE	Common/videodev2.h	/^	V4L2_PRIORITY_INTERACTIVE = 2,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_RECORD	Common/videodev2.h	/^	V4L2_PRIORITY_RECORD      = 3,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_UNSET	Common/videodev2.h	/^	V4L2_PRIORITY_UNSET       = 0,  \/* not initialized *\/$/;"	e	enum:v4l2_priority
V4L2_STD_525_60	Common/videodev2.h	571;"	d
V4L2_STD_625_50	Common/videodev2.h	574;"	d
V4L2_STD_ALL	Common/videodev2.h	582;"	d
V4L2_STD_ATSC	Common/videodev2.h	578;"	d
V4L2_STD_ATSC_16_VSB	Common/videodev2.h	547;"	d
V4L2_STD_ATSC_8_VSB	Common/videodev2.h	546;"	d
V4L2_STD_NTSC	Common/videodev2.h	560;"	d
V4L2_STD_NTSC_M	Common/videodev2.h	534;"	d
V4L2_STD_NTSC_M_JP	Common/videodev2.h	535;"	d
V4L2_STD_PAL	Common/videodev2.h	556;"	d
V4L2_STD_PAL_60	Common/videodev2.h	532;"	d
V4L2_STD_PAL_B	Common/videodev2.h	520;"	d
V4L2_STD_PAL_B1	Common/videodev2.h	521;"	d
V4L2_STD_PAL_BG	Common/videodev2.h	550;"	d
V4L2_STD_PAL_D	Common/videodev2.h	525;"	d
V4L2_STD_PAL_D1	Common/videodev2.h	526;"	d
V4L2_STD_PAL_DK	Common/videodev2.h	553;"	d
V4L2_STD_PAL_G	Common/videodev2.h	522;"	d
V4L2_STD_PAL_H	Common/videodev2.h	523;"	d
V4L2_STD_PAL_I	Common/videodev2.h	524;"	d
V4L2_STD_PAL_K	Common/videodev2.h	527;"	d
V4L2_STD_PAL_M	Common/videodev2.h	529;"	d
V4L2_STD_PAL_N	Common/videodev2.h	530;"	d
V4L2_STD_PAL_Nc	Common/videodev2.h	531;"	d
V4L2_STD_SECAM	Common/videodev2.h	565;"	d
V4L2_STD_SECAM_B	Common/videodev2.h	537;"	d
V4L2_STD_SECAM_D	Common/videodev2.h	538;"	d
V4L2_STD_SECAM_DK	Common/videodev2.h	562;"	d
V4L2_STD_SECAM_G	Common/videodev2.h	539;"	d
V4L2_STD_SECAM_H	Common/videodev2.h	540;"	d
V4L2_STD_SECAM_K	Common/videodev2.h	541;"	d
V4L2_STD_SECAM_K1	Common/videodev2.h	542;"	d
V4L2_STD_SECAM_L	Common/videodev2.h	543;"	d
V4L2_STD_UNKNOWN	Common/videodev2.h	581;"	d
V4L2_TC_FLAG_COLORFRAME	Common/videodev2.h	262;"	d
V4L2_TC_FLAG_DROPFRAME	Common/videodev2.h	261;"	d
V4L2_TC_TYPE_24FPS	Common/videodev2.h	254;"	d
V4L2_TC_TYPE_25FPS	Common/videodev2.h	255;"	d
V4L2_TC_TYPE_30FPS	Common/videodev2.h	256;"	d
V4L2_TC_TYPE_50FPS	Common/videodev2.h	257;"	d
V4L2_TC_TYPE_60FPS	Common/videodev2.h	258;"	d
V4L2_TC_USERBITS_8BITCHARS	Common/videodev2.h	265;"	d
V4L2_TC_USERBITS_USERDEFINED	Common/videodev2.h	264;"	d
V4L2_TC_USERBITS_field	Common/videodev2.h	263;"	d
V4L2_TUNER_ANALOG_TV	Common/videodev2.h	/^	V4L2_TUNER_ANALOG_TV	     = 2,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_CAP_LANG1	Common/videodev2.h	753;"	d
V4L2_TUNER_CAP_LANG2	Common/videodev2.h	751;"	d
V4L2_TUNER_CAP_LOW	Common/videodev2.h	748;"	d
V4L2_TUNER_CAP_NORM	Common/videodev2.h	749;"	d
V4L2_TUNER_CAP_SAP	Common/videodev2.h	752;"	d
V4L2_TUNER_CAP_STEREO	Common/videodev2.h	750;"	d
V4L2_TUNER_DIGITAL_TV	Common/videodev2.h	/^	V4L2_TUNER_DIGITAL_TV	     = 3,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_MODE_LANG1	Common/videodev2.h	767;"	d
V4L2_TUNER_MODE_LANG2	Common/videodev2.h	765;"	d
V4L2_TUNER_MODE_MONO	Common/videodev2.h	763;"	d
V4L2_TUNER_MODE_SAP	Common/videodev2.h	766;"	d
V4L2_TUNER_MODE_STEREO	Common/videodev2.h	764;"	d
V4L2_TUNER_RADIO	Common/videodev2.h	/^	V4L2_TUNER_RADIO	     = 1,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_SUB_LANG1	Common/videodev2.h	760;"	d
V4L2_TUNER_SUB_LANG2	Common/videodev2.h	758;"	d
V4L2_TUNER_SUB_MONO	Common/videodev2.h	756;"	d
V4L2_TUNER_SUB_SAP	Common/videodev2.h	759;"	d
V4L2_TUNER_SUB_STEREO	Common/videodev2.h	757;"	d
V4L2_VBI_INTERLACED	Common/videodev2.h	824;"	d
V4L2_VBI_UNSYNC	Common/videodev2.h	823;"	d
VIDIOC_CROPCAP	Common/videodev2.h	908;"	d
VIDIOC_CROPCAP_OLD	Common/videodev2.h	926;"	d
VIDIOC_DQBUF	Common/videodev2.h	880;"	d
VIDIOC_ENUMAUDIO	Common/videodev2.h	915;"	d
VIDIOC_ENUMAUDOUT	Common/videodev2.h	916;"	d
VIDIOC_ENUMINPUT	Common/videodev2.h	888;"	d
VIDIOC_ENUMOUTPUT	Common/videodev2.h	901;"	d
VIDIOC_ENUMSTD	Common/videodev2.h	887;"	d
VIDIOC_ENUM_FMT	Common/videodev2.h	867;"	d
VIDIOC_G_AUDIO	Common/videodev2.h	893;"	d
VIDIOC_G_AUDIO_OLD	Common/videodev2.h	924;"	d
VIDIOC_G_AUDOUT	Common/videodev2.h	902;"	d
VIDIOC_G_AUDOUT_OLD	Common/videodev2.h	925;"	d
VIDIOC_G_CROP	Common/videodev2.h	909;"	d
VIDIOC_G_CTRL	Common/videodev2.h	889;"	d
VIDIOC_G_FBUF	Common/videodev2.h	876;"	d
VIDIOC_G_FMT	Common/videodev2.h	868;"	d
VIDIOC_G_FREQUENCY	Common/videodev2.h	906;"	d
VIDIOC_G_INPUT	Common/videodev2.h	897;"	d
VIDIOC_G_JPEGCOMP	Common/videodev2.h	911;"	d
VIDIOC_G_MODULATOR	Common/videodev2.h	904;"	d
VIDIOC_G_MPEGCOMP	Common/videodev2.h	871;"	d
VIDIOC_G_OUTPUT	Common/videodev2.h	899;"	d
VIDIOC_G_PARM	Common/videodev2.h	883;"	d
VIDIOC_G_PRIORITY	Common/videodev2.h	917;"	d
VIDIOC_G_STD	Common/videodev2.h	885;"	d
VIDIOC_G_TUNER	Common/videodev2.h	891;"	d
VIDIOC_OVERLAY	Common/videodev2.h	878;"	d
VIDIOC_OVERLAY_OLD	Common/videodev2.h	921;"	d
VIDIOC_QBUF	Common/videodev2.h	879;"	d
VIDIOC_QUERYBUF	Common/videodev2.h	875;"	d
VIDIOC_QUERYCAP	Common/videodev2.h	865;"	d
VIDIOC_QUERYCTRL	Common/videodev2.h	895;"	d
VIDIOC_QUERYMENU	Common/videodev2.h	896;"	d
VIDIOC_QUERYSTD	Common/videodev2.h	913;"	d
VIDIOC_REQBUFS	Common/videodev2.h	874;"	d
VIDIOC_RESERVED	Common/videodev2.h	866;"	d
VIDIOC_STREAMOFF	Common/videodev2.h	882;"	d
VIDIOC_STREAMON	Common/videodev2.h	881;"	d
VIDIOC_S_AUDIO	Common/videodev2.h	894;"	d
VIDIOC_S_AUDOUT	Common/videodev2.h	903;"	d
VIDIOC_S_CROP	Common/videodev2.h	910;"	d
VIDIOC_S_CTRL	Common/videodev2.h	890;"	d
VIDIOC_S_CTRL_OLD	Common/videodev2.h	923;"	d
VIDIOC_S_FBUF	Common/videodev2.h	877;"	d
VIDIOC_S_FMT	Common/videodev2.h	869;"	d
VIDIOC_S_FREQUENCY	Common/videodev2.h	907;"	d
VIDIOC_S_INPUT	Common/videodev2.h	898;"	d
VIDIOC_S_JPEGCOMP	Common/videodev2.h	912;"	d
VIDIOC_S_MODULATOR	Common/videodev2.h	905;"	d
VIDIOC_S_MPEGCOMP	Common/videodev2.h	872;"	d
VIDIOC_S_OUTPUT	Common/videodev2.h	900;"	d
VIDIOC_S_PARM	Common/videodev2.h	884;"	d
VIDIOC_S_PARM_OLD	Common/videodev2.h	922;"	d
VIDIOC_S_PRIORITY	Common/videodev2.h	918;"	d
VIDIOC_S_STD	Common/videodev2.h	886;"	d
VIDIOC_S_TUNER	Common/videodev2.h	892;"	d
VIDIOC_TRY_FMT	Common/videodev2.h	914;"	d
__LINUX_VIDEODEV2_H	Common/videodev2.h	2;"	d
afc	Common/videodev2.h	/^	__s32			afc;$/;"	m	struct:v4l2_tuner
au_bitrate	Common/videodev2.h	/^	struct v4l2_bitrate		au_bitrate;$/;"	m	struct:v4l2_mpeg_compression	typeref:struct:v4l2_mpeg_compression::v4l2_bitrate
au_pesid	Common/videodev2.h	/^	__u8                            au_pesid;$/;"	m	struct:v4l2_mpeg_compression
au_sample_rate	Common/videodev2.h	/^	__u32				au_sample_rate;$/;"	m	struct:v4l2_mpeg_compression
au_type	Common/videodev2.h	/^	enum v4l2_mpeg_audiotype	au_type;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_audiotype
audioset	Common/videodev2.h	/^	__u32	     audioset;	        \/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_input
audioset	Common/videodev2.h	/^	__u32	     audioset;	        \/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_output
audmode	Common/videodev2.h	/^	__u32			audmode;$/;"	m	struct:v4l2_tuner
base	Common/videodev2.h	/^	void*                   base;$/;"	m	struct:v4l2_framebuffer
bitmap	Common/videodev2.h	/^	void			*bitmap;$/;"	m	struct:v4l2_window
bounds	Common/videodev2.h	/^        struct v4l2_rect        bounds;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
bus_info	Common/videodev2.h	/^	__u8	bus_info[32];	\/* "PCI:" + pci_name(pci_dev) *\/$/;"	m	struct:v4l2_capability
bytesperline	Common/videodev2.h	/^	__u32            	bytesperline;	\/* for padding, zero if unused *\/$/;"	m	struct:v4l2_pix_format
bytesused	Common/videodev2.h	/^	__u32			bytesused;$/;"	m	struct:v4l2_buffer
c	Common/videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::v4l2_rect
c	Common/videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_crop	typeref:struct:v4l2_crop::v4l2_rect
capabilities	Common/videodev2.h	/^	__u32	capabilities;	\/* Device capabilities *\/$/;"	m	struct:v4l2_capability
capability	Common/videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_framebuffer
capability	Common/videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_modulator
capability	Common/videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_tuner
capability	Common/videodev2.h	/^	__u32		   capability;	  \/*  Supported modes *\/$/;"	m	struct:v4l2_captureparm
capability	Common/videodev2.h	/^	__u32		   capability;	 \/*  Supported modes *\/$/;"	m	struct:v4l2_outputparm
capability	Common/videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audio
capability	Common/videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audioout
capture	Common/videodev2.h	/^		struct v4l2_captureparm	capture;$/;"	m	union:v4l2_streamparm::__anon41	typeref:struct:v4l2_streamparm::__anon41::v4l2_captureparm
capturemode	Common/videodev2.h	/^	__u32		   capturemode;	  \/*  Current mode *\/$/;"	m	struct:v4l2_captureparm
card	Common/videodev2.h	/^	__u8	card[32];	\/* i.e. "Hauppauge WinTV" *\/$/;"	m	struct:v4l2_capability
chromakey	Common/videodev2.h	/^	__u32			chromakey;$/;"	m	struct:v4l2_window
clipcount	Common/videodev2.h	/^	__u32			clipcount;$/;"	m	struct:v4l2_window
clips	Common/videodev2.h	/^	struct v4l2_clip	*clips;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::v4l2_clip
closed_gops	Common/videodev2.h	/^	__u32                           closed_gops:1;$/;"	m	struct:v4l2_mpeg_compression
colorspace	Common/videodev2.h	/^        enum v4l2_colorspace	colorspace;$/;"	m	struct:v4l2_pix_format	typeref:enum:v4l2_pix_format::v4l2_colorspace
count	Common/videodev2.h	/^	__u32	                count;$/;"	m	struct:v4l2_requestbuffers
count	Common/videodev2.h	/^	__u32	count[2];$/;"	m	struct:v4l2_vbi_format
default_value	Common/videodev2.h	/^	__s32		     default_value;$/;"	m	struct:v4l2_queryctrl
defrect	Common/videodev2.h	/^        struct v4l2_rect        defrect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
denominator	Common/videodev2.h	/^	__u32   denominator;$/;"	m	struct:v4l2_fract
description	Common/videodev2.h	/^	__u8	            description[32];   \/* Description string *\/$/;"	m	struct:v4l2_fmtdesc
driver	Common/videodev2.h	/^	__u8	driver[16];	\/* i.e. "bttv" *\/$/;"	m	struct:v4l2_capability
extendedmode	Common/videodev2.h	/^	__u32		   extendedmode;  \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_captureparm
extendedmode	Common/videodev2.h	/^	__u32		   extendedmode; \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_outputparm
field	Common/videodev2.h	/^	enum v4l2_field		field;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_field
field	Common/videodev2.h	/^	enum v4l2_field  	field;$/;"	m	struct:v4l2_pix_format	typeref:enum:v4l2_pix_format::v4l2_field
field	Common/videodev2.h	/^	enum v4l2_field  	field;$/;"	m	struct:v4l2_window	typeref:enum:v4l2_window::v4l2_field
flags	Common/videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_buffer
flags	Common/videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_framebuffer
flags	Common/videodev2.h	/^	__u32	flags;			\/* V4L2_VBI_* *\/$/;"	m	struct:v4l2_vbi_format
flags	Common/videodev2.h	/^	__u32	flags;$/;"	m	struct:v4l2_timecode
flags	Common/videodev2.h	/^	__u32                flags;$/;"	m	struct:v4l2_queryctrl
flags	Common/videodev2.h	/^	__u32               flags;$/;"	m	struct:v4l2_fmtdesc
fmt	Common/videodev2.h	/^	struct v4l2_pix_format	fmt;$/;"	m	struct:v4l2_framebuffer	typeref:struct:v4l2_framebuffer::v4l2_pix_format
fmt	Common/videodev2.h	/^	} fmt;$/;"	m	struct:v4l2_format	typeref:union:v4l2_format::__anon40
framelines	Common/videodev2.h	/^	__u32		     framelines;$/;"	m	struct:v4l2_standard
frameperiod	Common/videodev2.h	/^	struct v4l2_fract    frameperiod; \/* Frames, not fields *\/$/;"	m	struct:v4l2_standard	typeref:struct:v4l2_standard::v4l2_fract
frames	Common/videodev2.h	/^	__u8	frames;$/;"	m	struct:v4l2_timecode
frequency	Common/videodev2.h	/^        __u32	              frequency;$/;"	m	struct:v4l2_frequency
height	Common/videodev2.h	/^	__s32   height;$/;"	m	struct:v4l2_rect
height	Common/videodev2.h	/^	__u32	         	height;$/;"	m	struct:v4l2_pix_format
hours	Common/videodev2.h	/^	__u8	hours;$/;"	m	struct:v4l2_timecode
id	Common/videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_control
id	Common/videodev2.h	/^	__u32		id;$/;"	m	struct:v4l2_querymenu
id	Common/videodev2.h	/^	__u32	             id;$/;"	m	struct:v4l2_queryctrl
id	Common/videodev2.h	/^	v4l2_std_id          id;$/;"	m	struct:v4l2_standard
index	Common/videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_buffer
index	Common/videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_modulator
index	Common/videodev2.h	/^	__u32		index;$/;"	m	struct:v4l2_querymenu
index	Common/videodev2.h	/^	__u32	       	     index;$/;"	m	struct:v4l2_standard
index	Common/videodev2.h	/^	__u32	            index;             \/* Format number      *\/$/;"	m	struct:v4l2_fmtdesc
index	Common/videodev2.h	/^	__u32	     index;		\/*  Which input *\/$/;"	m	struct:v4l2_input
index	Common/videodev2.h	/^	__u32	     index;		\/*  Which output *\/$/;"	m	struct:v4l2_output
index	Common/videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audio
index	Common/videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audioout
index	Common/videodev2.h	/^	__u32                   index;$/;"	m	struct:v4l2_tuner
input	Common/videodev2.h	/^	__u32			input;$/;"	m	struct:v4l2_buffer
jpeg_markers	Common/videodev2.h	/^	__u32 jpeg_markers;     \/* Which markers should go into the JPEG$/;"	m	struct:v4l2_jpegcompression
left	Common/videodev2.h	/^	__s32   left;$/;"	m	struct:v4l2_rect
length	Common/videodev2.h	/^	__u32			length;$/;"	m	struct:v4l2_buffer
m	Common/videodev2.h	/^	} m;$/;"	m	struct:v4l2_buffer	typeref:union:v4l2_buffer::__anon39
max	Common/videodev2.h	/^	__u32			max;$/;"	m	struct:v4l2_bitrate
maximum	Common/videodev2.h	/^	__s32		     maximum;$/;"	m	struct:v4l2_queryctrl
memory	Common/videodev2.h	/^	enum v4l2_memory        memory;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_memory
memory	Common/videodev2.h	/^	enum v4l2_memory        memory;$/;"	m	struct:v4l2_requestbuffers	typeref:enum:v4l2_requestbuffers::v4l2_memory
min	Common/videodev2.h	/^	__u32			min;$/;"	m	struct:v4l2_bitrate
minimum	Common/videodev2.h	/^	__s32		     minimum;	\/* Note signedness *\/$/;"	m	struct:v4l2_queryctrl
minutes	Common/videodev2.h	/^	__u8	minutes;$/;"	m	struct:v4l2_timecode
mode	Common/videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audio
mode	Common/videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audioout
mode	Common/videodev2.h	/^	enum v4l2_bitrate_mode	mode;$/;"	m	struct:v4l2_bitrate	typeref:enum:v4l2_bitrate::v4l2_bitrate_mode
modulator	Common/videodev2.h	/^	__u32	     modulator;         \/*  Associated modulator *\/$/;"	m	struct:v4l2_output
name	Common/videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_modulator
name	Common/videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_tuner
name	Common/videodev2.h	/^	__u8		     name[24];$/;"	m	struct:v4l2_standard
name	Common/videodev2.h	/^	__u8		     name[32];	\/* Whatever *\/$/;"	m	struct:v4l2_queryctrl
name	Common/videodev2.h	/^	__u8		name[32];	\/* Whatever *\/$/;"	m	struct:v4l2_querymenu
name	Common/videodev2.h	/^	__u8	     name[32];	        \/*  Label *\/$/;"	m	struct:v4l2_input
name	Common/videodev2.h	/^	__u8	     name[32];	        \/*  Label *\/$/;"	m	struct:v4l2_output
name	Common/videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audio
name	Common/videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audioout
next	Common/videodev2.h	/^	struct v4l2_clip	*next;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::v4l2_clip
numerator	Common/videodev2.h	/^	__u32   numerator;$/;"	m	struct:v4l2_fract
offset	Common/videodev2.h	/^		__u32           offset;$/;"	m	union:v4l2_buffer::__anon39
offset	Common/videodev2.h	/^	__u32	offset;$/;"	m	struct:v4l2_vbi_format
output	Common/videodev2.h	/^		struct v4l2_outputparm	output;$/;"	m	union:v4l2_streamparm::__anon41	typeref:struct:v4l2_streamparm::__anon41::v4l2_outputparm
outputmode	Common/videodev2.h	/^	__u32		   outputmode;	 \/*  Current mode *\/$/;"	m	struct:v4l2_outputparm
parm	Common/videodev2.h	/^	} parm;$/;"	m	struct:v4l2_streamparm	typeref:union:v4l2_streamparm::__anon41
pix	Common/videodev2.h	/^		struct v4l2_pix_format	pix;  \/\/ V4L2_BUF_TYPE_VIDEO_CAPTURE$/;"	m	union:v4l2_format::__anon40	typeref:struct:v4l2_format::__anon40::v4l2_pix_format
pixelaspect	Common/videodev2.h	/^        struct v4l2_fract       pixelaspect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_fract
pixelformat	Common/videodev2.h	/^	__u32	         	pixelformat;$/;"	m	struct:v4l2_pix_format
pixelformat	Common/videodev2.h	/^	__u32	            pixelformat;       \/* Format fourcc      *\/$/;"	m	struct:v4l2_fmtdesc
priv	Common/videodev2.h	/^	__u32			priv;		\/* private data, depends on pixelformat *\/$/;"	m	struct:v4l2_pix_format
ps_size	Common/videodev2.h	/^	__u16				ps_size;$/;"	m	struct:v4l2_mpeg_compression
pulldown	Common/videodev2.h	/^	__u32                           pulldown:1;$/;"	m	struct:v4l2_mpeg_compression
quality	Common/videodev2.h	/^	int quality;$/;"	m	struct:v4l2_jpegcompression
rangehigh	Common/videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_modulator
rangehigh	Common/videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_tuner
rangelow	Common/videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_modulator
rangelow	Common/videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_tuner
raw_data	Common/videodev2.h	/^		__u8	raw_data[200];        \/\/ user-defined$/;"	m	union:v4l2_format::__anon40
raw_data	Common/videodev2.h	/^		__u8	raw_data[200];  \/* user-defined *\/$/;"	m	union:v4l2_streamparm::__anon41
readbuffers	Common/videodev2.h	/^	__u32              readbuffers;   \/*  # of buffers for read *\/$/;"	m	struct:v4l2_captureparm
reserved	Common/videodev2.h	/^	__u32			reserved;$/;"	m	struct:v4l2_buffer
reserved	Common/videodev2.h	/^	__u32			reserved[4];$/;"	m	struct:v4l2_modulator
reserved	Common/videodev2.h	/^	__u32			reserved[4];$/;"	m	struct:v4l2_tuner
reserved	Common/videodev2.h	/^	__u32		     reserved[2];$/;"	m	struct:v4l2_queryctrl
reserved	Common/videodev2.h	/^	__u32		     reserved[4];$/;"	m	struct:v4l2_standard
reserved	Common/videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_captureparm
reserved	Common/videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_outputparm
reserved	Common/videodev2.h	/^	__u32		reserved;$/;"	m	struct:v4l2_querymenu
reserved	Common/videodev2.h	/^	__u32	                reserved[2];$/;"	m	struct:v4l2_requestbuffers
reserved	Common/videodev2.h	/^	__u32	              reserved[8];$/;"	m	struct:v4l2_frequency
reserved	Common/videodev2.h	/^	__u32	            reserved[4];$/;"	m	struct:v4l2_fmtdesc
reserved	Common/videodev2.h	/^	__u32	     reserved[4];$/;"	m	struct:v4l2_input
reserved	Common/videodev2.h	/^	__u32	     reserved[4];$/;"	m	struct:v4l2_output
reserved	Common/videodev2.h	/^	__u32	reserved[2];		\/* must be zero *\/$/;"	m	struct:v4l2_vbi_format
reserved	Common/videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audio
reserved	Common/videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audioout
reserved	Common/videodev2.h	/^	__u32	reserved[4];$/;"	m	struct:v4l2_capability
reserved_1	Common/videodev2.h	/^	__u16				reserved_1;    \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_2	Common/videodev2.h	/^	__u8                            reserved_2[3]; \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_3	Common/videodev2.h	/^	__u8                            reserved_3[3]; \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_4	Common/videodev2.h	/^	__u32                           reserved_4:30; \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_5	Common/videodev2.h	/^	__u32				reserved_5[8];$/;"	m	struct:v4l2_mpeg_compression
rxsubchans	Common/videodev2.h	/^	__u32			rxsubchans;$/;"	m	struct:v4l2_tuner
sample_format	Common/videodev2.h	/^	__u32	sample_format;		\/* V4L2_PIX_FMT_* *\/$/;"	m	struct:v4l2_vbi_format
samples_per_line	Common/videodev2.h	/^	__u32	samples_per_line;$/;"	m	struct:v4l2_vbi_format
sampling_rate	Common/videodev2.h	/^	__u32	sampling_rate;		\/* in 1 Hz *\/$/;"	m	struct:v4l2_vbi_format
seconds	Common/videodev2.h	/^	__u8	seconds;$/;"	m	struct:v4l2_timecode
sequence	Common/videodev2.h	/^	__u32			sequence;$/;"	m	struct:v4l2_buffer
signal	Common/videodev2.h	/^	__s32			signal;$/;"	m	struct:v4l2_tuner
sizeimage	Common/videodev2.h	/^	__u32          	 	sizeimage;$/;"	m	struct:v4l2_pix_format
st_bitrate	Common/videodev2.h	/^	struct v4l2_bitrate		st_bitrate;$/;"	m	struct:v4l2_mpeg_compression	typeref:struct:v4l2_mpeg_compression::v4l2_bitrate
st_type	Common/videodev2.h	/^	enum v4l2_mpeg_streamtype	st_type;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_streamtype
start	Common/videodev2.h	/^	__s32	start[2];$/;"	m	struct:v4l2_vbi_format
status	Common/videodev2.h	/^	__u32	     status;$/;"	m	struct:v4l2_input
std	Common/videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_input
std	Common/videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_output
step	Common/videodev2.h	/^	__s32	             step;$/;"	m	struct:v4l2_queryctrl
target	Common/videodev2.h	/^	__u32			target;  \/* use this one for CBR *\/$/;"	m	struct:v4l2_bitrate
timecode	Common/videodev2.h	/^	struct v4l2_timecode	timecode;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::v4l2_timecode
timeperframe	Common/videodev2.h	/^	struct v4l2_fract  timeperframe;  \/*  Time per frame in .1us units *\/$/;"	m	struct:v4l2_captureparm	typeref:struct:v4l2_captureparm::v4l2_fract
timeperframe	Common/videodev2.h	/^	struct v4l2_fract  timeperframe; \/*  Time per frame in seconds *\/$/;"	m	struct:v4l2_outputparm	typeref:struct:v4l2_outputparm::v4l2_fract
timestamp	Common/videodev2.h	/^	struct timeval		timestamp;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::timeval
top	Common/videodev2.h	/^	__s32   top;$/;"	m	struct:v4l2_rect
ts_pid_audio	Common/videodev2.h	/^	__u16				ts_pid_audio;$/;"	m	struct:v4l2_mpeg_compression
ts_pid_pcr	Common/videodev2.h	/^	__u16				ts_pid_pcr;$/;"	m	struct:v4l2_mpeg_compression
ts_pid_pmt	Common/videodev2.h	/^	__u16				ts_pid_pmt;$/;"	m	struct:v4l2_mpeg_compression
ts_pid_video	Common/videodev2.h	/^	__u16				ts_pid_video;$/;"	m	struct:v4l2_mpeg_compression
tuner	Common/videodev2.h	/^	__u32	              tuner;$/;"	m	struct:v4l2_frequency
tuner	Common/videodev2.h	/^	__u32        tuner;             \/*  Associated tuner *\/$/;"	m	struct:v4l2_input
txsubchans	Common/videodev2.h	/^	__u32			txsubchans;$/;"	m	struct:v4l2_modulator
type	Common/videodev2.h	/^	__u32	     type;		\/*  Type of input *\/$/;"	m	struct:v4l2_input
type	Common/videodev2.h	/^	__u32	     type;		\/*  Type of output *\/$/;"	m	struct:v4l2_output
type	Common/videodev2.h	/^	__u32	type;$/;"	m	struct:v4l2_timecode
type	Common/videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_buf_type
type	Common/videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_crop	typeref:enum:v4l2_crop::v4l2_buf_type
type	Common/videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_cropcap	typeref:enum:v4l2_cropcap::v4l2_buf_type
type	Common/videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_requestbuffers	typeref:enum:v4l2_requestbuffers::v4l2_buf_type
type	Common/videodev2.h	/^	enum v4l2_buf_type  type;              \/* buffer type        *\/$/;"	m	struct:v4l2_fmtdesc	typeref:enum:v4l2_fmtdesc::v4l2_buf_type
type	Common/videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_format	typeref:enum:v4l2_format::v4l2_buf_type
type	Common/videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_streamparm	typeref:enum:v4l2_streamparm::v4l2_buf_type
type	Common/videodev2.h	/^	enum v4l2_ctrl_type  type;$/;"	m	struct:v4l2_queryctrl	typeref:enum:v4l2_queryctrl::v4l2_ctrl_type
type	Common/videodev2.h	/^	enum v4l2_tuner_type    type;$/;"	m	struct:v4l2_tuner	typeref:enum:v4l2_tuner::v4l2_tuner_type
type	Common/videodev2.h	/^	enum v4l2_tuner_type  type;$/;"	m	struct:v4l2_frequency	typeref:enum:v4l2_frequency::v4l2_tuner_type
userbits	Common/videodev2.h	/^	__u8	userbits[4];$/;"	m	struct:v4l2_timecode
userptr	Common/videodev2.h	/^		unsigned long   userptr;$/;"	m	union:v4l2_buffer::__anon39
v4l2_audio	Common/videodev2.h	/^struct v4l2_audio$/;"	s
v4l2_audioout	Common/videodev2.h	/^struct v4l2_audioout$/;"	s
v4l2_bitrate	Common/videodev2.h	/^struct v4l2_bitrate {$/;"	s
v4l2_bitrate_mode	Common/videodev2.h	/^enum v4l2_bitrate_mode {$/;"	g
v4l2_buf_type	Common/videodev2.h	/^enum v4l2_buf_type {$/;"	g
v4l2_buffer	Common/videodev2.h	/^struct v4l2_buffer$/;"	s
v4l2_capability	Common/videodev2.h	/^struct v4l2_capability$/;"	s
v4l2_captureparm	Common/videodev2.h	/^struct v4l2_captureparm$/;"	s
v4l2_clip	Common/videodev2.h	/^struct v4l2_clip$/;"	s
v4l2_colorspace	Common/videodev2.h	/^enum v4l2_colorspace {$/;"	g
v4l2_control	Common/videodev2.h	/^struct v4l2_control$/;"	s
v4l2_crop	Common/videodev2.h	/^struct v4l2_crop {$/;"	s
v4l2_cropcap	Common/videodev2.h	/^struct v4l2_cropcap {$/;"	s
v4l2_ctrl_type	Common/videodev2.h	/^enum v4l2_ctrl_type {$/;"	g
v4l2_field	Common/videodev2.h	/^enum v4l2_field {$/;"	g
v4l2_fmtdesc	Common/videodev2.h	/^struct v4l2_fmtdesc$/;"	s
v4l2_format	Common/videodev2.h	/^struct v4l2_format$/;"	s
v4l2_fourcc	Common/videodev2.h	24;"	d
v4l2_fract	Common/videodev2.h	/^struct v4l2_fract {$/;"	s
v4l2_framebuffer	Common/videodev2.h	/^struct v4l2_framebuffer$/;"	s
v4l2_frequency	Common/videodev2.h	/^struct v4l2_frequency$/;"	s
v4l2_input	Common/videodev2.h	/^struct v4l2_input$/;"	s
v4l2_jpegcompression	Common/videodev2.h	/^struct v4l2_jpegcompression$/;"	s
v4l2_memory	Common/videodev2.h	/^enum v4l2_memory {$/;"	g
v4l2_modulator	Common/videodev2.h	/^struct v4l2_modulator$/;"	s
v4l2_mpeg_aspectratio	Common/videodev2.h	/^enum v4l2_mpeg_aspectratio {$/;"	g
v4l2_mpeg_audiotype	Common/videodev2.h	/^enum v4l2_mpeg_audiotype {$/;"	g
v4l2_mpeg_compression	Common/videodev2.h	/^struct v4l2_mpeg_compression {$/;"	s
v4l2_mpeg_streamtype	Common/videodev2.h	/^enum v4l2_mpeg_streamtype {$/;"	g
v4l2_mpeg_videotype	Common/videodev2.h	/^enum v4l2_mpeg_videotype {$/;"	g
v4l2_output	Common/videodev2.h	/^struct v4l2_output$/;"	s
v4l2_outputparm	Common/videodev2.h	/^struct v4l2_outputparm$/;"	s
v4l2_pix_format	Common/videodev2.h	/^struct v4l2_pix_format$/;"	s
v4l2_priority	Common/videodev2.h	/^enum v4l2_priority {$/;"	g
v4l2_queryctrl	Common/videodev2.h	/^struct v4l2_queryctrl$/;"	s
v4l2_querymenu	Common/videodev2.h	/^struct v4l2_querymenu$/;"	s
v4l2_rect	Common/videodev2.h	/^struct v4l2_rect {$/;"	s
v4l2_requestbuffers	Common/videodev2.h	/^struct v4l2_requestbuffers$/;"	s
v4l2_standard	Common/videodev2.h	/^struct v4l2_standard$/;"	s
v4l2_std_id	Common/videodev2.h	/^typedef __u64 v4l2_std_id;$/;"	t
v4l2_streamparm	Common/videodev2.h	/^struct v4l2_streamparm$/;"	s
v4l2_timecode	Common/videodev2.h	/^struct v4l2_timecode$/;"	s
v4l2_tuner	Common/videodev2.h	/^struct v4l2_tuner$/;"	s
v4l2_tuner_type	Common/videodev2.h	/^enum v4l2_tuner_type {$/;"	g
v4l2_vbi_format	Common/videodev2.h	/^struct v4l2_vbi_format$/;"	s
v4l2_window	Common/videodev2.h	/^struct v4l2_window$/;"	s
value	Common/videodev2.h	/^	__s32		     value;$/;"	m	struct:v4l2_control
vbi	Common/videodev2.h	/^		struct v4l2_vbi_format	vbi;  \/\/ V4L2_BUF_TYPE_VBI_CAPTURE$/;"	m	union:v4l2_format::__anon40	typeref:struct:v4l2_format::__anon40::v4l2_vbi_format
version	Common/videodev2.h	/^	__u32   version;        \/* should use KERNEL_VERSION() *\/$/;"	m	struct:v4l2_capability
vi_aspect_ratio	Common/videodev2.h	/^	enum v4l2_mpeg_aspectratio	vi_aspect_ratio;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_aspectratio
vi_bframes_count	Common/videodev2.h	/^	__u16				vi_bframes_count;$/;"	m	struct:v4l2_mpeg_compression
vi_bitrate	Common/videodev2.h	/^	struct v4l2_bitrate		vi_bitrate;$/;"	m	struct:v4l2_mpeg_compression	typeref:struct:v4l2_mpeg_compression::v4l2_bitrate
vi_frame_rate	Common/videodev2.h	/^	__u32				vi_frame_rate;$/;"	m	struct:v4l2_mpeg_compression
vi_frames_per_gop	Common/videodev2.h	/^	__u16				vi_frames_per_gop;$/;"	m	struct:v4l2_mpeg_compression
vi_pesid	Common/videodev2.h	/^	__u8                            vi_pesid;$/;"	m	struct:v4l2_mpeg_compression
vi_type	Common/videodev2.h	/^	enum v4l2_mpeg_videotype	vi_type;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_videotype
w	Common/videodev2.h	/^	struct v4l2_rect        w;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::v4l2_rect
width	Common/videodev2.h	/^	__s32   width;$/;"	m	struct:v4l2_rect
width	Common/videodev2.h	/^	__u32         	 	width;$/;"	m	struct:v4l2_pix_format
win	Common/videodev2.h	/^		struct v4l2_window	win;  \/\/ V4L2_BUF_TYPE_VIDEO_OVERLAY$/;"	m	union:v4l2_format::__anon40	typeref:struct:v4l2_format::__anon40::v4l2_window
writebuffers	Common/videodev2.h	/^	__u32              writebuffers; \/*  # of buffers for write *\/$/;"	m	struct:v4l2_outputparm
V4L2_CID_ARBITRARY	Common/videodev2_s3c.h	12;"	d
V4L2_CID_ART_FREEZE	Common/videodev2_s3c.h	14;"	d
V4L2_CID_EMBOSSING	Common/videodev2_s3c.h	15;"	d
V4L2_CID_NEGATIVE	Common/videodev2_s3c.h	13;"	d
V4L2_CID_ORIGINAL	Common/videodev2_s3c.h	11;"	d
V4L2_CID_ROTATE_180	Common/videodev2_s3c.h	20;"	d
V4L2_CID_ROTATE_270	Common/videodev2_s3c.h	21;"	d
V4L2_CID_ROTATE_90	Common/videodev2_s3c.h	19;"	d
V4L2_CID_ROTATE_BYPASS	Common/videodev2_s3c.h	22;"	d
V4L2_CID_SILHOUETTE	Common/videodev2_s3c.h	16;"	d
V4L2_CID_ZOOMIN	Common/videodev2_s3c.h	25;"	d
V4L2_CID_ZOOMOUT	Common/videodev2_s3c.h	26;"	d
V4L2_INPUT_TYPE_INTERLACE	Common/videodev2_s3c.h	4;"	d
V4L2_INPUT_TYPE_MSDMA	Common/videodev2_s3c.h	3;"	d
V4L2_MSDMA_CODEC	Common/videodev2_s3c.h	/^	V4L2_MSDMA_CODEC             = 1,$/;"	e	enum:v4l2_msdma_input
V4L2_MSDMA_PREVIEW	Common/videodev2_s3c.h	/^	V4L2_MSDMA_PREVIEW           = 2,$/;"	e	enum:v4l2_msdma_input
VIDIOC_MSDMA_START	Common/videodev2_s3c.h	58;"	d
VIDIOC_MSDMA_STOP	Common/videodev2_s3c.h	59;"	d
VIDIOC_S_CAMERA_START	Common/videodev2_s3c.h	36;"	d
VIDIOC_S_CAMERA_STOP	Common/videodev2_s3c.h	37;"	d
VIDIOC_S_INTERLACE_MODE	Common/videodev2_s3c.h	62;"	d
VIDIOC_S_MSDMA	Common/videodev2_s3c.h	60;"	d
height	Common/videodev2_s3c.h	/^	__u32			height;		\/* MSDMA INPUT : Source Y size *\/$/;"	m	struct:v4l2_msdma_format
input_path	Common/videodev2_s3c.h	/^	enum v4l2_msdma_input  	input_path;$/;"	m	struct:v4l2_msdma_format	typeref:enum:v4l2_msdma_format::v4l2_msdma_input
pixelformat	Common/videodev2_s3c.h	/^	__u32			pixelformat;$/;"	m	struct:v4l2_msdma_format
v4l2_msdma_format	Common/videodev2_s3c.h	/^struct v4l2_msdma_format$/;"	s
v4l2_msdma_input	Common/videodev2_s3c.h	/^enum v4l2_msdma_input {$/;"	g
width	Common/videodev2_s3c.h	/^	__u32         		width;		\/* MSDMA INPUT : Source X size *\/$/;"	m	struct:v4l2_msdma_format
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
MapFileRead	FrameExtractor/FileRead.c	/^static int MapFileRead(void *p, unsigned char *buf, unsigned int num_read, unsigned int *num_written)$/;"	f	file:
SSB_FILE_READ	FrameExtractor/FileRead.c	/^int SSB_FILE_READ(void *p, unsigned char *buf, unsigned int num_read, unsigned int *num_written)$/;"	f
DATA_FILE	FrameExtractor/FileRead.h	29;"	d
DATA_MEM	FrameExtractor/FileRead.h	30;"	d
MMAP_STRM_PTR	FrameExtractor/FileRead.h	/^} MMAP_STRM_PTR;$/;"	t	typeref:struct:__anon19
SSB_FILE_EOF	FrameExtractor/FileRead.h	34;"	d
SSB_FILE_POS_BEGIN	FrameExtractor/FileRead.h	37;"	d
SSB_FILE_POS_CURRENT	FrameExtractor/FileRead.h	38;"	d
SSB_FILE_POS_END	FrameExtractor/FileRead.h	39;"	d
__SAMSUNG_SYSLSI_AP_FILE_READ_H__	FrameExtractor/FileRead.h	9;"	d
p_cur	FrameExtractor/FileRead.h	/^	unsigned char *p_cur;$/;"	m	struct:__anon19
p_end	FrameExtractor/FileRead.h	/^	unsigned char *p_end;$/;"	m	struct:__anon19
p_start	FrameExtractor/FileRead.h	/^	unsigned char *p_start;$/;"	m	struct:__anon19
FrameExtractorFinal	FrameExtractor/FrameExtractor.c	/^int FrameExtractorFinal(FRAMEX_CTX *pCTX)$/;"	f
FrameExtractorFirst	FrameExtractor/FrameExtractor.c	/^int FrameExtractorFirst(FRAMEX_CTX *pCTX, FRAMEX_IN in)$/;"	f
FrameExtractorInit	FrameExtractor/FrameExtractor.c	/^FRAMEX_CTX *FrameExtractorInit(FRAMEX_IN_TYPE type, unsigned char delimiter[], int delim_leng, int delim_insert)$/;"	f
FrameExtractorNext	FrameExtractor/FrameExtractor.c	/^int FrameExtractorNext(FRAMEX_CTX *pCTX, FRAMEX_IN in, unsigned char outbuf[], int outbuf_size, int *n_fill)$/;"	f
FrameExtractorPeek	FrameExtractor/FrameExtractor.c	/^int FrameExtractorPeek(FRAMEX_CTX *pCTX, FRAMEX_IN in, unsigned char peekbuf[], int peek_size, int *n_fill)$/;"	f
Q_INIT	FrameExtractor/FrameExtractor.c	43;"	d	file:
Q_PEEK	FrameExtractor/FrameExtractor.c	65;"	d	file:
Q_POP	FrameExtractor/FrameExtractor.c	57;"	d	file:
Q_PUSH	FrameExtractor/FrameExtractor.c	50;"	d	file:
next_delimiter	FrameExtractor/FrameExtractor.c	/^static int next_delimiter(FRAMEX_CTX *pCTX, FILE *fpin, unsigned char *outbuf, const int outbuf_size, int *n_fill)$/;"	f	file:
next_delimiter_mem	FrameExtractor/FrameExtractor.c	/^static int next_delimiter_mem(FRAMEX_CTX *pCTX, FRAMEX_STRM_PTR *strm_ptr, unsigned char *outbuf, const int outbuf_size, int *n_fill)$/;"	f	file:
next_frame_peek	FrameExtractor/FrameExtractor.c	/^static int next_frame_peek(FRAMEX_CTX *pCTX, FILE *fpin, unsigned char *peekbuf, const int peek_size, int *n_fill)$/;"	f	file:
next_frame_peek_mem	FrameExtractor/FrameExtractor.c	/^static int next_frame_peek_mem(FRAMEX_CTX *pCTX, FRAMEX_STRM_PTR *strm_ptr, unsigned char *peekbuf, const int peek_size, int *n_fill)$/;"	f	file:
FRAMEX_CONTINUE	FrameExtractor/FrameExtractor.h	57;"	d
FRAMEX_CTX	FrameExtractor/FrameExtractor.h	/^} FRAMEX_CTX;$/;"	t	typeref:struct:stFRAMEX_CTX
FRAMEX_ERR_BUFSIZE_TOO_SMALL	FrameExtractor/FrameExtractor.h	60;"	d
FRAMEX_ERR_EOS	FrameExtractor/FrameExtractor.h	59;"	d
FRAMEX_ERR_NOTFOUND	FrameExtractor/FrameExtractor.h	58;"	d
FRAMEX_IN	FrameExtractor/FrameExtractor.h	/^typedef void * FRAMEX_IN;$/;"	t
FRAMEX_INVALID_PARAM	FrameExtractor/FrameExtractor.h	61;"	d
FRAMEX_IN_TYPE	FrameExtractor/FrameExtractor.h	/^} FRAMEX_IN_TYPE;$/;"	t	typeref:enum:__anon20
FRAMEX_IN_TYPE_FILE	FrameExtractor/FrameExtractor.h	/^	FRAMEX_IN_TYPE_FILE,$/;"	e	enum:__anon20
FRAMEX_IN_TYPE_MEM	FrameExtractor/FrameExtractor.h	/^	FRAMEX_IN_TYPE_MEM,$/;"	e	enum:__anon20
FRAMEX_OK	FrameExtractor/FrameExtractor.h	56;"	d
FRAMEX_STRM_PTR	FrameExtractor/FrameExtractor.h	/^} FRAMEX_STRM_PTR;$/;"	t	typeref:struct:__anon21
QUEUE_CAPACITY	FrameExtractor/FrameExtractor.h	7;"	d
__SAMSUNG_SYSLSI_AP_FRAME_EXTRACTOR_H__	FrameExtractor/FrameExtractor.h	2;"	d
cont_offset	FrameExtractor/FrameExtractor.h	/^	int              cont_offset;$/;"	m	struct:stFRAMEX_CTX
delim_insert	FrameExtractor/FrameExtractor.h	/^	int              delim_insert;$/;"	m	struct:stFRAMEX_CTX
delim_leng	FrameExtractor/FrameExtractor.h	/^	int              delim_leng;$/;"	m	struct:stFRAMEX_CTX
delim_ptr	FrameExtractor/FrameExtractor.h	/^	unsigned char   *delim_ptr;$/;"	m	struct:stFRAMEX_CTX
in_type	FrameExtractor/FrameExtractor.h	/^	FRAMEX_IN_TYPE   in_type;$/;"	m	struct:stFRAMEX_CTX
p_cur	FrameExtractor/FrameExtractor.h	/^	unsigned char *p_cur;$/;"	m	struct:__anon21
p_end	FrameExtractor/FrameExtractor.h	/^	unsigned char *p_end;$/;"	m	struct:__anon21
p_start	FrameExtractor/FrameExtractor.h	/^	unsigned char *p_start;$/;"	m	struct:__anon21
stFRAMEX_CTX	FrameExtractor/FrameExtractor.h	/^typedef struct stFRAMEX_CTX$/;"	s
ExtractConfigStreamH263	FrameExtractor/H263Frames.c	/^int ExtractConfigStreamH263(void *fp,$/;"	f
H263_PICTURE_INFO	FrameExtractor/H263Frames.c	/^} H263_PICTURE_INFO;$/;"	t	typeref:struct:tagH263_PICTURE_INFO	file:
NextFrameH263	FrameExtractor/H263Frames.c	/^int NextFrameH263(void *fp, unsigned char buf[], int buf_size, unsigned int *coding_type)$/;"	f
first_h263_frame	FrameExtractor/H263Frames.c	/^static int first_h263_frame(void *fp, unsigned char buf[])$/;"	f	file:
get_h263_picture_info	FrameExtractor/H263Frames.c	/^static void get_h263_picture_info(unsigned char picture_header[], H263_PICTURE_INFO *h263_picture_info)$/;"	f	file:
h263_delimiter	FrameExtractor/H263Frames.c	/^static unsigned char h263_delimiter[3];$/;"	v	file:
height	FrameExtractor/H263Frames.c	/^	unsigned int height;$/;"	m	struct:tagH263_PICTURE_INFO	file:
next_h263_frame	FrameExtractor/H263Frames.c	/^static int next_h263_frame(void *fp,$/;"	f	file:
picture_coding_type	FrameExtractor/H263Frames.c	/^	unsigned int picture_coding_type;$/;"	m	struct:tagH263_PICTURE_INFO	file:
read_bits	FrameExtractor/H263Frames.c	/^static unsigned int read_bits(unsigned char bytes[], int num_read, int *bit_offset)$/;"	f	file:
tagH263_PICTURE_INFO	FrameExtractor/H263Frames.c	/^typedef struct tagH263_PICTURE_INFO$/;"	s	file:
width	FrameExtractor/H263Frames.c	/^	unsigned int width;$/;"	m	struct:tagH263_PICTURE_INFO	file:
H263_CODING_TYPE_I	FrameExtractor/H263Frames.h	19;"	d
H263_CODING_TYPE_P	FrameExtractor/H263Frames.h	20;"	d
H263_CONFIG_DATA	FrameExtractor/H263Frames.h	/^} H263_CONFIG_DATA;$/;"	t	typeref:struct:__anon25
__SAMSUNG_SYSLSI_AP_H263_FRAMES_H__	FrameExtractor/H263Frames.h	9;"	d
height	FrameExtractor/H263Frames.h	/^	int  width, height;$/;"	m	struct:__anon25
width	FrameExtractor/H263Frames.h	/^	int  width, height;$/;"	m	struct:__anon25
ExtractConfigStreamH264	FrameExtractor/H264Frames.c	/^int ExtractConfigStreamH264(FRAMEX_CTX  *pFrameExCtx,$/;"	f
H264_SLICE_INFO	FrameExtractor/H264Frames.c	/^} H264_SLICE_INFO;$/;"	t	typeref:struct:tagH264_SLICE_INFO	file:
NAL_UNIT_TYPE_TYPE	FrameExtractor/H264Frames.c	17;"	d	file:
NextFrameH264	FrameExtractor/H264Frames.c	/^int NextFrameH264(FRAMEX_CTX  *pFrameExCtx, void *fp, unsigned char buf[], int buf_size, unsigned int *coding_type)$/;"	f
NextIFrameH264	FrameExtractor/H264Frames.c	/^static int NextIFrameH264(FRAMEX_CTX  *pFrameExCtx, void *fp, unsigned char buf[], int buf_size)$/;"	f	file:
add_pps_id	FrameExtractor/H264Frames.c	/^static void add_pps_id(unsigned short pic_parameter_set_id)$/;"	f	file:
find_pps_id	FrameExtractor/H264Frames.c	/^static int find_pps_id(unsigned short pic_parameter_set_id)$/;"	f	file:
first_mb	FrameExtractor/H264Frames.c	/^	unsigned int   first_mb;$/;"	m	struct:tagH264_SLICE_INFO	file:
frame_mbs_only_flag	FrameExtractor/H264Frames.c	/^static unsigned int   frame_mbs_only_flag = 0;$/;"	v	file:
frame_num	FrameExtractor/H264Frames.c	/^	unsigned int   frame_num;$/;"	m	struct:tagH264_SLICE_INFO	file:
get_h264_slice_info	FrameExtractor/H264Frames.c	/^static void get_h264_slice_info(unsigned char slice_header[], H264_SLICE_INFO *h264_slice_info)$/;"	f	file:
log2_max_frame_num_minus4	FrameExtractor/H264Frames.c	/^static unsigned int   log2_max_frame_num_minus4 = 0;$/;"	v	file:
pic_parameter_set_id	FrameExtractor/H264Frames.c	/^	unsigned short pic_parameter_set_id;$/;"	m	struct:tagH264_SLICE_INFO	file:
pic_parameter_set_id_arr	FrameExtractor/H264Frames.c	/^static unsigned short pic_parameter_set_id_arr[32] = {0xFFFF, };$/;"	v	file:
read_bits	FrameExtractor/H264Frames.c	/^static unsigned int read_bits(unsigned char bytes[], int num_read, int *bit_offset)$/;"	f	file:
se_v	FrameExtractor/H264Frames.c	/^static signed int se_v(unsigned char bytes[], int *bit_offset)$/;"	f	file:
slice_type	FrameExtractor/H264Frames.c	/^	unsigned short slice_type;$/;"	m	struct:tagH264_SLICE_INFO	file:
tagH264_SLICE_INFO	FrameExtractor/H264Frames.c	/^typedef struct tagH264_SLICE_INFO$/;"	s	file:
u_n	FrameExtractor/H264Frames.c	/^static unsigned int u_n(unsigned char bytes[], int n_bits, int *bit_offset)$/;"	f	file:
ue_v	FrameExtractor/H264Frames.c	/^static unsigned int ue_v(unsigned char bytes[], int *bit_offset)$/;"	f	file:
H264_CODING_TYPE_I	FrameExtractor/H264Frames.h	19;"	d
H264_CODING_TYPE_P	FrameExtractor/H264Frames.h	20;"	d
H264_CONFIG_DATA	FrameExtractor/H264Frames.h	/^} H264_CONFIG_DATA;$/;"	t	typeref:struct:__anon24
__SAMSUNG_SYSLSI_AP_H264_FRAMES_H__	FrameExtractor/H264Frames.h	9;"	d
height	FrameExtractor/H264Frames.h	/^	int  width, height;$/;"	m	struct:__anon24
width	FrameExtractor/H264Frames.h	/^	int  width, height;$/;"	m	struct:__anon24
ExtractConfigStreamMpeg4	FrameExtractor/MPEG4Frames.c	/^int ExtractConfigStreamMpeg4(FRAMEX_CTX  *pFrameExCtx,$/;"	f
NextFrameMpeg4	FrameExtractor/MPEG4Frames.c	/^int NextFrameMpeg4(FRAMEX_CTX  *pFrameExCtx, void *fp, unsigned char buf[], int buf_size, unsigned int *coding_type)$/;"	f
find_one	FrameExtractor/MPEG4Frames.c	/^static int find_one(unsigned int bits8)$/;"	f	file:
num_bits	FrameExtractor/MPEG4Frames.c	/^static int num_bits(unsigned int bits)$/;"	f	file:
read_bits	FrameExtractor/MPEG4Frames.c	/^static unsigned int read_bits(unsigned char bytes[], int num_read, int *bit_offset)$/;"	f	file:
MPEG4_CODING_TYPE_I	FrameExtractor/MPEG4Frames.h	18;"	d
MPEG4_CODING_TYPE_P	FrameExtractor/MPEG4Frames.h	19;"	d
MPEG4_CONFIG_DATA	FrameExtractor/MPEG4Frames.h	/^} MPEG4_CONFIG_DATA;$/;"	t	typeref:struct:__anon18
__SAMSUNG_SYSLSI_AP_MPEG4_FRAMES_H__	FrameExtractor/MPEG4Frames.h	9;"	d
height	FrameExtractor/MPEG4Frames.h	/^	int  width, height;$/;"	m	struct:__anon18
width	FrameExtractor/MPEG4Frames.h	/^	int  width, height;$/;"	m	struct:__anon18
CC	FrameExtractor/Makefile	/^CC = \/usr\/local\/arm\/4.3.2\/bin\/arm-linux-gcc-4.3.2$/;"	m
CFLAGS	FrameExtractor/Makefile	/^CFLAGS = -g -c -Os -Wall$/;"	m
DEPENDENCY	FrameExtractor/Makefile	/^DEPENDENCY = FileRead.h 		\\$/;"	m
INC	FrameExtractor/Makefile	/^INC = -I..\/Common$/;"	m
OBJECTS	FrameExtractor/Makefile	/^OBJECTS = FileRead.o 		\\$/;"	m
SRCS	FrameExtractor/Makefile	/^SRCS = $(OBJECTS:.o=.c)$/;"	m
TARGET	FrameExtractor/Makefile	/^TARGET = app$/;"	m
ExtractConfigStreamVC1	FrameExtractor/VC1Frames.c	/^int ExtractConfigStreamVC1(void *fp, unsigned char buf[], int buf_size, VC1_CONFIG_DATA *conf_data)$/;"	f
NextFrameVC1	FrameExtractor/VC1Frames.c	/^int NextFrameVC1(void *fp, unsigned char buf[], int buf_size, unsigned int *coding_type)$/;"	f
VC1_FRM_LAYER	FrameExtractor/VC1Frames.c	/^} VC1_FRM_LAYER;$/;"	t	typeref:struct:__anon23	file:
VC1_SEQ_LAYER	FrameExtractor/VC1Frames.c	/^} VC1_SEQ_LAYER;$/;"	t	typeref:struct:__anon22	file:
const_04	FrameExtractor/VC1Frames.c	/^	unsigned int   const_04;$/;"	m	struct:__anon22	file:
const_0C	FrameExtractor/VC1Frames.c	/^	unsigned int   const_0C;$/;"	m	struct:__anon22	file:
const_C5	FrameExtractor/VC1Frames.c	/^	unsigned int   const_C5   : 8;$/;"	m	struct:__anon22	file:
frame_size	FrameExtractor/VC1Frames.c	/^	unsigned int   frame_size : 24;$/;"	m	struct:__anon23	file:
key	FrameExtractor/VC1Frames.c	/^	unsigned int   key        : 1;$/;"	m	struct:__anon23	file:
num_frames	FrameExtractor/VC1Frames.c	/^	unsigned int   num_frames : 24;$/;"	m	struct:__anon22	file:
res	FrameExtractor/VC1Frames.c	/^	unsigned int   res        : 7;$/;"	m	struct:__anon23	file:
struct_a_horz	FrameExtractor/VC1Frames.c	/^	unsigned int   struct_a_horz;$/;"	m	struct:__anon22	file:
struct_a_vert	FrameExtractor/VC1Frames.c	/^	unsigned int   struct_a_vert;$/;"	m	struct:__anon22	file:
struct_b_1	FrameExtractor/VC1Frames.c	/^	unsigned int   struct_b_1;$/;"	m	struct:__anon22	file:
struct_b_2	FrameExtractor/VC1Frames.c	/^	unsigned int   struct_b_2;$/;"	m	struct:__anon22	file:
struct_b_3	FrameExtractor/VC1Frames.c	/^	unsigned int   struct_b_3;$/;"	m	struct:__anon22	file:
struct_c	FrameExtractor/VC1Frames.c	/^	unsigned int   struct_c;$/;"	m	struct:__anon22	file:
timestamp	FrameExtractor/VC1Frames.c	/^	unsigned int   timestamp;$/;"	m	struct:__anon23	file:
VC1_CONFIG_DATA	FrameExtractor/VC1Frames.h	/^} VC1_CONFIG_DATA;$/;"	t	typeref:struct:__anon26
__SAMSUNG_SYSLSI_AP_VC1_FRAMES_H__	FrameExtractor/VC1Frames.h	9;"	d
height	FrameExtractor/VC1Frames.h	/^	int  width, height;$/;"	m	struct:__anon26
width	FrameExtractor/VC1Frames.h	/^	int  width, height;$/;"	m	struct:__anon26
B_RGB565	JPEG_API/JPGApi.c	57;"	d	file:
DEBUG	JPEG_API/JPGApi.c	61;"	d	file:
ENCDEC_TYPE_T	JPEG_API/JPGApi.c	/^}ENCDEC_TYPE_T;$/;"	t	typeref:enum:tagENCDEC_TYPE_T	file:
ExifHeader	JPEG_API/JPGApi.c	/^UCHAR ExifHeader[6]=$/;"	v
ExifInfo	JPEG_API/JPGApi.c	/^	ExifFileInfo *ExifInfo;$/;"	m	struct:tagJPG_CTX	file:
FALSE	JPEG_API/JPGApi.c	60;"	d	file:
G_RGB565	JPEG_API/JPGApi.c	56;"	d	file:
IOCTL_JPG_DECODE	JPEG_API/JPGApi.c	45;"	d	file:
IOCTL_JPG_ENCODE	JPEG_API/JPGApi.c	46;"	d	file:
IOCTL_JPG_GET_FRMBUF	JPEG_API/JPGApi.c	48;"	d	file:
IOCTL_JPG_GET_PHY_FRMBUF	JPEG_API/JPGApi.c	51;"	d	file:
IOCTL_JPG_GET_PHY_THUMB_FRMBUF	JPEG_API/JPGApi.c	52;"	d	file:
IOCTL_JPG_GET_STRBUF	JPEG_API/JPGApi.c	47;"	d	file:
IOCTL_JPG_GET_THUMB_FRMBUF	JPEG_API/JPGApi.c	50;"	d	file:
IOCTL_JPG_GET_THUMB_STRBUF	JPEG_API/JPGApi.c	49;"	d	file:
InBuf	JPEG_API/JPGApi.c	/^	char	*InBuf;$/;"	m	struct:tagJPG_CTX	file:
InThumbBuf	JPEG_API/JPGApi.c	/^	char	*InThumbBuf;$/;"	m	struct:tagJPG_CTX	file:
JPG_CTX	JPEG_API/JPGApi.c	/^}JPG_CTX;$/;"	t	typeref:struct:tagJPG_CTX	file:
JPG_DEC_PROC_PARAM	JPEG_API/JPGApi.c	/^} JPG_DEC_PROC_PARAM;$/;"	t	typeref:struct:tagJPG_DEC_PROC_PARAM	file:
JPG_DRIVER_NAME	JPEG_API/JPGApi.c	41;"	d	file:
JPG_ENC_PROC_PARAM	JPEG_API/JPGApi.c	/^} JPG_ENC_PROC_PARAM;$/;"	t	typeref:struct:tagJPG_ENC_PROC_PARAM	file:
JPG_MAIN	JPEG_API/JPGApi.c	/^	JPG_MAIN,$/;"	e	enum:tagENCDEC_TYPE_T	file:
JPG_THUMBNAIL	JPEG_API/JPGApi.c	/^	JPG_THUMBNAIL$/;"	e	enum:tagENCDEC_TYPE_T	file:
MCUCheck	JPEG_API/JPGApi.c	/^static JPEG_ERRORTYPE MCUCheck(SAMPLE_MODE_T sampleMode, UINT32 width, UINT32 height)$/;"	f	file:
OutBuf	JPEG_API/JPGApi.c	/^	char	*OutBuf;$/;"	m	struct:tagJPG_CTX	file:
OutThumbBuf	JPEG_API/JPGApi.c	/^	char	*OutThumbBuf;$/;"	m	struct:tagJPG_CTX	file:
POST_DRIVER_NAME	JPEG_API/JPGApi.c	42;"	d	file:
R_RGB565	JPEG_API/JPGApi.c	55;"	d	file:
SsbSipJPEGDecodeDeInit	JPEG_API/JPGApi.c	/^JPEG_ERRORTYPE SsbSipJPEGDecodeDeInit (int dev_fd)$/;"	f
SsbSipJPEGDecodeExe	JPEG_API/JPGApi.c	/^JPEG_ERRORTYPE SsbSipJPEGDecodeExe(int dev_fd)$/;"	f
SsbSipJPEGDecodeInit	JPEG_API/JPGApi.c	/^int SsbSipJPEGDecodeInit(void)$/;"	f
SsbSipJPEGEncodeDeInit	JPEG_API/JPGApi.c	/^JPEG_ERRORTYPE SsbSipJPEGEncodeDeInit (int dev_fd)$/;"	f
SsbSipJPEGEncodeExe	JPEG_API/JPGApi.c	/^JPEG_ERRORTYPE SsbSipJPEGEncodeExe(int dev_fd, ExifFileInfo *Exif, JPEG_SCALER scaler)$/;"	f
SsbSipJPEGEncodeInit	JPEG_API/JPGApi.c	/^int SsbSipJPEGEncodeInit(void)$/;"	f
SsbSipJPEGGetConfig	JPEG_API/JPGApi.c	/^JPEG_ERRORTYPE SsbSipJPEGGetConfig (JPEGConf type, INT32 *value)$/;"	f
SsbSipJPEGGetDecodeInBuf	JPEG_API/JPGApi.c	/^void *SsbSipJPEGGetDecodeInBuf(int dev_fd, long size)$/;"	f
SsbSipJPEGGetDecodeOutBuf	JPEG_API/JPGApi.c	/^void *SsbSipJPEGGetDecodeOutBuf (int dev_fd, long *size)$/;"	f
SsbSipJPEGGetEncodeInBuf	JPEG_API/JPGApi.c	/^void *SsbSipJPEGGetEncodeInBuf(int dev_fd, long size)$/;"	f
SsbSipJPEGGetEncodeOutBuf	JPEG_API/JPGApi.c	/^void *SsbSipJPEGGetEncodeOutBuf (int dev_fd, long *size)$/;"	f
SsbSipJPEGSetConfig	JPEG_API/JPGApi.c	/^JPEG_ERRORTYPE SsbSipJPEGSetConfig (JPEGConf type, INT32 value)$/;"	f
TIFFHeader	JPEG_API/JPGApi.c	/^UCHAR TIFFHeader[8]=$/;"	v
TRUE	JPEG_API/JPGApi.c	59;"	d	file:
dataSize	JPEG_API/JPGApi.c	/^	UINT32	dataSize;$/;"	m	struct:tagJPG_DEC_PROC_PARAM	file:
dataSize	JPEG_API/JPGApi.c	/^	UINT32	dataSize;$/;"	m	struct:tagJPG_ENC_PROC_PARAM	file:
debugPrint	JPEG_API/JPGApi.c	/^	UINT	debugPrint;$/;"	m	struct:tagJPG_CTX	file:
decParam	JPEG_API/JPGApi.c	/^	JPG_DEC_PROC_PARAM	*decParam;$/;"	m	struct:tagJPG_CTX	file:
decType	JPEG_API/JPGApi.c	/^	ENCDEC_TYPE_T	decType;$/;"	m	struct:tagJPG_DEC_PROC_PARAM	file:
encParam	JPEG_API/JPGApi.c	/^	JPG_ENC_PROC_PARAM	*encParam;$/;"	m	struct:tagJPG_CTX	file:
encType	JPEG_API/JPGApi.c	/^	ENCDEC_TYPE_T	encType;$/;"	m	struct:tagJPG_ENC_PROC_PARAM	file:
fileSize	JPEG_API/JPGApi.c	/^	UINT32	fileSize;$/;"	m	struct:tagJPG_DEC_PROC_PARAM	file:
fileSize	JPEG_API/JPGApi.c	/^	UINT32	fileSize;$/;"	m	struct:tagJPG_ENC_PROC_PARAM	file:
height	JPEG_API/JPGApi.c	/^	UINT32	height;$/;"	m	struct:tagJPG_DEC_PROC_PARAM	file:
height	JPEG_API/JPGApi.c	/^	UINT32	height;$/;"	m	struct:tagJPG_ENC_PROC_PARAM	file:
initDecodeParam	JPEG_API/JPGApi.c	/^static void initDecodeParam(void)$/;"	f	file:
initEncodeParam	JPEG_API/JPGApi.c	/^static void initEncodeParam(void)$/;"	f	file:
jCtx	JPEG_API/JPGApi.c	/^JPG_CTX *jCtx;$/;"	v
makeExifFile	JPEG_API/JPGApi.c	/^static JPEG_ERRORTYPE makeExifFile(char *ExifOut, UINT *totalLen)$/;"	f	file:
makeThumbImage	JPEG_API/JPGApi.c	/^static JPEG_ERRORTYPE makeThumbImage(int dev_fd)$/;"	f	file:
mappedAddr	JPEG_API/JPGApi.c	/^	char	*mappedAddr;$/;"	m	struct:tagJPG_CTX	file:
quality	JPEG_API/JPGApi.c	/^	IMAGE_QUALITY_TYPE_T quality;$/;"	m	struct:tagJPG_ENC_PROC_PARAM	file:
sampleMode	JPEG_API/JPGApi.c	/^	SAMPLE_MODE_T	sampleMode;$/;"	m	struct:tagJPG_DEC_PROC_PARAM	file:
sampleMode	JPEG_API/JPGApi.c	/^	SAMPLE_MODE_T	sampleMode;$/;"	m	struct:tagJPG_ENC_PROC_PARAM	file:
scalDownYUV422	JPEG_API/JPGApi.c	/^static void scalDownYUV422(char *srcBuf, INT32 srcWidth, INT32 srcHeight, $/;"	f	file:
tagENCDEC_TYPE_T	JPEG_API/JPGApi.c	/^typedef enum tagENCDEC_TYPE_T{$/;"	g	file:
tagJPG_CTX	JPEG_API/JPGApi.c	/^typedef struct tagJPG_CTX{$/;"	s	file:
tagJPG_DEC_PROC_PARAM	JPEG_API/JPGApi.c	/^typedef struct tagJPG_DEC_PROC_PARAM{$/;"	s	file:
tagJPG_ENC_PROC_PARAM	JPEG_API/JPGApi.c	/^typedef struct tagJPG_ENC_PROC_PARAM{$/;"	s	file:
thumbEncParam	JPEG_API/JPGApi.c	/^	JPG_ENC_PROC_PARAM	*thumbEncParam;$/;"	m	struct:tagJPG_CTX	file:
thumbnailFlag	JPEG_API/JPGApi.c	/^	UINT8	thumbnailFlag;$/;"	m	struct:tagJPG_CTX	file:
width	JPEG_API/JPGApi.c	/^	UINT32	width;$/;"	m	struct:tagJPG_DEC_PROC_PARAM	file:
width	JPEG_API/JPGApi.c	/^	UINT32	width;$/;"	m	struct:tagJPG_ENC_PROC_PARAM	file:
ApertureFNumber	JPEG_API/JPGApi.h	/^	UINT	ApertureFNumber; $/;"	m	struct:tagExifFileInfo
BOOL	JPEG_API/JPGApi.h	/^typedef enum {FALSE, TRUE} BOOL;$/;"	t	typeref:enum:__anon5
BrightnessDen	JPEG_API/JPGApi.h	/^	int		BrightnessDen; $/;"	m	struct:tagExifFileInfo
BrightnessNum	JPEG_API/JPGApi.h	/^	int		BrightnessNum; $/;"	m	struct:tagExifFileInfo
CCDWidth	JPEG_API/JPGApi.h	/^	UINT	CCDWidth;$/;"	m	struct:tagExifFileInfo
ColorSpace	JPEG_API/JPGApi.h	/^	UINT	ColorSpace; $/;"	m	struct:tagExifFileInfo
CopyRight	JPEG_API/JPGApi.h	/^	char	CopyRight[32]; $/;"	m	struct:tagExifFileInfo
DWORD	JPEG_API/JPGApi.h	/^typedef unsigned long	DWORD;$/;"	t
DateTime	JPEG_API/JPGApi.h	/^	char	DateTime[32]; $/;"	m	struct:tagExifFileInfo
EXIF_FILE_SIZE	JPEG_API/JPGApi.h	29;"	d
ExifFileInfo	JPEG_API/JPGApi.h	/^}ExifFileInfo;$/;"	t	typeref:struct:tagExifFileInfo
ExposureBiasDen	JPEG_API/JPGApi.h	/^	int		ExposureBiasDen; $/;"	m	struct:tagExifFileInfo
ExposureBiasNum	JPEG_API/JPGApi.h	/^	int		ExposureBiasNum; $/;"	m	struct:tagExifFileInfo
ExposureProgram	JPEG_API/JPGApi.h	/^	int		ExposureProgram;$/;"	m	struct:tagExifFileInfo
ExposureTimeDen	JPEG_API/JPGApi.h	/^	UINT	ExposureTimeDen; $/;"	m	struct:tagExifFileInfo
ExposureTimeNum	JPEG_API/JPGApi.h	/^	UINT	ExposureTimeNum; $/;"	m	struct:tagExifFileInfo
FALSE	JPEG_API/JPGApi.h	/^typedef enum {FALSE, TRUE} BOOL;$/;"	e	enum:__anon5
FNumberDen	JPEG_API/JPGApi.h	/^	UINT	FNumberDen; $/;"	m	struct:tagExifFileInfo
FNumberNum	JPEG_API/JPGApi.h	/^	UINT	FNumberNum; $/;"	m	struct:tagExifFileInfo
Flash	JPEG_API/JPGApi.h	/^	UINT	Flash; $/;"	m	struct:tagExifFileInfo
FocalLengthDen	JPEG_API/JPGApi.h	/^	UINT	FocalLengthDen; $/;"	m	struct:tagExifFileInfo
FocalLengthNum	JPEG_API/JPGApi.h	/^	UINT	FocalLengthNum; $/;"	m	struct:tagExifFileInfo
FocalPlaneResolutionUnit	JPEG_API/JPGApi.h	/^	UINT	FocalPlaneResolutionUnit;$/;"	m	struct:tagExifFileInfo
FocalPlaneXResolutionDen	JPEG_API/JPGApi.h	/^	UINT	FocalPlaneXResolutionDen;$/;"	m	struct:tagExifFileInfo
FocalPlaneXResolutionNum	JPEG_API/JPGApi.h	/^	UINT	FocalPlaneXResolutionNum;$/;"	m	struct:tagExifFileInfo
FocalPlaneYResolutionDen	JPEG_API/JPGApi.h	/^	UINT	FocalPlaneYResolutionDen;$/;"	m	struct:tagExifFileInfo
FocalPlaneYResolutionNum	JPEG_API/JPGApi.h	/^	UINT	FocalPlaneYResolutionNum;$/;"	m	struct:tagExifFileInfo
Height	JPEG_API/JPGApi.h	/^	UINT	Height; $/;"	m	struct:tagExifFileInfo
IMAGE_QUALITY_TYPE_T	JPEG_API/JPGApi.h	/^}IMAGE_QUALITY_TYPE_T;$/;"	t	typeref:enum:tagIMAGE_QUALITY_TYPE_T
INT32	JPEG_API/JPGApi.h	/^typedef int				INT32;$/;"	t
ISOSpeedRatings	JPEG_API/JPGApi.h	/^	UINT	ISOSpeedRatings[2]; $/;"	m	struct:tagExifFileInfo
JPEGConf	JPEG_API/JPGApi.h	/^}JPEGConf;$/;"	t	typeref:enum:tagJPEGConf
JPEG_DECODE_FAIL	JPEG_API/JPGApi.h	/^	JPEG_DECODE_FAIL,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_DECODE_OK	JPEG_API/JPGApi.h	/^	JPEG_DECODE_OK,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_ENCODE_FAIL	JPEG_API/JPGApi.h	/^	JPEG_ENCODE_FAIL,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_ENCODE_OK	JPEG_API/JPGApi.h	/^	JPEG_ENCODE_OK,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_ERRORTYPE	JPEG_API/JPGApi.h	/^}JPEG_ERRORTYPE;$/;"	t	typeref:enum:tagJPEG_ERRORTYPE
JPEG_FAIL	JPEG_API/JPGApi.h	/^	JPEG_FAIL,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_GET_DECODE_HEIGHT	JPEG_API/JPGApi.h	/^	JPEG_GET_DECODE_HEIGHT,$/;"	e	enum:tagJPEGConf
JPEG_GET_DECODE_WIDTH	JPEG_API/JPGApi.h	/^	JPEG_GET_DECODE_WIDTH,$/;"	e	enum:tagJPEGConf
JPEG_GET_SAMPING_MODE	JPEG_API/JPGApi.h	/^	JPEG_GET_SAMPING_MODE,$/;"	e	enum:tagJPEGConf
JPEG_HEADER_PARSE_FAIL	JPEG_API/JPGApi.h	/^	JPEG_HEADER_PARSE_FAIL,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_HEADER_PARSE_OK	JPEG_API/JPGApi.h	/^	JPEG_HEADER_PARSE_OK,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_OK	JPEG_API/JPGApi.h	/^	JPEG_OK,$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_SCALER	JPEG_API/JPGApi.h	/^}JPEG_SCALER;$/;"	t	typeref:enum:tagJPEG_SCALER
JPEG_SET_ENCODE_HEIGHT	JPEG_API/JPGApi.h	/^	JPEG_SET_ENCODE_HEIGHT,$/;"	e	enum:tagJPEGConf
JPEG_SET_ENCODE_QUALITY	JPEG_API/JPGApi.h	/^	JPEG_SET_ENCODE_QUALITY,$/;"	e	enum:tagJPEGConf
JPEG_SET_ENCODE_THUMBNAIL	JPEG_API/JPGApi.h	/^	JPEG_SET_ENCODE_THUMBNAIL,$/;"	e	enum:tagJPEGConf
JPEG_SET_ENCODE_WIDTH	JPEG_API/JPGApi.h	/^	JPEG_SET_ENCODE_WIDTH,$/;"	e	enum:tagJPEGConf
JPEG_SET_SAMPING_MODE	JPEG_API/JPGApi.h	/^	JPEG_SET_SAMPING_MODE,$/;"	e	enum:tagJPEGConf
JPEG_SET_THUMBNAIL_HEIGHT	JPEG_API/JPGApi.h	/^	JPEG_SET_THUMBNAIL_HEIGHT$/;"	e	enum:tagJPEGConf
JPEG_SET_THUMBNAIL_WIDTH	JPEG_API/JPGApi.h	/^	JPEG_SET_THUMBNAIL_WIDTH,$/;"	e	enum:tagJPEGConf
JPEG_UNKNOWN_ERROR	JPEG_API/JPGApi.h	/^	JPEG_UNKNOWN_ERROR$/;"	e	enum:tagJPEG_ERRORTYPE
JPEG_USE_HW_SCALER	JPEG_API/JPGApi.h	/^	JPEG_USE_HW_SCALER=1,$/;"	e	enum:tagJPEG_SCALER
JPEG_USE_SW_SCALER	JPEG_API/JPGApi.h	/^	JPEG_USE_SW_SCALER=2$/;"	e	enum:tagJPEG_SCALER
JPG_400	JPEG_API/JPGApi.h	/^	JPG_400,$/;"	e	enum:tagSAMPLE_MODE_T
JPG_411	JPEG_API/JPGApi.h	/^	JPG_411,$/;"	e	enum:tagSAMPLE_MODE_T
JPG_420	JPEG_API/JPGApi.h	/^	JPG_420, $/;"	e	enum:tagSAMPLE_MODE_T
JPG_422	JPEG_API/JPGApi.h	/^	JPG_422,$/;"	e	enum:tagSAMPLE_MODE_T
JPG_444	JPEG_API/JPGApi.h	/^	JPG_444,$/;"	e	enum:tagSAMPLE_MODE_T
JPG_FRAME_BUF_SIZE	JPEG_API/JPGApi.h	33;"	d
JPG_FRAME_THUMB_BUF_SIZE	JPEG_API/JPGApi.h	34;"	d
JPG_QUALITY_LEVEL_1	JPEG_API/JPGApi.h	/^	JPG_QUALITY_LEVEL_1 = 0, \/*high quality*\/$/;"	e	enum:tagIMAGE_QUALITY_TYPE_T
JPG_QUALITY_LEVEL_2	JPEG_API/JPGApi.h	/^	JPG_QUALITY_LEVEL_2,$/;"	e	enum:tagIMAGE_QUALITY_TYPE_T
JPG_QUALITY_LEVEL_3	JPEG_API/JPGApi.h	/^	JPG_QUALITY_LEVEL_3,$/;"	e	enum:tagIMAGE_QUALITY_TYPE_T
JPG_QUALITY_LEVEL_4	JPEG_API/JPGApi.h	/^	JPG_QUALITY_LEVEL_4     \/*low quality*\/$/;"	e	enum:tagIMAGE_QUALITY_TYPE_T
JPG_SAMPLE_UNKNOWN	JPEG_API/JPGApi.h	/^	JPG_SAMPLE_UNKNOWN$/;"	e	enum:tagSAMPLE_MODE_T
JPG_STREAM_BUF_SIZE	JPEG_API/JPGApi.h	31;"	d
JPG_STREAM_THUMB_BUF_SIZE	JPEG_API/JPGApi.h	32;"	d
JPG_TOTAL_BUF_SIZE	JPEG_API/JPGApi.h	36;"	d
MAX_FILE_SIZE	JPEG_API/JPGApi.h	24;"	d
MAX_FILE_THUMB_SIZE	JPEG_API/JPGApi.h	28;"	d
MAX_JPG_HEIGHT	JPEG_API/JPGApi.h	22;"	d
MAX_JPG_THUMBNAIL_HEIGHT	JPEG_API/JPGApi.h	26;"	d
MAX_JPG_THUMBNAIL_WIDTH	JPEG_API/JPGApi.h	25;"	d
MAX_JPG_WIDTH	JPEG_API/JPGApi.h	21;"	d
MAX_YUV_SIZE	JPEG_API/JPGApi.h	23;"	d
MAX_YUV_THUMB_SIZE	JPEG_API/JPGApi.h	27;"	d
Make	JPEG_API/JPGApi.h	/^	char	Make[32]; $/;"	m	struct:tagExifFileInfo
MeteringMode	JPEG_API/JPGApi.h	/^	UINT	MeteringMode; $/;"	m	struct:tagExifFileInfo
Model	JPEG_API/JPGApi.h	/^	char	Model[32]; $/;"	m	struct:tagExifFileInfo
Orientation	JPEG_API/JPGApi.h	/^	UINT	Orientation; $/;"	m	struct:tagExifFileInfo
Process	JPEG_API/JPGApi.h	/^	UINT	Process;$/;"	m	struct:tagExifFileInfo
RUnit	JPEG_API/JPGApi.h	/^	UINT	RUnit; $/;"	m	struct:tagExifFileInfo
SAMPLE_MODE_T	JPEG_API/JPGApi.h	/^}SAMPLE_MODE_T;$/;"	t	typeref:enum:tagSAMPLE_MODE_T
SubjectDistanceDen	JPEG_API/JPGApi.h	/^	int		SubjectDistanceDen; $/;"	m	struct:tagExifFileInfo
SubjectDistanceNum	JPEG_API/JPGApi.h	/^	int		SubjectDistanceNum; $/;"	m	struct:tagExifFileInfo
TRUE	JPEG_API/JPGApi.h	/^typedef enum {FALSE, TRUE} BOOL;$/;"	e	enum:__anon5
UCHAR	JPEG_API/JPGApi.h	/^typedef	unsigned char	UCHAR;$/;"	t
UINT	JPEG_API/JPGApi.h	/^typedef	unsigned int	UINT;$/;"	t
UINT32	JPEG_API/JPGApi.h	/^typedef unsigned int	UINT32;$/;"	t
UINT8	JPEG_API/JPGApi.h	/^typedef unsigned char	UINT8;$/;"	t
ULONG	JPEG_API/JPGApi.h	/^typedef unsigned long	ULONG;$/;"	t
UserComments	JPEG_API/JPGApi.h	/^	char	UserComments[150];$/;"	m	struct:tagExifFileInfo
Version	JPEG_API/JPGApi.h	/^	char	Version[32]; $/;"	m	struct:tagExifFileInfo
WhiteBalance	JPEG_API/JPGApi.h	/^	int		WhiteBalance; $/;"	m	struct:tagExifFileInfo
Width	JPEG_API/JPGApi.h	/^	UINT	Width;$/;"	m	struct:tagExifFileInfo
XResolutionDen	JPEG_API/JPGApi.h	/^	UINT	XResolutionDen;$/;"	m	struct:tagExifFileInfo
XResolutionNum	JPEG_API/JPGApi.h	/^	UINT	XResolutionNum;$/;"	m	struct:tagExifFileInfo
YResolutionDen	JPEG_API/JPGApi.h	/^	UINT	YResolutionDen;$/;"	m	struct:tagExifFileInfo
YResolutionNum	JPEG_API/JPGApi.h	/^	UINT	YResolutionNum;$/;"	m	struct:tagExifFileInfo
__JPG_API_H__	JPEG_API/JPGApi.h	18;"	d
tagExifFileInfo	JPEG_API/JPGApi.h	/^typedef struct tagExifFileInfo{$/;"	s
tagIMAGE_QUALITY_TYPE_T	JPEG_API/JPGApi.h	/^typedef enum tagIMAGE_QUALITY_TYPE_T{$/;"	g
tagJPEGConf	JPEG_API/JPGApi.h	/^typedef enum tagJPEGConf{$/;"	g
tagJPEG_ERRORTYPE	JPEG_API/JPGApi.h	/^typedef enum tagJPEG_ERRORTYPE{$/;"	g
tagJPEG_SCALER	JPEG_API/JPGApi.h	/^typedef enum tagJPEG_SCALER{$/;"	g
tagSAMPLE_MODE_T	JPEG_API/JPGApi.h	/^typedef enum tagSAMPLE_MODE_T{$/;"	g
CC	JPEG_API/Makefile	/^CC = \/usr\/local\/arm\/4.3.2\/bin\/arm-linux-gcc-4.3.2$/;"	m
CFLAGS	JPEG_API/Makefile	/^CFLAGS = -g -c -Os -Wall$/;"	m
DEPENDENCY	JPEG_API/Makefile	/^DEPENDENCY = JPGApi.h$/;"	m
INC	JPEG_API/Makefile	/^INC = -I..\/Common$/;"	m
OBJECTS	JPEG_API/Makefile	/^OBJECTS = JPGApi.o$/;"	m
SRCS	JPEG_API/Makefile	/^SRCS = $(OBJECTS:.o=.c)$/;"	m
TARGET	JPEG_API/Makefile	/^TARGET = app$/;"	m
CC	MFC_API/Makefile	/^CC = \/usr\/local\/arm\/4.3.2\/bin\/arm-linux-gcc-4.3.2$/;"	m
CFLAGS	MFC_API/Makefile	/^CFLAGS = -g -c -Os -Wall$/;"	m
DEPENDENCY	MFC_API/Makefile	/^DEPENDENCY = SsbSipH264Decode.h		\\$/;"	m
INC	MFC_API/Makefile	/^INC = -I..\/Common$/;"	m
OBJECTS	MFC_API/Makefile	/^OBJECTS = SsbSipH264Decode.o	\\$/;"	m
SRCS	MFC_API/Makefile	/^SRCS = $(OBJECTS:.o=.c)$/;"	m
TARGET	MFC_API/Makefile	/^TARGET = app$/;"	m
SsbSipH264DecodeDeInit	MFC_API/SsbSipH264Decode.c	/^int SsbSipH264DecodeDeInit(void *openHandle)$/;"	f
SsbSipH264DecodeExe	MFC_API/SsbSipH264Decode.c	/^int SsbSipH264DecodeExe(void *openHandle, long lengthBufFill)$/;"	f
SsbSipH264DecodeGetConfig	MFC_API/SsbSipH264Decode.c	/^int SsbSipH264DecodeGetConfig(void *openHandle, H264_DEC_CONF conf_type, void *value)$/;"	f
SsbSipH264DecodeGetInBuf	MFC_API/SsbSipH264Decode.c	/^void *SsbSipH264DecodeGetInBuf(void *openHandle, long size)$/;"	f
SsbSipH264DecodeGetOutBuf	MFC_API/SsbSipH264Decode.c	/^void *SsbSipH264DecodeGetOutBuf(void *openHandle, long *size)$/;"	f
SsbSipH264DecodeInit	MFC_API/SsbSipH264Decode.c	/^void *SsbSipH264DecodeInit()$/;"	f
SsbSipH264DecodeSetConfig	MFC_API/SsbSipH264Decode.c	/^int SsbSipH264DecodeSetConfig(void *openHandle, H264_DEC_CONF conf_type, void *value)$/;"	f
_MFCLIB_H264_DEC	MFC_API/SsbSipH264Decode.c	/^} _MFCLIB_H264_DEC;$/;"	t	typeref:struct:__anon13	file:
_MFCLIB_H264_DEC_MAGIC_NUMBER	MFC_API/SsbSipH264Decode.c	20;"	d	file:
buf_height	MFC_API/SsbSipH264Decode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon13	file:
buf_width	MFC_API/SsbSipH264Decode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon13	file:
fInit	MFC_API/SsbSipH264Decode.c	/^	int     fInit;$/;"	m	struct:__anon13	file:
g_stream_info	MFC_API/SsbSipH264Decode.c	/^SSBSIP_H264_STREAM_INFO g_stream_info;   \/\/ kskim added #20090311$/;"	v
hOpen	MFC_API/SsbSipH264Decode.c	/^	int		hOpen;$/;"	m	struct:__anon13	file:
height	MFC_API/SsbSipH264Decode.c	/^	unsigned int    width, height;	$/;"	m	struct:__anon13	file:
magic	MFC_API/SsbSipH264Decode.c	/^	int   	magic;$/;"	m	struct:__anon13	file:
mapped_addr	MFC_API/SsbSipH264Decode.c	/^	unsigned char	*mapped_addr;$/;"	m	struct:__anon13	file:
p_buf	MFC_API/SsbSipH264Decode.c	/^	void   *p_buf;$/;"	m	struct:__anon13	file:
size	MFC_API/SsbSipH264Decode.c	/^	int     size;$/;"	m	struct:__anon13	file:
width	MFC_API/SsbSipH264Decode.c	/^	unsigned int    width, height;	$/;"	m	struct:__anon13	file:
H264_DEC_CONF	MFC_API/SsbSipH264Decode.h	/^typedef unsigned int	H264_DEC_CONF;$/;"	t
H264_DEC_GETCONF_FRAM_NEED_COUNT	MFC_API/SsbSipH264Decode.h	20;"	d
H264_DEC_GETCONF_PHYADDR_FRAM_BUF	MFC_API/SsbSipH264Decode.h	19;"	d
H264_DEC_GETCONF_STREAMINFO	MFC_API/SsbSipH264Decode.h	18;"	d
H264_DEC_SETCONF_POST_ROTATE	MFC_API/SsbSipH264Decode.h	22;"	d
SSBSIP_H264_DEC_RET_ERR_CONFIG_FAIL	MFC_API/SsbSipH264Decode.h	52;"	d
SSBSIP_H264_DEC_RET_ERR_DECODE_FAIL	MFC_API/SsbSipH264Decode.h	53;"	d
SSBSIP_H264_DEC_RET_ERR_GETCONF_FAIL	MFC_API/SsbSipH264Decode.h	54;"	d
SSBSIP_H264_DEC_RET_ERR_INVALID_HANDLE	MFC_API/SsbSipH264Decode.h	49;"	d
SSBSIP_H264_DEC_RET_ERR_INVALID_PARAM	MFC_API/SsbSipH264Decode.h	50;"	d
SSBSIP_H264_DEC_RET_ERR_SETCONF_FAIL	MFC_API/SsbSipH264Decode.h	55;"	d
SSBSIP_H264_DEC_RET_OK	MFC_API/SsbSipH264Decode.h	48;"	d
SSBSIP_H264_STREAM_INFO	MFC_API/SsbSipH264Decode.h	/^} SSBSIP_H264_STREAM_INFO;$/;"	t	typeref:struct:__anon17
__SAMSUNG_SYSLSI_APDEV_MFCLIB_SSBSIPH264DECODE_H__	MFC_API/SsbSipH264Decode.h	2;"	d
buf_height	MFC_API/SsbSipH264Decode.h	/^	int buf_height;$/;"	m	struct:__anon17
buf_width	MFC_API/SsbSipH264Decode.h	/^	int buf_width;$/;"	m	struct:__anon17
height	MFC_API/SsbSipH264Decode.h	/^	int height;$/;"	m	struct:__anon17
width	MFC_API/SsbSipH264Decode.h	/^	int width;$/;"	m	struct:__anon17
SsbSipH264EncodeDeInit	MFC_API/SsbSipH264Encode.c	/^int SsbSipH264EncodeDeInit(void *openHandle)$/;"	f
SsbSipH264EncodeExe	MFC_API/SsbSipH264Encode.c	/^int SsbSipH264EncodeExe(void *openHandle)$/;"	f
SsbSipH264EncodeGetConfig	MFC_API/SsbSipH264Encode.c	/^int SsbSipH264EncodeGetConfig(void *openHandle, H264_ENC_CONF conf_type, void *value)$/;"	f
SsbSipH264EncodeGetInBuf	MFC_API/SsbSipH264Encode.c	/^void *SsbSipH264EncodeGetInBuf(void *openHandle, long size)$/;"	f
SsbSipH264EncodeGetOutBuf	MFC_API/SsbSipH264Encode.c	/^void *SsbSipH264EncodeGetOutBuf(void *openHandle, long *size)$/;"	f
SsbSipH264EncodeInit	MFC_API/SsbSipH264Encode.c	/^void *SsbSipH264EncodeInit(unsigned int uiWidth,     unsigned int uiHeight,$/;"	f
SsbSipH264EncodeSetConfig	MFC_API/SsbSipH264Encode.c	/^int SsbSipH264EncodeSetConfig(void *openHandle, H264_ENC_CONF conf_type, void *value)$/;"	f
_MFCLIB_H264_ENC	MFC_API/SsbSipH264Encode.c	/^} _MFCLIB_H264_ENC;$/;"	t	typeref:struct:__anon14	file:
_MFCLIB_H264_ENC_MAGIC_NUMBER	MFC_API/SsbSipH264Encode.c	21;"	d	file:
bitrate	MFC_API/SsbSipH264Encode.c	/^	int bitrate;$/;"	m	struct:__anon15	file:
bitrate	MFC_API/SsbSipH264Encode.c	/^	unsigned int  	framerate, bitrate;$/;"	m	struct:__anon14	file:
enc_hdr_size	MFC_API/SsbSipH264Encode.c	/^	int		enc_hdr_size;$/;"	m	struct:__anon14	file:
enc_info_t	MFC_API/SsbSipH264Encode.c	/^} enc_info_t;$/;"	t	typeref:struct:__anon15	file:
enc_strm_size	MFC_API/SsbSipH264Encode.c	/^	int     enc_strm_size;$/;"	m	struct:__anon14	file:
fInit	MFC_API/SsbSipH264Encode.c	/^	int     fInit;$/;"	m	struct:__anon14	file:
frameRateDiv	MFC_API/SsbSipH264Encode.c	/^	int frameRateDiv;$/;"	m	struct:__anon15	file:
frameRateRes	MFC_API/SsbSipH264Encode.c	/^	int frameRateRes;$/;"	m	struct:__anon15	file:
framerate	MFC_API/SsbSipH264Encode.c	/^	unsigned int  	framerate, bitrate;$/;"	m	struct:__anon14	file:
gopNum	MFC_API/SsbSipH264Encode.c	/^	int gopNum;$/;"	m	struct:__anon15	file:
gop_num	MFC_API/SsbSipH264Encode.c	/^	unsigned int  	gop_num;$/;"	m	struct:__anon14	file:
hOpen	MFC_API/SsbSipH264Encode.c	/^	int  	hOpen;$/;"	m	struct:__anon14	file:
height	MFC_API/SsbSipH264Encode.c	/^	int height;$/;"	m	struct:__anon15	file:
height	MFC_API/SsbSipH264Encode.c	/^	unsigned int  	width, height;$/;"	m	struct:__anon14	file:
magic	MFC_API/SsbSipH264Encode.c	/^	int   	magic;$/;"	m	struct:__anon14	file:
mapped_addr	MFC_API/SsbSipH264Encode.c	/^	unsigned char	*mapped_addr;$/;"	m	struct:__anon14	file:
width	MFC_API/SsbSipH264Encode.c	/^	int width;$/;"	m	struct:__anon15	file:
width	MFC_API/SsbSipH264Encode.c	/^	unsigned int  	width, height;$/;"	m	struct:__anon14	file:
H264_ENC_CONF	MFC_API/SsbSipH264Encode.h	/^typedef unsigned int	H264_ENC_CONF;$/;"	t
H264_ENC_GETCONF_HEADER_SIZE	MFC_API/SsbSipH264Encode.h	7;"	d
H264_ENC_PARAM_BITRATE	MFC_API/SsbSipH264Encode.h	15;"	d
H264_ENC_PARAM_F_RATE	MFC_API/SsbSipH264Encode.h	16;"	d
H264_ENC_PARAM_GOP_NUM	MFC_API/SsbSipH264Encode.h	13;"	d
H264_ENC_PARAM_INTRA_QP	MFC_API/SsbSipH264Encode.h	14;"	d
H264_ENC_PARAM_INTRA_REF	MFC_API/SsbSipH264Encode.h	17;"	d
H264_ENC_PARAM_SLICE_MODE	MFC_API/SsbSipH264Encode.h	18;"	d
H264_ENC_PIC_OPT_IDR	MFC_API/SsbSipH264Encode.h	20;"	d
H264_ENC_PIC_OPT_RECOVERY	MFC_API/SsbSipH264Encode.h	22;"	d
H264_ENC_PIC_OPT_SKIP	MFC_API/SsbSipH264Encode.h	21;"	d
H264_ENC_SETCONF_CUR_PIC_OPT	MFC_API/SsbSipH264Encode.h	11;"	d
H264_ENC_SETCONF_NUM_SLICES	MFC_API/SsbSipH264Encode.h	9;"	d
H264_ENC_SETCONF_PARAM_CHANGE	MFC_API/SsbSipH264Encode.h	10;"	d
SSBSIP_H264_ENC_RET_ERR_CONFIG_FAIL	MFC_API/SsbSipH264Encode.h	54;"	d
SSBSIP_H264_ENC_RET_ERR_ENCODE_FAIL	MFC_API/SsbSipH264Encode.h	55;"	d
SSBSIP_H264_ENC_RET_ERR_GETCONF_FAIL	MFC_API/SsbSipH264Encode.h	56;"	d
SSBSIP_H264_ENC_RET_ERR_INVALID_HANDLE	MFC_API/SsbSipH264Encode.h	51;"	d
SSBSIP_H264_ENC_RET_ERR_INVALID_PARAM	MFC_API/SsbSipH264Encode.h	52;"	d
SSBSIP_H264_ENC_RET_ERR_SETCONF_FAIL	MFC_API/SsbSipH264Encode.h	57;"	d
SSBSIP_H264_ENC_RET_OK	MFC_API/SsbSipH264Encode.h	50;"	d
__SAMSUNG_SYSLSI_APDEV_MFCLIB_SSBSIPH264ENCODE_H__	MFC_API/SsbSipH264Encode.h	2;"	d
SsbSipMfcDecodeDeInit	MFC_API/SsbSipMfcDecode.c	/^int SsbSipMfcDecodeDeInit(void *openHandle)$/;"	f
SsbSipMfcDecodeExe	MFC_API/SsbSipMfcDecode.c	/^int SsbSipMfcDecodeExe(void *openHandle, long lengthBufFill)$/;"	f
SsbSipMfcDecodeGetConfig	MFC_API/SsbSipMfcDecode.c	/^int SsbSipMfcDecodeGetConfig(void *openHandle, MFC_DEC_CONF conf_type, void *value)$/;"	f
SsbSipMfcDecodeGetInBuf	MFC_API/SsbSipMfcDecode.c	/^void *SsbSipMfcDecodeGetInBuf(void *openHandle, long *size)$/;"	f
SsbSipMfcDecodeGetOutBuf	MFC_API/SsbSipMfcDecode.c	/^void *SsbSipMfcDecodeGetOutBuf(void *openHandle, long *size)$/;"	f
SsbSipMfcDecodeInit	MFC_API/SsbSipMfcDecode.c	/^void *SsbSipMfcDecodeInit(int dec_type)$/;"	f
SsbSipMfcDecodeSetConfig	MFC_API/SsbSipMfcDecode.c	/^int SsbSipMfcDecodeSetConfig(void *openHandle, MFC_DEC_CONF conf_type, void *value)$/;"	f
_MFCLIB_DEC	MFC_API/SsbSipMfcDecode.c	/^} _MFCLIB_DEC;$/;"	t	typeref:struct:__anon9	file:
_MFCLIB_DEC_MAGIC_NUMBER	MFC_API/SsbSipMfcDecode.c	20;"	d	file:
buf_height	MFC_API/SsbSipMfcDecode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon9	file:
buf_width	MFC_API/SsbSipMfcDecode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon9	file:
decoder	MFC_API/SsbSipMfcDecode.c	/^	int     		decoder;$/;"	m	struct:__anon9	file:
fInit	MFC_API/SsbSipMfcDecode.c	/^	int		fInit;$/;"	m	struct:__anon9	file:
hOpen	MFC_API/SsbSipMfcDecode.c	/^	int		hOpen;$/;"	m	struct:__anon9	file:
height	MFC_API/SsbSipMfcDecode.c	/^	unsigned int	width, height;	$/;"	m	struct:__anon9	file:
magic	MFC_API/SsbSipMfcDecode.c	/^	int		magic;$/;"	m	struct:__anon9	file:
mapped_addr	MFC_API/SsbSipMfcDecode.c	/^	unsigned char	*mapped_addr;$/;"	m	struct:__anon9	file:
p_buf	MFC_API/SsbSipMfcDecode.c	/^	void	*p_buf;$/;"	m	struct:__anon9	file:
size	MFC_API/SsbSipMfcDecode.c	/^	int		size;$/;"	m	struct:__anon9	file:
width	MFC_API/SsbSipMfcDecode.c	/^	unsigned int	width, height;	$/;"	m	struct:__anon9	file:
MFC_DEC_CONF	MFC_API/SsbSipMfcDecode.h	/^typedef unsigned int	MFC_DEC_CONF;$/;"	t
MFC_DEC_GETCONF_FRAM_NEED_COUNT	MFC_API/SsbSipMfcDecode.h	18;"	d
MFC_DEC_GETCONF_PHYADDR_FRAM_BUF	MFC_API/SsbSipMfcDecode.h	17;"	d
MFC_DEC_GETCONF_STREAMINFO	MFC_API/SsbSipMfcDecode.h	16;"	d
MFC_DEC_SETCONF_POST_ROTATE	MFC_API/SsbSipMfcDecode.h	20;"	d
SSBSIPMFCDEC_H263	MFC_API/SsbSipMfcDecode.h	23;"	d
SSBSIPMFCDEC_H264	MFC_API/SsbSipMfcDecode.h	24;"	d
SSBSIPMFCDEC_MPEG4	MFC_API/SsbSipMfcDecode.h	22;"	d
SSBSIPMFCDEC_VC1	MFC_API/SsbSipMfcDecode.h	25;"	d
SSBSIP_MFC_DEC_RET_ERR_CONFIG_FAIL	MFC_API/SsbSipMfcDecode.h	58;"	d
SSBSIP_MFC_DEC_RET_ERR_DECODE_FAIL	MFC_API/SsbSipMfcDecode.h	59;"	d
SSBSIP_MFC_DEC_RET_ERR_GETCONF_FAIL	MFC_API/SsbSipMfcDecode.h	60;"	d
SSBSIP_MFC_DEC_RET_ERR_INVALID_HANDLE	MFC_API/SsbSipMfcDecode.h	54;"	d
SSBSIP_MFC_DEC_RET_ERR_INVALID_PARAM	MFC_API/SsbSipMfcDecode.h	55;"	d
SSBSIP_MFC_DEC_RET_ERR_SETCONF_FAIL	MFC_API/SsbSipMfcDecode.h	61;"	d
SSBSIP_MFC_DEC_RET_ERR_UNDEF_CODEC	MFC_API/SsbSipMfcDecode.h	56;"	d
SSBSIP_MFC_DEC_RET_OK	MFC_API/SsbSipMfcDecode.h	53;"	d
SSBSIP_MFC_STREAM_INFO	MFC_API/SsbSipMfcDecode.h	/^} SSBSIP_MFC_STREAM_INFO;$/;"	t	typeref:struct:__anon6
__SAMSUNG_SYSLSI_APDEV_MFCLIB_SSBSIPMFCDECODE_H__	MFC_API/SsbSipMfcDecode.h	2;"	d
buf_height	MFC_API/SsbSipMfcDecode.h	/^	int buf_height;$/;"	m	struct:__anon6
buf_width	MFC_API/SsbSipMfcDecode.h	/^	int buf_width;$/;"	m	struct:__anon6
height	MFC_API/SsbSipMfcDecode.h	/^	int height;$/;"	m	struct:__anon6
width	MFC_API/SsbSipMfcDecode.h	/^	int width;$/;"	m	struct:__anon6
SsbSipMPEG4DecodeDeInit	MFC_API/SsbSipMpeg4Decode.c	/^int SsbSipMPEG4DecodeDeInit(void *openHandle)$/;"	f
SsbSipMPEG4DecodeExe	MFC_API/SsbSipMpeg4Decode.c	/^int SsbSipMPEG4DecodeExe(void *openHandle, long lengthBufFill)$/;"	f
SsbSipMPEG4DecodeGetConfig	MFC_API/SsbSipMpeg4Decode.c	/^int SsbSipMPEG4DecodeGetConfig(void *openHandle, MPEG4_DEC_CONF conf_type, void *value)$/;"	f
SsbSipMPEG4DecodeGetInBuf	MFC_API/SsbSipMpeg4Decode.c	/^void *SsbSipMPEG4DecodeGetInBuf(void *openHandle, long size)$/;"	f
SsbSipMPEG4DecodeGetOutBuf	MFC_API/SsbSipMpeg4Decode.c	/^void *SsbSipMPEG4DecodeGetOutBuf(void *openHandle, long *size)$/;"	f
SsbSipMPEG4DecodeInit	MFC_API/SsbSipMpeg4Decode.c	/^void *SsbSipMPEG4DecodeInit()$/;"	f
SsbSipMPEG4DecodeSetConfig	MFC_API/SsbSipMpeg4Decode.c	/^int SsbSipMPEG4DecodeSetConfig(void *openHandle, MPEG4_DEC_CONF conf_type, void *value)$/;"	f
_MFCLIB_MPEG4_DEC	MFC_API/SsbSipMpeg4Decode.c	/^} _MFCLIB_MPEG4_DEC;$/;"	t	typeref:struct:__anon7	file:
_MFCLIB_MPEG4_DEC_MAGIC_NUMBER	MFC_API/SsbSipMpeg4Decode.c	20;"	d	file:
buf_height	MFC_API/SsbSipMpeg4Decode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon7	file:
buf_width	MFC_API/SsbSipMpeg4Decode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon7	file:
fInit	MFC_API/SsbSipMpeg4Decode.c	/^	int     fInit;$/;"	m	struct:__anon7	file:
hOpen	MFC_API/SsbSipMpeg4Decode.c	/^	int		hOpen;$/;"	m	struct:__anon7	file:
height	MFC_API/SsbSipMpeg4Decode.c	/^	unsigned int    width, height;	$/;"	m	struct:__anon7	file:
magic	MFC_API/SsbSipMpeg4Decode.c	/^	int   	magic;$/;"	m	struct:__anon7	file:
mapped_addr	MFC_API/SsbSipMpeg4Decode.c	/^	unsigned char	*mapped_addr;$/;"	m	struct:__anon7	file:
p_buf	MFC_API/SsbSipMpeg4Decode.c	/^	void   *p_buf;$/;"	m	struct:__anon7	file:
size	MFC_API/SsbSipMpeg4Decode.c	/^	int     size;$/;"	m	struct:__anon7	file:
width	MFC_API/SsbSipMpeg4Decode.c	/^	unsigned int    width, height;	$/;"	m	struct:__anon7	file:
MPEG4_DEC_CONF	MFC_API/SsbSipMpeg4Decode.h	/^typedef unsigned int	MPEG4_DEC_CONF;$/;"	t
MPEG4_DEC_GETCONF_BYTE_CONSUMED	MFC_API/SsbSipMpeg4Decode.h	31;"	d
MPEG4_DEC_GETCONF_FRAM_NEED_COUNT	MFC_API/SsbSipMpeg4Decode.h	20;"	d
MPEG4_DEC_GETCONF_MPEG4_FCODE	MFC_API/SsbSipMpeg4Decode.h	25;"	d
MPEG4_DEC_GETCONF_MPEG4_MBTYPE_ADDR	MFC_API/SsbSipMpeg4Decode.h	22;"	d
MPEG4_DEC_GETCONF_MPEG4_MV_ADDR	MFC_API/SsbSipMpeg4Decode.h	21;"	d
MPEG4_DEC_GETCONF_MPEG4_NONB_TIME_LAST	MFC_API/SsbSipMpeg4Decode.h	28;"	d
MPEG4_DEC_GETCONF_MPEG4_TIME_BASE_LAST	MFC_API/SsbSipMpeg4Decode.h	27;"	d
MPEG4_DEC_GETCONF_MPEG4_TRD	MFC_API/SsbSipMpeg4Decode.h	29;"	d
MPEG4_DEC_GETCONF_MPEG4_VOP_TIME_RES	MFC_API/SsbSipMpeg4Decode.h	26;"	d
MPEG4_DEC_GETCONF_PHYADDR_B_FRAM_BUF	MFC_API/SsbSipMpeg4Decode.h	30;"	d
MPEG4_DEC_GETCONF_PHYADDR_FRAM_BUF	MFC_API/SsbSipMpeg4Decode.h	19;"	d
MPEG4_DEC_GETCONF_STREAMINFO	MFC_API/SsbSipMpeg4Decode.h	18;"	d
MPEG4_DEC_SETCONF_CACHE_CLEAN	MFC_API/SsbSipMpeg4Decode.h	35;"	d
MPEG4_DEC_SETCONF_CACHE_CLEAN_INVALIDATE	MFC_API/SsbSipMpeg4Decode.h	37;"	d
MPEG4_DEC_SETCONF_CACHE_INVALIDATE	MFC_API/SsbSipMpeg4Decode.h	36;"	d
MPEG4_DEC_SETCONF_PADDING_SIZE	MFC_API/SsbSipMpeg4Decode.h	38;"	d
MPEG4_DEC_SETCONF_POST_ROTATE	MFC_API/SsbSipMpeg4Decode.h	34;"	d
SSBSIP_MPEG4_DEC_RET_ERR_CONFIG_FAIL	MFC_API/SsbSipMpeg4Decode.h	69;"	d
SSBSIP_MPEG4_DEC_RET_ERR_DECODE_FAIL	MFC_API/SsbSipMpeg4Decode.h	70;"	d
SSBSIP_MPEG4_DEC_RET_ERR_GETCONF_FAIL	MFC_API/SsbSipMpeg4Decode.h	71;"	d
SSBSIP_MPEG4_DEC_RET_ERR_INVALID_HANDLE	MFC_API/SsbSipMpeg4Decode.h	66;"	d
SSBSIP_MPEG4_DEC_RET_ERR_INVALID_PARAM	MFC_API/SsbSipMpeg4Decode.h	67;"	d
SSBSIP_MPEG4_DEC_RET_ERR_SETCONF_FAIL	MFC_API/SsbSipMpeg4Decode.h	72;"	d
SSBSIP_MPEG4_DEC_RET_OK	MFC_API/SsbSipMpeg4Decode.h	65;"	d
SSBSIP_MPEG4_STREAM_INFO	MFC_API/SsbSipMpeg4Decode.h	/^} SSBSIP_MPEG4_STREAM_INFO;$/;"	t	typeref:struct:__anon16
__SAMSUNG_SYSLSI_APDEV_MFCLIB_SSBSIPMPEG4DECODE_H__	MFC_API/SsbSipMpeg4Decode.h	2;"	d
buf_height	MFC_API/SsbSipMpeg4Decode.h	/^	int buf_height;$/;"	m	struct:__anon16
buf_width	MFC_API/SsbSipMpeg4Decode.h	/^	int buf_width;$/;"	m	struct:__anon16
height	MFC_API/SsbSipMpeg4Decode.h	/^	int height;$/;"	m	struct:__anon16
width	MFC_API/SsbSipMpeg4Decode.h	/^	int width;$/;"	m	struct:__anon16
SsbSipMPEG4EncodeDeInit	MFC_API/SsbSipMpeg4Encode.c	/^int SsbSipMPEG4EncodeDeInit(void *openHandle)$/;"	f
SsbSipMPEG4EncodeExe	MFC_API/SsbSipMpeg4Encode.c	/^int SsbSipMPEG4EncodeExe(void *openHandle)$/;"	f
SsbSipMPEG4EncodeGetConfig	MFC_API/SsbSipMpeg4Encode.c	/^int SsbSipMPEG4EncodeGetConfig(void *openHandle, MPEG4_ENC_CONF conf_type, void *value)$/;"	f
SsbSipMPEG4EncodeGetInBuf	MFC_API/SsbSipMpeg4Encode.c	/^void *SsbSipMPEG4EncodeGetInBuf(void *openHandle, long size)$/;"	f
SsbSipMPEG4EncodeGetOutBuf	MFC_API/SsbSipMpeg4Encode.c	/^void *SsbSipMPEG4EncodeGetOutBuf(void *openHandle, long *size)$/;"	f
SsbSipMPEG4EncodeInit	MFC_API/SsbSipMpeg4Encode.c	/^void *SsbSipMPEG4EncodeInit(int strmType, unsigned int uiWidth,     unsigned int uiHeight,$/;"	f
SsbSipMPEG4EncodeSetConfig	MFC_API/SsbSipMpeg4Encode.c	/^int SsbSipMPEG4EncodeSetConfig(void *openHandle, MPEG4_ENC_CONF conf_type, void *value)$/;"	f
_MFCLIB_MPEG4_ENC	MFC_API/SsbSipMpeg4Encode.c	/^} _MFCLIB_MPEG4_ENC;$/;"	t	typeref:struct:__anon10	file:
_MFCLIB_MPEG4_ENC_MAGIC_NUMBER	MFC_API/SsbSipMpeg4Encode.c	21;"	d	file:
bitrate	MFC_API/SsbSipMpeg4Encode.c	/^	int bitrate;$/;"	m	struct:__anon11	file:
bitrate	MFC_API/SsbSipMpeg4Encode.c	/^	unsigned int  	framerate, bitrate;$/;"	m	struct:__anon10	file:
enc_hdr_size	MFC_API/SsbSipMpeg4Encode.c	/^	int		enc_hdr_size;$/;"	m	struct:__anon10	file:
enc_info_t	MFC_API/SsbSipMpeg4Encode.c	/^} enc_info_t;$/;"	t	typeref:struct:__anon11	file:
enc_strm_size	MFC_API/SsbSipMpeg4Encode.c	/^	int     enc_strm_size;$/;"	m	struct:__anon10	file:
fInit	MFC_API/SsbSipMpeg4Encode.c	/^	int     fInit;$/;"	m	struct:__anon10	file:
frameRateDiv	MFC_API/SsbSipMpeg4Encode.c	/^	int frameRateDiv;$/;"	m	struct:__anon11	file:
frameRateRes	MFC_API/SsbSipMpeg4Encode.c	/^	int frameRateRes;$/;"	m	struct:__anon11	file:
framerate	MFC_API/SsbSipMpeg4Encode.c	/^	unsigned int  	framerate, bitrate;$/;"	m	struct:__anon10	file:
gopNum	MFC_API/SsbSipMpeg4Encode.c	/^	int gopNum;$/;"	m	struct:__anon11	file:
gop_num	MFC_API/SsbSipMpeg4Encode.c	/^	unsigned int  	gop_num;$/;"	m	struct:__anon10	file:
hOpen	MFC_API/SsbSipMpeg4Encode.c	/^	int  	hOpen;$/;"	m	struct:__anon10	file:
height	MFC_API/SsbSipMpeg4Encode.c	/^	int height;$/;"	m	struct:__anon11	file:
height	MFC_API/SsbSipMpeg4Encode.c	/^	unsigned int  	width, height;$/;"	m	struct:__anon10	file:
magic	MFC_API/SsbSipMpeg4Encode.c	/^	int   	magic;$/;"	m	struct:__anon10	file:
mapped_addr	MFC_API/SsbSipMpeg4Encode.c	/^	unsigned char	*mapped_addr;$/;"	m	struct:__anon10	file:
strmType	MFC_API/SsbSipMpeg4Encode.c	/^	int		strmType;$/;"	m	struct:__anon10	file:
width	MFC_API/SsbSipMpeg4Encode.c	/^	int width;$/;"	m	struct:__anon11	file:
width	MFC_API/SsbSipMpeg4Encode.c	/^	unsigned int  	width, height;$/;"	m	struct:__anon10	file:
ANNEX_I_OFF	MFC_API/SsbSipMpeg4Encode.h	36;"	d
ANNEX_I_ON	MFC_API/SsbSipMpeg4Encode.h	37;"	d
ANNEX_J_OFF	MFC_API/SsbSipMpeg4Encode.h	34;"	d
ANNEX_J_ON	MFC_API/SsbSipMpeg4Encode.h	35;"	d
ANNEX_K_OFF	MFC_API/SsbSipMpeg4Encode.h	32;"	d
ANNEX_K_ON	MFC_API/SsbSipMpeg4Encode.h	33;"	d
ANNEX_T_OFF	MFC_API/SsbSipMpeg4Encode.h	30;"	d
ANNEX_T_ON	MFC_API/SsbSipMpeg4Encode.h	31;"	d
MPEG4_ENC_CONF	MFC_API/SsbSipMpeg4Encode.h	/^typedef unsigned int	MPEG4_ENC_CONF;$/;"	t
MPEG4_ENC_GETCONF_HEADER_SIZE	MFC_API/SsbSipMpeg4Encode.h	26;"	d
MPEG4_ENC_PARAM_BITRATE	MFC_API/SsbSipMpeg4Encode.h	14;"	d
MPEG4_ENC_PARAM_F_RATE	MFC_API/SsbSipMpeg4Encode.h	15;"	d
MPEG4_ENC_PARAM_GOP_NUM	MFC_API/SsbSipMpeg4Encode.h	12;"	d
MPEG4_ENC_PARAM_INTRA_QP	MFC_API/SsbSipMpeg4Encode.h	13;"	d
MPEG4_ENC_PARAM_INTRA_REF	MFC_API/SsbSipMpeg4Encode.h	16;"	d
MPEG4_ENC_PARAM_SLICE_MODE	MFC_API/SsbSipMpeg4Encode.h	17;"	d
MPEG4_ENC_PIC_OPT_IDR	MFC_API/SsbSipMpeg4Encode.h	19;"	d
MPEG4_ENC_PIC_OPT_SKIP	MFC_API/SsbSipMpeg4Encode.h	20;"	d
MPEG4_ENC_SETCONF_CUR_PIC_OPT	MFC_API/SsbSipMpeg4Encode.h	9;"	d
MPEG4_ENC_SETCONF_H263_ANNEX	MFC_API/SsbSipMpeg4Encode.h	7;"	d
MPEG4_ENC_SETCONF_H263_NUM_SLICES	MFC_API/SsbSipMpeg4Encode.h	6;"	d
MPEG4_ENC_SETCONF_PARAM_CHANGE	MFC_API/SsbSipMpeg4Encode.h	8;"	d
SET_H263_MULTIPLE_SLICE	MFC_API/SsbSipMpeg4Encode.h	27;"	d
SSBSIPMFCENC_H263	MFC_API/SsbSipMpeg4Encode.h	23;"	d
SSBSIPMFCENC_MPEG4	MFC_API/SsbSipMpeg4Encode.h	22;"	d
SSBSIP_MPEG4_ENC_RET_ERR_CONFIG_FAIL	MFC_API/SsbSipMpeg4Encode.h	69;"	d
SSBSIP_MPEG4_ENC_RET_ERR_ENCODE_FAIL	MFC_API/SsbSipMpeg4Encode.h	70;"	d
SSBSIP_MPEG4_ENC_RET_ERR_GETCONF_FAIL	MFC_API/SsbSipMpeg4Encode.h	71;"	d
SSBSIP_MPEG4_ENC_RET_ERR_INVALID_HANDLE	MFC_API/SsbSipMpeg4Encode.h	66;"	d
SSBSIP_MPEG4_ENC_RET_ERR_INVALID_PARAM	MFC_API/SsbSipMpeg4Encode.h	67;"	d
SSBSIP_MPEG4_ENC_RET_ERR_SETCONF_FAIL	MFC_API/SsbSipMpeg4Encode.h	72;"	d
SSBSIP_MPEG4_ENC_RET_OK	MFC_API/SsbSipMpeg4Encode.h	65;"	d
__SAMSUNG_SYSLSI_APDEV_MFCLIB_SSBSIPMPEG4ENCODE_H__	MFC_API/SsbSipMpeg4Encode.h	2;"	d
SsbSipVC1DecodeDeInit	MFC_API/SsbSipVC1Decode.c	/^int SsbSipVC1DecodeDeInit(void *openHandle)$/;"	f
SsbSipVC1DecodeExe	MFC_API/SsbSipVC1Decode.c	/^int SsbSipVC1DecodeExe(void *openHandle, long lengthBufFill)$/;"	f
SsbSipVC1DecodeGetConfig	MFC_API/SsbSipVC1Decode.c	/^int SsbSipVC1DecodeGetConfig(void *openHandle, VC1_DEC_CONF conf_type, void *value)$/;"	f
SsbSipVC1DecodeGetInBuf	MFC_API/SsbSipVC1Decode.c	/^void *SsbSipVC1DecodeGetInBuf(void *openHandle, long size)$/;"	f
SsbSipVC1DecodeGetOutBuf	MFC_API/SsbSipVC1Decode.c	/^void *SsbSipVC1DecodeGetOutBuf(void *openHandle, long *size)$/;"	f
SsbSipVC1DecodeInit	MFC_API/SsbSipVC1Decode.c	/^void *SsbSipVC1DecodeInit()$/;"	f
SsbSipVC1DecodeSetConfig	MFC_API/SsbSipVC1Decode.c	/^int SsbSipVC1DecodeSetConfig(void *openHandle, VC1_DEC_CONF conf_type, void *value)$/;"	f
_MFCLIB_VC1_DEC	MFC_API/SsbSipVC1Decode.c	/^} _MFCLIB_VC1_DEC;$/;"	t	typeref:struct:__anon8	file:
_MFCLIB_VC1_DEC_MAGIC_NUMBER	MFC_API/SsbSipVC1Decode.c	20;"	d	file:
buf_height	MFC_API/SsbSipVC1Decode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon8	file:
buf_width	MFC_API/SsbSipVC1Decode.c	/^	unsigned int	buf_width, buf_height;$/;"	m	struct:__anon8	file:
fInit	MFC_API/SsbSipVC1Decode.c	/^	int     fInit;$/;"	m	struct:__anon8	file:
hOpen	MFC_API/SsbSipVC1Decode.c	/^	int		hOpen;$/;"	m	struct:__anon8	file:
height	MFC_API/SsbSipVC1Decode.c	/^	unsigned int	width, height;$/;"	m	struct:__anon8	file:
magic	MFC_API/SsbSipVC1Decode.c	/^	int		magic;$/;"	m	struct:__anon8	file:
mapped_addr	MFC_API/SsbSipVC1Decode.c	/^	unsigned char	*mapped_addr;	$/;"	m	struct:__anon8	file:
p_buf	MFC_API/SsbSipVC1Decode.c	/^	void	*p_buf;$/;"	m	struct:__anon8	file:
size	MFC_API/SsbSipVC1Decode.c	/^	int		size;$/;"	m	struct:__anon8	file:
width	MFC_API/SsbSipVC1Decode.c	/^	unsigned int	width, height;$/;"	m	struct:__anon8	file:
SSBSIP_VC1_DEC_RET_ERR_CONFIG_FAIL	MFC_API/SsbSipVC1Decode.h	52;"	d
SSBSIP_VC1_DEC_RET_ERR_DECODE_FAIL	MFC_API/SsbSipVC1Decode.h	53;"	d
SSBSIP_VC1_DEC_RET_ERR_GETCONF_FAIL	MFC_API/SsbSipVC1Decode.h	54;"	d
SSBSIP_VC1_DEC_RET_ERR_INVALID_HANDLE	MFC_API/SsbSipVC1Decode.h	49;"	d
SSBSIP_VC1_DEC_RET_ERR_INVALID_PARAM	MFC_API/SsbSipVC1Decode.h	50;"	d
SSBSIP_VC1_DEC_RET_ERR_SETCONF_FAIL	MFC_API/SsbSipVC1Decode.h	55;"	d
SSBSIP_VC1_DEC_RET_OK	MFC_API/SsbSipVC1Decode.h	48;"	d
SSBSIP_VC1_STREAM_INFO	MFC_API/SsbSipVC1Decode.h	/^} SSBSIP_VC1_STREAM_INFO;$/;"	t	typeref:struct:__anon12
VC1_DEC_CONF	MFC_API/SsbSipVC1Decode.h	/^typedef unsigned int	VC1_DEC_CONF;$/;"	t
VC1_DEC_GETCONF_FRAM_NEED_COUNT	MFC_API/SsbSipVC1Decode.h	20;"	d
VC1_DEC_GETCONF_PHYADDR_FRAM_BUF	MFC_API/SsbSipVC1Decode.h	19;"	d
VC1_DEC_GETCONF_STREAMINFO	MFC_API/SsbSipVC1Decode.h	18;"	d
VC1_DEC_SETCONF_POST_ROTATE	MFC_API/SsbSipVC1Decode.h	22;"	d
__SAMSUNG_SYSLSI_APDEV_MFCLIB_SSBSIPVC1DECODE_H__	MFC_API/SsbSipVC1Decode.h	2;"	d
buf_height	MFC_API/SsbSipVC1Decode.h	/^	int buf_height;$/;"	m	struct:__anon12
buf_width	MFC_API/SsbSipVC1Decode.h	/^	int buf_width;$/;"	m	struct:__anon12
height	MFC_API/SsbSipVC1Decode.h	/^	int height;$/;"	m	struct:__anon12
width	MFC_API/SsbSipVC1Decode.h	/^	int width;$/;"	m	struct:__anon12
CC	Makefile	/^CC = arm-none-linux-gnueabi-g++ $/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -c -Os -Wall -DLCD_SIZE_43 $/;"	m
DEPENDENCY	Makefile	/^DEPENDENCY = .\/Common\/lcd.h 			\\$/;"	m
INC	Makefile	/^INC = -I.\/g729a_src -I.\/Common -I.\/FrameExtractor -I.\/MFC_API -I.\/JPEG_API -I\/home\/xuyy\/arm-alsa\/include -I.\/Raptor $/;"	m
KERNEL_PATH	Makefile	/^KERNEL_PATH = \/s3c-linux-2.6.28.6-TOP6410$/;"	m
LIBRARY	Makefile	/^LIBRARY = .\/libasound.so .\/libg729a_arm.a$/;"	m
OBJECTS	Makefile	/^OBJECTS = .\/main.o						\\$/;"	m
SRCS	Makefile	/^SRCS =    .\/main.cpp   				\\$/;"	m
TARGET	Makefile	/^TARGET = multimedia_test$/;"	m
CC	Raptor/Makefile	/^CC = \/usr\/local\/arm\/4.3.2\/bin\/arm-linux-gcc-4.3.2$/;"	m
CFLAGS	Raptor/Makefile	/^CFLAGS =-g -c -lm -Os -Wall -std=gnu99$/;"	m
DEPENDENCY	Raptor/Makefile	/^DEPENDENCY = def.h   \\$/;"	m
INC	Raptor/Makefile	/^INC = -I..\/Common$/;"	m
OBJECTS	Raptor/Makefile	/^OBJECTS = matrix.o    \\$/;"	m
SRCS	Raptor/Makefile	/^SRCS = $(OBJECTS:.o=.c)$/;"	m
TARGET	Raptor/Makefile	/^TARGET = app$/;"	m
K_MAX	Raptor/def.h	11;"	d
Q	Raptor/def.h	12;"	d
_DEF_H	Raptor/def.h	2;"	d
uint16	Raptor/def.h	/^typedef unsigned short uint16;$/;"	t
uint32	Raptor/def.h	/^typedef	unsigned int uint32;$/;"	t
uint8	Raptor/def.h	/^typedef	unsigned char uint8;$/;"	t
matrix_free	Raptor/matrix.c	/^\/*static*\/ void matrix_free(uint8** mat,uint32 size){$/;"	f
matrix_init	Raptor/matrix.c	/^int matrix_init(uint32 rownum, uint32 columnum, mymatrix mymat){$/;"	f
matrix_inverse	Raptor/matrix.c	/^int matrix_inverse(mymatrix A,mymatrix A_1){$/;"	f
matrix_reset	Raptor/matrix.c	/^int matrix_reset(uint32 rownum , uint32 columnum, mymatrix mymat){$/;"	f
row_exchange	Raptor/matrix.c	/^\/*static*\/ void row_exchange(uint32 row1, uint32 row2, uint8** mat,uint32 matsize){$/;"	f
row_or	Raptor/matrix.c	/^\/*static*\/ void row_or(uint32 row1,uint32 row2,uint8** mat,uint32 matsize){$/;"	f
search_col_1	Raptor/matrix.c	/^\/*static*\/ uint32 search_col_1(uint8** mat, uint32 start,uint32 matsize){$/;"	f
LEN_INT	Raptor/matrix.h	6;"	d
MyMatrix	Raptor/matrix.h	/^}MyMatrix,*mymatrix;$/;"	t	typeref:struct:__anon4
colum	Raptor/matrix.h	/^	uint32 colum;$/;"	m	struct:__anon4
mymatrix	Raptor/matrix.h	/^}MyMatrix,*mymatrix;$/;"	t	typeref:struct:__anon4
row	Raptor/matrix.h	/^	uint32 row;$/;"	m	struct:__anon4
rowpoint	Raptor/matrix.h	/^	uint8 ** rowpoint;$/;"	m	struct:__anon4
H	Raptor/raptorcode.c	/^static uint8 const H[]={0,4,4,4,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,$/;"	v	file:
J	Raptor/raptorcode.c	/^static uint16 const J[]={0,0,0,0,18,14,61,46,14,22,20,40,48,1,29,40,43,46,18,8,20,2,61,26,13,29,36,19,58,5,58,0,54,56,24,14,5,67,39,31,25,29,24,19,14,56,49,49,63,30,4,39,2,1,20,19,61,4,54,$/;"	v	file:
L1	Raptor/raptorcode.c	/^static uint16 const L1[]={1,7,11,11,17,17,17,23,23,23,23,29,29,29,29,29,37,37,37,37,41,41,41,41,43,47,47,47,47,53,53,53,53,53,53,59,59,59,59,59,59,61,61,67,67,67,67,71,71,71,71,73,73,79,$/;"	v	file:
S	Raptor/raptorcode.c	/^static uint8 const S[]={0,2,3,3,5,5,5,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,$/;"	v	file:
V0	Raptor/raptorcode.c	/^static uint32 const V0[]={251291136, 3952231631, 3370958628, 4070167936, 123631495, 3351110283,3218676425, 2011642291, 774603218, 2402805061, 1004366930,$/;"	v	file:
V1	Raptor/raptorcode.c	/^static uint32 const V1[]={807385413, 2043073223, 3336749796, 1302105833, 2278607931, 541015020,1684564270, 372709334, 3508252125, 1768346005, 1270451292,$/;"	v	file:
d	Raptor/raptorcode.c	/^static uint8 const d[] = {0,1,2,3,4,10,11,40};$/;"	v	file:
deg	Raptor/raptorcode.c	/^\/*static*\/ uint8 deg(uint32 v){$/;"	f
f	Raptor/raptorcode.c	/^static uint32 const f[] = {0,10241,491582,712794,831695,948446,1032189,1048576};$/;"	v	file:
gray	Raptor/raptorcode.c	/^static uint16 const gray[]={1,3,2,6,7,5,4,12,13,15,14,10,11,9,8,24,25,27,26,30,31,29,28,20,21,23,22,18,19,17,16,48,49,51,50,54,55,53,52,60,61,63,62,58,59,57,56,40,41,43,42,46,47,45,44,$/;"	v	file:
gray_m	Raptor/raptorcode.c	/^\/*static*\/ uint16 gray_m(int j,float k){$/;"	f
min	Raptor/raptorcode.c	357;"	d	file:
my_xor	Raptor/raptorcode.c	/^\/*static*\/ void my_xor(uint8 * x, uint8 * y, uint32 size){  \/\/ ����X^Y, ���������X��$/;"	f
myrand	Raptor/raptorcode.c	/^\/*static*\/ uint32 myrand(int x,int i,int m){$/;"	f
raptor_encode	Raptor/raptorcode.c	/^int raptor_encode(RParam parameter,uint32 R,uint8* input,uint8* intermediate,uint8* output,uint32 size){$/;"	f
raptor_getH	Raptor/raptorcode.c	/^\/*static*\/ void raptor_getH(RParam parameter){$/;"	f
raptor_getLDPC	Raptor/raptorcode.c	/^\/*static*\/ void raptor_getLDPC(RParam parameter){$/;"	f
raptor_getLT	Raptor/raptorcode.c	/^\/*static*\/ void raptor_getLT(RParam parameter){$/;"	f
raptor_init	Raptor/raptorcode.c	/^int raptor_init(uint32 k,RParam parameter){$/;"	f
raptor_intermediate	Raptor/raptorcode.c	/^\/*static*\/ int raptor_intermediate(RParam parameter){$/;"	f
raptor_parameterfree	Raptor/raptorcode.c	/^void raptor_parameterfree(RParam parameter){$/;"	f
raptor_reset	Raptor/raptorcode.c	/^int raptor_reset(uint32 k,RParam parameter){$/;"	f
trip	Raptor/raptorcode.c	/^\/*static*\/ void trip(int K, int X, triple trp){$/;"	f
A_1mat	Raptor/raptorcode.h	/^	mymatrix A_1mat;$/;"	m	struct:__anon2
Amat	Raptor/raptorcode.h	/^	mymatrix Amat;$/;"	m	struct:__anon2
Amat_dec	Raptor/raptorcode.h	/^	mymatrix Amat_dec;$/;"	m	struct:__anon3
H	Raptor/raptorcode.h	/^	uint32 H;$/;"	m	struct:__anon2
H	Raptor/raptorcode.h	/^	uint32 H;$/;"	m	struct:__anon3
K	Raptor/raptorcode.h	/^	uint32 K;$/;"	m	struct:__anon2
K	Raptor/raptorcode.h	/^	uint32 K;$/;"	m	struct:__anon3
L	Raptor/raptorcode.h	/^	uint32 L;$/;"	m	struct:__anon2
L	Raptor/raptorcode.h	/^	uint32 L;$/;"	m	struct:__anon3
M	Raptor/raptorcode.h	/^	uint32 M;$/;"	m	struct:__anon3
N	Raptor/raptorcode.h	/^	uint32 N;$/;"	m	struct:__anon3
RParam	Raptor/raptorcode.h	/^}RaptorParam,*RParam;$/;"	t	typeref:struct:__anon2
RParam_dec	Raptor/raptorcode.h	/^}RaptorParam_dec,*RParam_dec;$/;"	t	typeref:struct:__anon3
RaptorParam	Raptor/raptorcode.h	/^}RaptorParam,*RParam;$/;"	t	typeref:struct:__anon2
RaptorParam_dec	Raptor/raptorcode.h	/^}RaptorParam_dec,*RParam_dec;$/;"	t	typeref:struct:__anon3
S	Raptor/raptorcode.h	/^	uint32 S;$/;"	m	struct:__anon2
S	Raptor/raptorcode.h	/^	uint32 S;$/;"	m	struct:__anon3
Triple	Raptor/raptorcode.h	/^}Triple,*triple;$/;"	t	typeref:struct:__anon1
a	Raptor/raptorcode.h	/^	uint32 a;$/;"	m	struct:__anon1
b	Raptor/raptorcode.h	/^	uint32 b;$/;"	m	struct:__anon1
d	Raptor/raptorcode.h	/^	uint8 d;$/;"	m	struct:__anon1
list	Raptor/raptorcode.h	/^	uint16* list;$/;"	m	struct:__anon3
triple	Raptor/raptorcode.h	/^}Triple,*triple;$/;"	t	typeref:struct:__anon1
trp	Raptor/raptorcode.h	/^	triple trp;$/;"	m	struct:__anon2
YOM_Initialize	YUVOSDMixer.cpp	/^HANDLE YOM_Initialize()$/;"	f
YOM_MixOSD	YUVOSDMixer.cpp	/^DWORD YOM_MixOSD(HANDLE hMixer, const MixerConfig *pConfig, const YUVImage *pYUVImage)$/;"	f
YOM_Uninitialize	YUVOSDMixer.cpp	/^VOID YOM_Uninitialize(HANDLE hMixer)$/;"	f
FONT_SIZE_12	YUVOSDMixer.h	/^	FONT_SIZE_12 = 0, $/;"	e	enum:__anon34
FONT_SIZE_16	YUVOSDMixer.h	/^	FONT_SIZE_16 = 1, $/;"	e	enum:__anon34
FONT_SIZE_24	YUVOSDMixer.h	/^	FONT_SIZE_24 = 2, $/;"	e	enum:__anon34
MAX_MASK_COUNT	YUVOSDMixer.h	/^	MAX_MASK_COUNT	= 4, $/;"	e	enum:__anon36
MAX_TEXT_COUNT	YUVOSDMixer.h	/^	MAX_TEXT_COUNT	= 4, $/;"	e	enum:__anon36
MAX_TEXT_LENGTH	YUVOSDMixer.h	/^	MAX_TEXT_LENGTH	= 128, $/;"	e	enum:__anon36
MaskConfig	YUVOSDMixer.h	/^typedef struct MaskConfig$/;"	s
MaskConfig	YUVOSDMixer.h	/^}MaskConfig;$/;"	t	typeref:struct:MaskConfig
MixerConfig	YUVOSDMixer.h	/^typedef struct MixerConfig$/;"	s
MixerConfig	YUVOSDMixer.h	/^}MixerConfig;$/;"	t	typeref:struct:MixerConfig
TIME_FMT_BASE	YUVOSDMixer.h	/^	TIME_FMT_BASE	= 0x9000, $/;"	e	enum:__anon35
TIME_FMT_CWEEK1	YUVOSDMixer.h	/^	TIME_FMT_CWEEK1	= TIME_FMT_BASE + 7, $/;"	e	enum:__anon35
TIME_FMT_DAY	YUVOSDMixer.h	/^	TIME_FMT_DAY	= TIME_FMT_BASE + 5, $/;"	e	enum:__anon35
TIME_FMT_HOUR12	YUVOSDMixer.h	/^	TIME_FMT_HOUR12	= TIME_FMT_BASE + 9, $/;"	e	enum:__anon35
TIME_FMT_HOUR24	YUVOSDMixer.h	/^	TIME_FMT_HOUR24	= TIME_FMT_BASE + 8, $/;"	e	enum:__anon35
TIME_FMT_MINUTE	YUVOSDMixer.h	/^	TIME_FMT_MINUTE	= TIME_FMT_BASE + 10, $/;"	e	enum:__anon35
TIME_FMT_MONTH2	YUVOSDMixer.h	/^	TIME_FMT_MONTH2	= TIME_FMT_BASE + 4, $/;"	e	enum:__anon35
TIME_FMT_MONTH3	YUVOSDMixer.h	/^	TIME_FMT_MONTH3	= TIME_FMT_BASE + 3, $/;"	e	enum:__anon35
TIME_FMT_SECOND	YUVOSDMixer.h	/^	TIME_FMT_SECOND	= TIME_FMT_BASE + 11, $/;"	e	enum:__anon35
TIME_FMT_WEEK3	YUVOSDMixer.h	/^	TIME_FMT_WEEK3	= TIME_FMT_BASE + 6, $/;"	e	enum:__anon35
TIME_FMT_YEAR2	YUVOSDMixer.h	/^	TIME_FMT_YEAR2	= TIME_FMT_BASE + 2, $/;"	e	enum:__anon35
TIME_FMT_YEAR4	YUVOSDMixer.h	/^	TIME_FMT_YEAR4	= TIME_FMT_BASE + 1, $/;"	e	enum:__anon35
TextConfig	YUVOSDMixer.h	/^typedef struct TextConfig$/;"	s
TextConfig	YUVOSDMixer.h	/^}TextConfig;$/;"	t	typeref:struct:TextConfig
YUVImage	YUVOSDMixer.h	/^typedef struct YUVImage$/;"	s
YUVImage	YUVOSDMixer.h	/^}YUVImage;$/;"	t	typeref:struct:YUVImage
YUVOSDMixer_H	YUVOSDMixer.h	3;"	d
YUV_FMT_I420	YUVOSDMixer.h	/^	YUV_FMT_I420 = 1, $/;"	e	enum:__anon33
YUV_FMT_UYVY	YUVOSDMixer.h	/^	YUV_FMT_UYVY = 4, $/;"	e	enum:__anon33
YUV_FMT_YUYV	YUVOSDMixer.h	/^	YUV_FMT_YUYV = 2, $/;"	e	enum:__anon33
YUV_FMT_YV12	YUVOSDMixer.h	/^	YUV_FMT_YV12 = 0, $/;"	e	enum:__anon33
YUV_FMT_YVYU	YUVOSDMixer.h	/^	YUV_FMT_YVYU = 3, $/;"	e	enum:__anon33
bAdjustFontLuma	YUVOSDMixer.h	/^	int bAdjustFontLuma;	\/\/	auto adjust font color per 32 frames. two color, white and black.$/;"	m	struct:TextConfig
bEnable	YUVOSDMixer.h	/^	int bEnable;$/;"	m	struct:MaskConfig
bEnable	YUVOSDMixer.h	/^	int bEnable;$/;"	m	struct:TextConfig
byFontLuma	YUVOSDMixer.h	/^	BYTE byFontLuma;		\/\/	the value of Y$/;"	m	struct:TextConfig
byReserve	YUVOSDMixer.h	/^	BYTE byReserve[3];$/;"	m	struct:TextConfig
dwFontSize	YUVOSDMixer.h	/^	DWORD dwFontSize;$/;"	m	struct:TextConfig
dwHeight	YUVOSDMixer.h	/^	DWORD dwHeight;$/;"	m	struct:YUVImage
dwPitch	YUVOSDMixer.h	/^	DWORD dwPitch;$/;"	m	struct:YUVImage
dwYUVFmt	YUVOSDMixer.h	/^	DWORD dwYUVFmt;$/;"	m	struct:YUVImage
lpYUVImage	YUVOSDMixer.h	/^	LPBYTE lpYUVImage;$/;"	m	struct:YUVImage
maskConfig	YUVOSDMixer.h	/^	MaskConfig maskConfig[MAX_MASK_COUNT];$/;"	m	struct:MixerConfig
rtMask	YUVOSDMixer.h	/^	myRECT rtMask;$/;"	m	struct:MaskConfig
szText	YUVOSDMixer.h	/^		CHAR szText[MAX_TEXT_LENGTH];$/;"	m	union:TextConfig::__anon37
tFormat	YUVOSDMixer.h	/^		BYTE tFormat[MAX_TEXT_LENGTH];$/;"	m	union:TextConfig::__anon37
textConfig	YUVOSDMixer.h	/^	TextConfig textConfig[MAX_TEXT_COUNT];$/;"	m	struct:MixerConfig
timeConfig	YUVOSDMixer.h	/^	TextConfig timeConfig;$/;"	m	struct:MixerConfig
x	YUVOSDMixer.h	/^	DWORD x;$/;"	m	struct:TextConfig
y	YUVOSDMixer.h	/^	DWORD y;$/;"	m	struct:TextConfig
COLOR_SWITCH_FACTOR	YUVOSDMixerT.h	/^	COLOR_SWITCH_FACTOR = (0x0001 << 7) - 1, $/;"	e	enum:__anon27
CYUVOSDMixer	YUVOSDMixerT.h	/^typedef YUVOSDMixerT<0> CYUVOSDMixer;$/;"	t
DrawMask	YUVOSDMixerT.h	/^	VOID DrawMask(LPBYTE pBuffer, DWORD dwPitch, DWORD dwHeight, DWORD dwShift, const myRECT &rtMask)$/;"	f	class:YUVOSDMixerT
DrawMask	YUVOSDMixerT.h	/^	VOID DrawMask(LPBYTE pY, LPBYTE pU, LPBYTE pV, DWORD dwPitch, DWORD dwHeight, const myRECT &rtMask)$/;"	f	class:YUVOSDMixerT
DrawParam	YUVOSDMixerT.h	/^typedef struct DrawParam$/;"	s
DrawParam	YUVOSDMixerT.h	/^}DrawParam;$/;"	t	typeref:struct:DrawParam
DrawTime	YUVOSDMixerT.h	/^	VOID DrawTime(const TextConfig &timeConfig, const YUVImageEx &yuvImage)$/;"	f	class:YUVOSDMixerT
MatchDotMatrix	YUVOSDMixerT.h	/^void MatchDotMatrix(PCHAR pTxt, DWORD dwTxtWidth, DWORD dwTxtHeight, FunDrawPoint funCallBack, DWORD dwContext)$/;"	f
MixOSD	YUVOSDMixerT.h	/^	DWORD MixOSD(const MixerConfig *pConfig, const YUVImage *pYUVImage)$/;"	f	class:YUVOSDMixerT
TextPrint	YUVOSDMixerT.h	/^	VOID TextPrint(LPBYTE pBuffer, DWORD dwPitch, DWORD dwHeight, LONG x, LONG y, PCCH lpszText, int bAdjustFontLuma, BYTE byFontLuma, LPBYTE lpLuma, DWORD dwYStep, PBYTE pASC, PBYTE pHZK)$/;"	f	class:YUVOSDMixerT
TextPrintEx	YUVOSDMixerT.h	/^	VOID TextPrintEx(LPCSTR lpszText, const TextConfig &textConfig, const YUVImageEx &yuvImage, LPBYTE lpLuma)$/;"	f	class:YUVOSDMixerT
YUVImageEx	YUVOSDMixerT.h	/^struct YUVImageEx : public YUVImage$/;"	s
YUVImageEx	YUVOSDMixerT.h	/^typedef struct YUVImageEx YUVImageEx;$/;"	t	typeref:struct:YUVImageEx
YUVOSDMixerT	YUVOSDMixerT.h	/^	YUVOSDMixerT()$/;"	f	class:YUVOSDMixerT
YUVOSDMixerT	YUVOSDMixerT.h	/^class YUVOSDMixerT$/;"	c
YUVOSDMixerT_H	YUVOSDMixerT.h	3;"	d
_BuildOSDTime	YUVOSDMixerT.h	/^	static VOID _BuildOSDTime(LPSTR pszTime, size_t nBufferSize, LPCBYTE pInputFormat, struct tm *pTMTime)$/;"	f	class:YUVOSDMixerT
_DrawPoint	YUVOSDMixerT.h	/^inline VOID _DrawPoint(LONG x, LONG y, DWORD dwContext)$/;"	f
bAdjustFontLuma	YUVOSDMixerT.h	/^	int bAdjustFontLuma;	\/\/	�Զ������ַ����ȣ�$/;"	m	struct:DrawParam
byFontLuma	YUVOSDMixerT.h	/^	BYTE byFontLuma;		\/\/	�粻�Զ�������Ҫ���õ��ַ�����$/;"	m	struct:DrawParam
byLuma	YUVOSDMixerT.h	/^	BYTE byLuma;			\/\/	�ݴ��ַ�����, $/;"	m	struct:DrawParam
byReserve	YUVOSDMixerT.h	/^	BYTE byReserve[2];$/;"	m	struct:DrawParam
dwYShift	YUVOSDMixerT.h	/^	DWORD dwYShift;$/;"	m	struct:DrawParam
dwYShift	YUVOSDMixerT.h	/^	DWORD dwYShift;$/;"	m	struct:YUVImageEx
lCounter	YUVOSDMixerT.h	/^	LONG lCounter;			\/\/	�ַ�����Ч��ļ�����$/;"	m	struct:DrawParam
lFrameIndex	YUVOSDMixerT.h	/^	LONG lFrameIndex;$/;"	m	struct:DrawParam
lHeight	YUVOSDMixerT.h	/^	LONG lHeight;$/;"	m	struct:DrawParam
lWidth	YUVOSDMixerT.h	/^	LONG lWidth;$/;"	m	struct:DrawParam
m_lCurrentFrame	YUVOSDMixerT.h	/^	LONG m_lCurrentFrame;$/;"	m	class:YUVOSDMixerT
m_textLuma	YUVOSDMixerT.h	/^	BYTE m_textLuma[MAX_TEXT_COUNT][MAX_TEXT_LENGTH];$/;"	m	class:YUVOSDMixerT
m_timeLuma	YUVOSDMixerT.h	/^	BYTE m_timeLuma[MAX_TEXT_LENGTH];$/;"	m	class:YUVOSDMixerT
pY	YUVOSDMixerT.h	/^	LPBYTE pY;$/;"	m	struct:DrawParam
x	YUVOSDMixerT.h	/^	DWORD x;$/;"	m	struct:DrawParam
y	YUVOSDMixerT.h	/^	DWORD y;$/;"	m	struct:DrawParam
alisp_cfg	alsa/alisp.h	/^struct alisp_cfg {$/;"	s
debug	alsa/alisp.h	/^	    debug: 1;$/;"	m	struct:alisp_cfg
dout	alsa/alisp.h	/^	snd_output_t *dout;	\/* debug output *\/$/;"	m	struct:alisp_cfg
eout	alsa/alisp.h	/^	snd_output_t *eout;	\/* error output *\/$/;"	m	struct:alisp_cfg
in	alsa/alisp.h	/^	snd_input_t *in;	\/* program code *\/$/;"	m	struct:alisp_cfg
out	alsa/alisp.h	/^	snd_output_t *out;	\/* program output *\/$/;"	m	struct:alisp_cfg
verbose	alsa/alisp.h	/^	int verbose: 1,$/;"	m	struct:alisp_cfg
vout	alsa/alisp.h	/^	snd_output_t *vout;	\/* verbose output *\/$/;"	m	struct:alisp_cfg
warning	alsa/alisp.h	/^	    warning: 1,$/;"	m	struct:alisp_cfg
wout	alsa/alisp.h	/^	snd_output_t *wout;	\/* warning output *\/$/;"	m	struct:alisp_cfg
IEC958_AES0_CON_EMPHASIS	alsa/asoundef.h	55;"	d
IEC958_AES0_CON_EMPHASIS_5015	alsa/asoundef.h	57;"	d
IEC958_AES0_CON_EMPHASIS_NONE	alsa/asoundef.h	56;"	d
IEC958_AES0_CON_MODE	alsa/asoundef.h	58;"	d
IEC958_AES0_CON_NOT_COPYRIGHT	alsa/asoundef.h	54;"	d
IEC958_AES0_NONAUDIO	alsa/asoundef.h	42;"	d
IEC958_AES0_PROFESSIONAL	alsa/asoundef.h	41;"	d
IEC958_AES0_PRO_EMPHASIS	alsa/asoundef.h	43;"	d
IEC958_AES0_PRO_EMPHASIS_5015	alsa/asoundef.h	46;"	d
IEC958_AES0_PRO_EMPHASIS_CCITT	alsa/asoundef.h	47;"	d
IEC958_AES0_PRO_EMPHASIS_NONE	alsa/asoundef.h	45;"	d
IEC958_AES0_PRO_EMPHASIS_NOTID	alsa/asoundef.h	44;"	d
IEC958_AES0_PRO_FREQ_UNLOCKED	alsa/asoundef.h	48;"	d
IEC958_AES0_PRO_FS	alsa/asoundef.h	49;"	d
IEC958_AES0_PRO_FS_32000	alsa/asoundef.h	53;"	d
IEC958_AES0_PRO_FS_44100	alsa/asoundef.h	51;"	d
IEC958_AES0_PRO_FS_48000	alsa/asoundef.h	52;"	d
IEC958_AES0_PRO_FS_NOTID	alsa/asoundef.h	50;"	d
IEC958_AES1_CON_ADC_COPYRIGHT_ID	alsa/asoundef.h	80;"	d
IEC958_AES1_CON_ADC_COPYRIGHT_MASK	alsa/asoundef.h	79;"	d
IEC958_AES1_CON_ADC_ID	alsa/asoundef.h	82;"	d
IEC958_AES1_CON_ADC_MASK	alsa/asoundef.h	81;"	d
IEC958_AES1_CON_BROADCAST1_ID	alsa/asoundef.h	76;"	d
IEC958_AES1_CON_BROADCAST1_MASK	alsa/asoundef.h	75;"	d
IEC958_AES1_CON_BROADCAST2_ID	alsa/asoundef.h	84;"	d
IEC958_AES1_CON_BROADCAST2_MASK	alsa/asoundef.h	83;"	d
IEC958_AES1_CON_CATEGORY	alsa/asoundef.h	70;"	d
IEC958_AES1_CON_DAT	alsa/asoundef.h	99;"	d
IEC958_AES1_CON_DIGDIGCONV_ID	alsa/asoundef.h	78;"	d
IEC958_AES1_CON_DIGDIGCONV_MASK	alsa/asoundef.h	77;"	d
IEC958_AES1_CON_EXPERIMENTAL	alsa/asoundef.h	72;"	d
IEC958_AES1_CON_GENERAL	alsa/asoundef.h	71;"	d
IEC958_AES1_CON_IEC908_CD	alsa/asoundef.h	91;"	d
IEC958_AES1_CON_LASEROPT_ID	alsa/asoundef.h	86;"	d
IEC958_AES1_CON_LASEROPT_MASK	alsa/asoundef.h	85;"	d
IEC958_AES1_CON_MAGNETIC_ID	alsa/asoundef.h	90;"	d
IEC958_AES1_CON_MAGNETIC_MASK	alsa/asoundef.h	89;"	d
IEC958_AES1_CON_MICROPHONE	alsa/asoundef.h	98;"	d
IEC958_AES1_CON_MIXER	alsa/asoundef.h	95;"	d
IEC958_AES1_CON_MUSICAL_ID	alsa/asoundef.h	88;"	d
IEC958_AES1_CON_MUSICAL_MASK	alsa/asoundef.h	87;"	d
IEC958_AES1_CON_NON_IEC908_CD	alsa/asoundef.h	92;"	d
IEC958_AES1_CON_ORIGINAL	alsa/asoundef.h	101;"	d
IEC958_AES1_CON_PCM_CODER	alsa/asoundef.h	93;"	d
IEC958_AES1_CON_RATE_CONVERTER	alsa/asoundef.h	96;"	d
IEC958_AES1_CON_SAMPLER	alsa/asoundef.h	94;"	d
IEC958_AES1_CON_SOLIDMEM_ID	alsa/asoundef.h	74;"	d
IEC958_AES1_CON_SOLIDMEM_MASK	alsa/asoundef.h	73;"	d
IEC958_AES1_CON_SYNTHESIZER	alsa/asoundef.h	97;"	d
IEC958_AES1_CON_VCR	alsa/asoundef.h	100;"	d
IEC958_AES1_PRO_MODE	alsa/asoundef.h	59;"	d
IEC958_AES1_PRO_MODE_BYTE3	alsa/asoundef.h	65;"	d
IEC958_AES1_PRO_MODE_NOTID	alsa/asoundef.h	60;"	d
IEC958_AES1_PRO_MODE_PRIMARY	alsa/asoundef.h	64;"	d
IEC958_AES1_PRO_MODE_SINGLE	alsa/asoundef.h	62;"	d
IEC958_AES1_PRO_MODE_STEREOPHONIC	alsa/asoundef.h	61;"	d
IEC958_AES1_PRO_MODE_TWO	alsa/asoundef.h	63;"	d
IEC958_AES1_PRO_USERBITS	alsa/asoundef.h	66;"	d
IEC958_AES1_PRO_USERBITS_192	alsa/asoundef.h	68;"	d
IEC958_AES1_PRO_USERBITS_NOTID	alsa/asoundef.h	67;"	d
IEC958_AES1_PRO_USERBITS_UDEF	alsa/asoundef.h	69;"	d
IEC958_AES2_CON_CHANNEL	alsa/asoundef.h	114;"	d
IEC958_AES2_CON_CHANNEL_UNSPEC	alsa/asoundef.h	115;"	d
IEC958_AES2_CON_SOURCE	alsa/asoundef.h	112;"	d
IEC958_AES2_CON_SOURCE_UNSPEC	alsa/asoundef.h	113;"	d
IEC958_AES2_PRO_SBITS	alsa/asoundef.h	102;"	d
IEC958_AES2_PRO_SBITS_20	alsa/asoundef.h	103;"	d
IEC958_AES2_PRO_SBITS_24	alsa/asoundef.h	104;"	d
IEC958_AES2_PRO_SBITS_UDEF	alsa/asoundef.h	105;"	d
IEC958_AES2_PRO_WORDLEN	alsa/asoundef.h	106;"	d
IEC958_AES2_PRO_WORDLEN_20_16	alsa/asoundef.h	111;"	d
IEC958_AES2_PRO_WORDLEN_22_18	alsa/asoundef.h	108;"	d
IEC958_AES2_PRO_WORDLEN_23_19	alsa/asoundef.h	109;"	d
IEC958_AES2_PRO_WORDLEN_24_20	alsa/asoundef.h	110;"	d
IEC958_AES2_PRO_WORDLEN_NOTID	alsa/asoundef.h	107;"	d
IEC958_AES3_CON_CLOCK	alsa/asoundef.h	120;"	d
IEC958_AES3_CON_CLOCK_1000PPM	alsa/asoundef.h	121;"	d
IEC958_AES3_CON_CLOCK_50PPM	alsa/asoundef.h	122;"	d
IEC958_AES3_CON_CLOCK_VARIABLE	alsa/asoundef.h	123;"	d
IEC958_AES3_CON_FS	alsa/asoundef.h	116;"	d
IEC958_AES3_CON_FS_32000	alsa/asoundef.h	119;"	d
IEC958_AES3_CON_FS_44100	alsa/asoundef.h	117;"	d
IEC958_AES3_CON_FS_48000	alsa/asoundef.h	118;"	d
MIDI_CHANNELS	alsa/asoundef.h	133;"	d
MIDI_CMD_BENDER	alsa/asoundef.h	148;"	d
MIDI_CMD_CHANNEL_PRESSURE	alsa/asoundef.h	147;"	d
MIDI_CMD_COMMON_CLOCK	alsa/asoundef.h	156;"	d
MIDI_CMD_COMMON_CONTINUE	alsa/asoundef.h	158;"	d
MIDI_CMD_COMMON_MTC_QUARTER	alsa/asoundef.h	151;"	d
MIDI_CMD_COMMON_RESET	alsa/asoundef.h	161;"	d
MIDI_CMD_COMMON_SENSING	alsa/asoundef.h	160;"	d
MIDI_CMD_COMMON_SONG_POS	alsa/asoundef.h	152;"	d
MIDI_CMD_COMMON_SONG_SELECT	alsa/asoundef.h	153;"	d
MIDI_CMD_COMMON_START	alsa/asoundef.h	157;"	d
MIDI_CMD_COMMON_STOP	alsa/asoundef.h	159;"	d
MIDI_CMD_COMMON_SYSEX	alsa/asoundef.h	150;"	d
MIDI_CMD_COMMON_SYSEX_END	alsa/asoundef.h	155;"	d
MIDI_CMD_COMMON_TUNE_REQUEST	alsa/asoundef.h	154;"	d
MIDI_CMD_CONTROL	alsa/asoundef.h	145;"	d
MIDI_CMD_NOTE_OFF	alsa/asoundef.h	142;"	d
MIDI_CMD_NOTE_ON	alsa/asoundef.h	143;"	d
MIDI_CMD_NOTE_PRESSURE	alsa/asoundef.h	144;"	d
MIDI_CMD_PGM_CHANGE	alsa/asoundef.h	146;"	d
MIDI_CTL_ALL_NOTES_OFF	alsa/asoundef.h	239;"	d
MIDI_CTL_ALL_SOUNDS_OFF	alsa/asoundef.h	236;"	d
MIDI_CTL_DATA_DECREMENT	alsa/asoundef.h	231;"	d
MIDI_CTL_DATA_INCREMENT	alsa/asoundef.h	230;"	d
MIDI_CTL_E1_REVERB_DEPTH	alsa/asoundef.h	225;"	d
MIDI_CTL_E2_TREMOLO_DEPTH	alsa/asoundef.h	226;"	d
MIDI_CTL_E3_CHORUS_DEPTH	alsa/asoundef.h	227;"	d
MIDI_CTL_E4_DETUNE_DEPTH	alsa/asoundef.h	228;"	d
MIDI_CTL_E5_PHASER_DEPTH	alsa/asoundef.h	229;"	d
MIDI_CTL_GENERAL_PURPOSE5	alsa/asoundef.h	220;"	d
MIDI_CTL_GENERAL_PURPOSE6	alsa/asoundef.h	221;"	d
MIDI_CTL_GENERAL_PURPOSE7	alsa/asoundef.h	222;"	d
MIDI_CTL_GENERAL_PURPOSE8	alsa/asoundef.h	223;"	d
MIDI_CTL_HOLD2	alsa/asoundef.h	209;"	d
MIDI_CTL_LEGATO_FOOTSWITCH	alsa/asoundef.h	208;"	d
MIDI_CTL_LOCAL_CONTROL_SWITCH	alsa/asoundef.h	238;"	d
MIDI_CTL_LSB_BALANCE	alsa/asoundef.h	194;"	d
MIDI_CTL_LSB_BANK	alsa/asoundef.h	187;"	d
MIDI_CTL_LSB_BREATH	alsa/asoundef.h	189;"	d
MIDI_CTL_LSB_DATA_ENTRY	alsa/asoundef.h	192;"	d
MIDI_CTL_LSB_EFFECT1	alsa/asoundef.h	197;"	d
MIDI_CTL_LSB_EFFECT2	alsa/asoundef.h	198;"	d
MIDI_CTL_LSB_EXPRESSION	alsa/asoundef.h	196;"	d
MIDI_CTL_LSB_FOOT	alsa/asoundef.h	190;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE1	alsa/asoundef.h	199;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE2	alsa/asoundef.h	200;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE3	alsa/asoundef.h	201;"	d
MIDI_CTL_LSB_GENERAL_PURPOSE4	alsa/asoundef.h	202;"	d
MIDI_CTL_LSB_MAIN_VOLUME	alsa/asoundef.h	193;"	d
MIDI_CTL_LSB_MODWHEEL	alsa/asoundef.h	188;"	d
MIDI_CTL_LSB_PAN	alsa/asoundef.h	195;"	d
MIDI_CTL_LSB_PORTAMENTO_TIME	alsa/asoundef.h	191;"	d
MIDI_CTL_MONO1	alsa/asoundef.h	242;"	d
MIDI_CTL_MONO2	alsa/asoundef.h	243;"	d
MIDI_CTL_MSB_BALANCE	alsa/asoundef.h	178;"	d
MIDI_CTL_MSB_BANK	alsa/asoundef.h	171;"	d
MIDI_CTL_MSB_BREATH	alsa/asoundef.h	173;"	d
MIDI_CTL_MSB_DATA_ENTRY	alsa/asoundef.h	176;"	d
MIDI_CTL_MSB_EFFECT1	alsa/asoundef.h	181;"	d
MIDI_CTL_MSB_EFFECT2	alsa/asoundef.h	182;"	d
MIDI_CTL_MSB_EXPRESSION	alsa/asoundef.h	180;"	d
MIDI_CTL_MSB_FOOT	alsa/asoundef.h	174;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE1	alsa/asoundef.h	183;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE2	alsa/asoundef.h	184;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE3	alsa/asoundef.h	185;"	d
MIDI_CTL_MSB_GENERAL_PURPOSE4	alsa/asoundef.h	186;"	d
MIDI_CTL_MSB_MAIN_VOLUME	alsa/asoundef.h	177;"	d
MIDI_CTL_MSB_MODWHEEL	alsa/asoundef.h	172;"	d
MIDI_CTL_MSB_PAN	alsa/asoundef.h	179;"	d
MIDI_CTL_MSB_PORTAMENTO_TIME	alsa/asoundef.h	175;"	d
MIDI_CTL_NONREG_PARM_NUM_LSB	alsa/asoundef.h	232;"	d
MIDI_CTL_NONREG_PARM_NUM_MSB	alsa/asoundef.h	233;"	d
MIDI_CTL_OMNI_OFF	alsa/asoundef.h	240;"	d
MIDI_CTL_OMNI_ON	alsa/asoundef.h	241;"	d
MIDI_CTL_PORTAMENTO	alsa/asoundef.h	204;"	d
MIDI_CTL_PORTAMENTO_CONTROL	alsa/asoundef.h	224;"	d
MIDI_CTL_REGIST_PARM_NUM_LSB	alsa/asoundef.h	234;"	d
MIDI_CTL_REGIST_PARM_NUM_MSB	alsa/asoundef.h	235;"	d
MIDI_CTL_RESET_CONTROLLERS	alsa/asoundef.h	237;"	d
MIDI_CTL_SC10	alsa/asoundef.h	219;"	d
MIDI_CTL_SC1_SOUND_VARIATION	alsa/asoundef.h	210;"	d
MIDI_CTL_SC2_TIMBRE	alsa/asoundef.h	211;"	d
MIDI_CTL_SC3_RELEASE_TIME	alsa/asoundef.h	212;"	d
MIDI_CTL_SC4_ATTACK_TIME	alsa/asoundef.h	213;"	d
MIDI_CTL_SC5_BRIGHTNESS	alsa/asoundef.h	214;"	d
MIDI_CTL_SC6	alsa/asoundef.h	215;"	d
MIDI_CTL_SC7	alsa/asoundef.h	216;"	d
MIDI_CTL_SC8	alsa/asoundef.h	217;"	d
MIDI_CTL_SC9	alsa/asoundef.h	218;"	d
MIDI_CTL_SOFT_PEDAL	alsa/asoundef.h	207;"	d
MIDI_CTL_SOSTENUTO	alsa/asoundef.h	205;"	d
MIDI_CTL_SUSTAIN	alsa/asoundef.h	203;"	d
MIDI_CTL_SUSTENUTO	alsa/asoundef.h	206;"	d
MIDI_GM_DRUM_CHANNEL	alsa/asoundef.h	134;"	d
__ALSA_ASOUNDEF_H	alsa/asoundef.h	29;"	d
__ASOUNDLIB_H	alsa/asoundlib.h	29;"	d
SND_CONFIG_DLSYM_VERSION_EVALUATE	alsa/conf.h	43;"	d
SND_CONFIG_DLSYM_VERSION_HOOK	alsa/conf.h	45;"	d
SND_CONFIG_TYPE_COMPOUND	alsa/conf.h	/^	SND_CONFIG_TYPE_COMPOUND = 1024$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_INTEGER	alsa/conf.h	/^        SND_CONFIG_TYPE_INTEGER,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_INTEGER64	alsa/conf.h	/^        SND_CONFIG_TYPE_INTEGER64,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_POINTER	alsa/conf.h	/^        SND_CONFIG_TYPE_POINTER,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_REAL	alsa/conf.h	/^        SND_CONFIG_TYPE_REAL,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_STRING	alsa/conf.h	/^        SND_CONFIG_TYPE_STRING,$/;"	e	enum:_snd_config_type
__ALSA_CONF_H	alsa/conf.h	29;"	d
_snd_config_type	alsa/conf.h	/^typedef enum _snd_config_type {$/;"	g
comment	alsa/conf.h	/^	char *comment;	\/**< Comments *\/$/;"	m	struct:snd_devname
name	alsa/conf.h	/^	char *name;	\/**< Device name string *\/$/;"	m	struct:snd_devname
next	alsa/conf.h	/^	snd_devname_t *next;	\/**< Next pointer *\/$/;"	m	struct:snd_devname
snd_config_for_each	alsa/conf.h	163;"	d
snd_config_iterator_t	alsa/conf.h	/^typedef struct _snd_config_iterator *snd_config_iterator_t;$/;"	t	typeref:struct:_snd_config_iterator
snd_config_t	alsa/conf.h	/^typedef struct _snd_config snd_config_t;$/;"	t	typeref:struct:_snd_config
snd_config_type_t	alsa/conf.h	/^} snd_config_type_t;$/;"	t	typeref:enum:_snd_config_type
snd_config_update_t	alsa/conf.h	/^typedef struct _snd_config_update snd_config_update_t;$/;"	t	typeref:struct:_snd_config_update
snd_devname	alsa/conf.h	/^struct snd_devname {$/;"	s
snd_devname_t	alsa/conf.h	/^typedef struct snd_devname snd_devname_t;$/;"	t	typeref:struct:snd_devname
SND_CONTROL_DLSYM_VERSION	alsa/control.h	43;"	d
SND_CTL_ASYNC	alsa/control.h	181;"	d
SND_CTL_ELEM_IFACE_CARD	alsa/control.h	/^	SND_CTL_ELEM_IFACE_CARD = 0,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_HWDEP	alsa/control.h	/^	SND_CTL_ELEM_IFACE_HWDEP,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_LAST	alsa/control.h	/^	SND_CTL_ELEM_IFACE_LAST = SND_CTL_ELEM_IFACE_SEQUENCER$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_MIXER	alsa/control.h	/^	SND_CTL_ELEM_IFACE_MIXER,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_PCM	alsa/control.h	/^	SND_CTL_ELEM_IFACE_PCM,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_RAWMIDI	alsa/control.h	/^	SND_CTL_ELEM_IFACE_RAWMIDI,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_SEQUENCER	alsa/control.h	/^	SND_CTL_ELEM_IFACE_SEQUENCER,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_TIMER	alsa/control.h	/^	SND_CTL_ELEM_IFACE_TIMER,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_TYPE_BOOLEAN	alsa/control.h	/^	SND_CTL_ELEM_TYPE_BOOLEAN,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_BYTES	alsa/control.h	/^	SND_CTL_ELEM_TYPE_BYTES,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_ENUMERATED	alsa/control.h	/^	SND_CTL_ELEM_TYPE_ENUMERATED,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_IEC958	alsa/control.h	/^	SND_CTL_ELEM_TYPE_IEC958,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_INTEGER	alsa/control.h	/^	SND_CTL_ELEM_TYPE_INTEGER,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_INTEGER64	alsa/control.h	/^	SND_CTL_ELEM_TYPE_INTEGER64,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_LAST	alsa/control.h	/^	SND_CTL_ELEM_TYPE_LAST = SND_CTL_ELEM_TYPE_INTEGER64$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_NONE	alsa/control.h	/^	SND_CTL_ELEM_TYPE_NONE = 0,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_EVENT_ELEM	alsa/control.h	/^	SND_CTL_EVENT_ELEM = 0,$/;"	e	enum:_snd_ctl_event_type
SND_CTL_EVENT_LAST	alsa/control.h	/^	SND_CTL_EVENT_LAST = SND_CTL_EVENT_ELEM$/;"	e	enum:_snd_ctl_event_type
SND_CTL_EVENT_MASK_ADD	alsa/control.h	124;"	d
SND_CTL_EVENT_MASK_INFO	alsa/control.h	122;"	d
SND_CTL_EVENT_MASK_REMOVE	alsa/control.h	118;"	d
SND_CTL_EVENT_MASK_VALUE	alsa/control.h	120;"	d
SND_CTL_NAME_CAPTURE	alsa/control.h	131;"	d
SND_CTL_NAME_IEC958	alsa/control.h	150;"	d
SND_CTL_NAME_IEC958_CON_MASK	alsa/control.h	144;"	d
SND_CTL_NAME_IEC958_DEFAULT	alsa/control.h	140;"	d
SND_CTL_NAME_IEC958_MASK	alsa/control.h	142;"	d
SND_CTL_NAME_IEC958_NONE	alsa/control.h	134;"	d
SND_CTL_NAME_IEC958_PCM_STREAM	alsa/control.h	148;"	d
SND_CTL_NAME_IEC958_PRO_MASK	alsa/control.h	146;"	d
SND_CTL_NAME_IEC958_SWITCH	alsa/control.h	136;"	d
SND_CTL_NAME_IEC958_VOLUME	alsa/control.h	138;"	d
SND_CTL_NAME_NONE	alsa/control.h	127;"	d
SND_CTL_NAME_PLAYBACK	alsa/control.h	129;"	d
SND_CTL_NONBLOCK	alsa/control.h	178;"	d
SND_CTL_POWER_D0	alsa/control.h	155;"	d
SND_CTL_POWER_D1	alsa/control.h	157;"	d
SND_CTL_POWER_D2	alsa/control.h	159;"	d
SND_CTL_POWER_D3	alsa/control.h	161;"	d
SND_CTL_POWER_D3cold	alsa/control.h	165;"	d
SND_CTL_POWER_D3hot	alsa/control.h	163;"	d
SND_CTL_POWER_MASK	alsa/control.h	153;"	d
SND_CTL_READONLY	alsa/control.h	184;"	d
SND_CTL_TYPE_HW	alsa/control.h	/^	SND_CTL_TYPE_HW,$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_INET	alsa/control.h	/^	SND_CTL_TYPE_INET$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_SHM	alsa/control.h	/^	SND_CTL_TYPE_SHM,$/;"	e	enum:_snd_ctl_type
SND_SCTL_NOFREE	alsa/control.h	190;"	d
__ALSA_CONTROL_H	alsa/control.h	29;"	d
_snd_ctl_elem_iface	alsa/control.h	/^typedef enum _snd_ctl_elem_iface {$/;"	g
_snd_ctl_elem_type	alsa/control.h	/^typedef enum _snd_ctl_elem_type {$/;"	g
_snd_ctl_event_type	alsa/control.h	/^typedef enum _snd_ctl_event_type {$/;"	g
_snd_ctl_type	alsa/control.h	/^typedef enum _snd_ctl_type {$/;"	g
dig_subframe	alsa/control.h	/^	unsigned char dig_subframe[4];	\/**< AES\/IEC958 subframe bits *\/$/;"	m	struct:snd_aes_iec958
pad	alsa/control.h	/^	unsigned char pad;		\/**< nothing *\/$/;"	m	struct:snd_aes_iec958
snd_aes_iec958	alsa/control.h	/^typedef struct snd_aes_iec958 {$/;"	s
snd_aes_iec958_t	alsa/control.h	/^} snd_aes_iec958_t;$/;"	t	typeref:struct:snd_aes_iec958
snd_ctl_card_info_alloca	alsa/control.h	279;"	d
snd_ctl_card_info_t	alsa/control.h	/^typedef struct _snd_ctl_card_info snd_ctl_card_info_t;$/;"	t	typeref:struct:_snd_ctl_card_info
snd_ctl_elem_id_alloca	alsa/control.h	256;"	d
snd_ctl_elem_id_t	alsa/control.h	/^typedef struct _snd_ctl_elem_id snd_ctl_elem_id_t;$/;"	t	typeref:struct:_snd_ctl_elem_id
snd_ctl_elem_iface_t	alsa/control.h	/^} snd_ctl_elem_iface_t;$/;"	t	typeref:enum:_snd_ctl_elem_iface
snd_ctl_elem_info_alloca	alsa/control.h	330;"	d
snd_ctl_elem_info_t	alsa/control.h	/^typedef struct _snd_ctl_elem_info snd_ctl_elem_info_t;$/;"	t	typeref:struct:_snd_ctl_elem_info
snd_ctl_elem_list_alloca	alsa/control.h	309;"	d
snd_ctl_elem_list_t	alsa/control.h	/^typedef struct _snd_ctl_elem_list snd_ctl_elem_list_t;$/;"	t	typeref:struct:_snd_ctl_elem_list
snd_ctl_elem_type_t	alsa/control.h	/^} snd_ctl_elem_type_t;$/;"	t	typeref:enum:_snd_ctl_elem_type
snd_ctl_elem_value_alloca	alsa/control.h	382;"	d
snd_ctl_elem_value_t	alsa/control.h	/^typedef struct _snd_ctl_elem_value snd_ctl_elem_value_t;$/;"	t	typeref:struct:_snd_ctl_elem_value
snd_ctl_event_alloca	alsa/control.h	297;"	d
snd_ctl_event_t	alsa/control.h	/^typedef struct _snd_ctl_event snd_ctl_event_t;$/;"	t	typeref:struct:_snd_ctl_event
snd_ctl_event_type_t	alsa/control.h	/^}snd_ctl_event_type_t;$/;"	t	typeref:enum:_snd_ctl_event_type
snd_ctl_t	alsa/control.h	/^typedef struct _snd_ctl snd_ctl_t;$/;"	t	typeref:struct:_snd_ctl
snd_ctl_type_t	alsa/control.h	/^} snd_ctl_type_t;$/;"	t	typeref:enum:_snd_ctl_type
snd_hctl_callback_t	alsa/control.h	/^typedef int (*snd_hctl_callback_t)(snd_hctl_t *hctl,$/;"	t
snd_hctl_compare_t	alsa/control.h	/^typedef int (*snd_hctl_compare_t)(const snd_hctl_elem_t *e1,$/;"	t
snd_hctl_elem_callback_t	alsa/control.h	/^typedef int (*snd_hctl_elem_callback_t)(snd_hctl_elem_t *elem,$/;"	t
snd_hctl_elem_t	alsa/control.h	/^typedef struct _snd_hctl_elem snd_hctl_elem_t;$/;"	t	typeref:struct:_snd_hctl_elem
snd_hctl_t	alsa/control.h	/^typedef struct _snd_hctl snd_hctl_t;$/;"	t	typeref:struct:_snd_hctl
snd_sctl_t	alsa/control.h	/^typedef struct _snd_sctl snd_sctl_t;$/;"	t	typeref:struct:_snd_sctl
status	alsa/control.h	/^	unsigned char status[24];	\/**< AES\/IEC958 channel status bits *\/$/;"	m	struct:snd_aes_iec958
subcode	alsa/control.h	/^	unsigned char subcode[147];	\/**< AES\/IEC958 subcode bits *\/$/;"	m	struct:snd_aes_iec958
__ALSA_CONV_H	alsa/conv.h	29;"	d
snd_BE_to_host_16	alsa/conv.h	48;"	d
snd_BE_to_host_32	alsa/conv.h	52;"	d
snd_LE_to_host_16	alsa/conv.h	40;"	d
snd_LE_to_host_32	alsa/conv.h	44;"	d
snd_host_to_BE_16	alsa/conv.h	46;"	d
snd_host_to_BE_32	alsa/conv.h	50;"	d
snd_host_to_LE_16	alsa/conv.h	38;"	d
snd_host_to_LE_32	alsa/conv.h	42;"	d
SNDERR	alsa/error.h	64;"	d
SNDERR	alsa/error.h	67;"	d
SND_ERROR_ALISP_NIL	alsa/error.h	43;"	d
SND_ERROR_BEGIN	alsa/error.h	41;"	d
SND_ERROR_INCOMPATIBLE_VERSION	alsa/error.h	42;"	d
SYSERR	alsa/error.h	65;"	d
SYSERR	alsa/error.h	68;"	d
__ALSA_ERROR_H	alsa/error.h	29;"	d
snd_lib_error_handler_t	alsa/error.h	/^typedef void (*snd_lib_error_handler_t)(const char *file, int line, const char *function, int err, const char *fmt, ...) \/* __attribute__ ((format (printf, 5, 6))) *\/;$/;"	t
ATTRIBUTE_UNUSED	alsa/global.h	51;"	d
SND_DLSYM_BUILD_VERSION	alsa/global.h	62;"	d
SND_DLSYM_BUILD_VERSION	alsa/global.h	80;"	d
SND_DLSYM_VERSION	alsa/global.h	98;"	d
__ALSA_GLOBAL_H_	alsa/global.h	29;"	d
__SND_DLSYM_VERSION	alsa/global.h	57;"	d
__SND_DLSYM_VERSION	alsa/global.h	75;"	d
__STRING	alsa/global.h	94;"	d
dlsym_name	alsa/global.h	/^	const char *dlsym_name;$/;"	m	struct:snd_dlsym_link
dlsym_ptr	alsa/global.h	/^	const void *dlsym_ptr;$/;"	m	struct:snd_dlsym_link
next	alsa/global.h	/^	struct snd_dlsym_link *next;$/;"	m	struct:snd_dlsym_link	typeref:struct:snd_dlsym_link::snd_dlsym_link
snd_async_callback_t	alsa/global.h	/^typedef void (*snd_async_callback_t)(snd_async_handler_t *handler);$/;"	t
snd_async_handler_t	alsa/global.h	/^typedef struct _snd_async_handler snd_async_handler_t;$/;"	t	typeref:struct:_snd_async_handler
snd_dlsym_link	alsa/global.h	/^struct snd_dlsym_link {$/;"	s
snd_htimestamp_t	alsa/global.h	/^typedef struct timespec snd_htimestamp_t;$/;"	t	typeref:struct:timespec
snd_timestamp_t	alsa/global.h	/^typedef struct timeval snd_timestamp_t;$/;"	t	typeref:struct:timeval
SND_HWDEP_DLSYM_VERSION	alsa/hwdep.h	42;"	d
SND_HWDEP_IFACE_BLUETOOTH	alsa/hwdep.h	/^	SND_HWDEP_IFACE_BLUETOOTH,	\/**< Bluetooth audio *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_EMU10K1	alsa/hwdep.h	/^	SND_HWDEP_IFACE_EMU10K1,	\/**< EMU10K1 driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_EMUX_WAVETABLE	alsa/hwdep.h	/^	SND_HWDEP_IFACE_EMUX_WAVETABLE,	\/**< EmuX wavetable *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_ICS2115	alsa/hwdep.h	/^	SND_HWDEP_IFACE_ICS2115,	\/**< ICS2115 driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_LAST	alsa/hwdep.h	/^	SND_HWDEP_IFACE_LAST = SND_HWDEP_IFACE_SB_RC  \/**< last known hwdep interface *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_MIXART	alsa/hwdep.h	/^	SND_HWDEP_IFACE_MIXART,		\/**< Digigram miXart cards *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL2	alsa/hwdep.h	/^	SND_HWDEP_IFACE_OPL2 = 0,	\/**< OPL2 raw driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL3	alsa/hwdep.h	/^	SND_HWDEP_IFACE_OPL3,		\/**< OPL3 raw driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL4	alsa/hwdep.h	/^	SND_HWDEP_IFACE_OPL4,		\/**< OPL4 raw driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_PCXHR	alsa/hwdep.h	/^	SND_HWDEP_IFACE_PCXHR,		\/**< Digigram PCXHR *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SB16CSP	alsa/hwdep.h	/^	SND_HWDEP_IFACE_SB16CSP,	\/**< SB16CSP driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SB_RC	alsa/hwdep.h	/^	SND_HWDEP_IFACE_SB_RC,		\/**< SB Extigy\/Audigy2NX remote control *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SSCAPE	alsa/hwdep.h	/^	SND_HWDEP_IFACE_SSCAPE,		\/**< Ensoniq SoundScape ISA card (MC68EC000) *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_USX2Y	alsa/hwdep.h	/^	SND_HWDEP_IFACE_USX2Y,		\/**< Tascam US122, US224 & US428 usb *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_USX2Y_PCM	alsa/hwdep.h	/^	SND_HWDEP_IFACE_USX2Y_PCM,	\/**< Tascam US122, US224 & US428 raw USB PCM *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_VX	alsa/hwdep.h	/^	SND_HWDEP_IFACE_VX,		\/**< Digigram VX cards *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_YSS225	alsa/hwdep.h	/^	SND_HWDEP_IFACE_YSS225,		\/**< YSS225 driver *\/$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_OPEN_DUPLEX	alsa/hwdep.h	80;"	d
SND_HWDEP_OPEN_NONBLOCK	alsa/hwdep.h	82;"	d
SND_HWDEP_OPEN_READ	alsa/hwdep.h	76;"	d
SND_HWDEP_OPEN_WRITE	alsa/hwdep.h	78;"	d
SND_HWDEP_TYPE_HW	alsa/hwdep.h	/^	SND_HWDEP_TYPE_HW,$/;"	e	enum:_snd_hwdep_type
SND_HWDEP_TYPE_INET	alsa/hwdep.h	/^	SND_HWDEP_TYPE_INET$/;"	e	enum:_snd_hwdep_type
SND_HWDEP_TYPE_SHM	alsa/hwdep.h	/^	SND_HWDEP_TYPE_SHM,$/;"	e	enum:_snd_hwdep_type
__ALSA_HWDEP_H	alsa/hwdep.h	29;"	d
_snd_hwdep_iface	alsa/hwdep.h	/^typedef enum _snd_hwdep_iface {$/;"	g
_snd_hwdep_type	alsa/hwdep.h	/^typedef enum _snd_hwdep_type {$/;"	g
snd_hwdep_dsp_image_alloca	alsa/hwdep.h	138;"	d
snd_hwdep_dsp_image_t	alsa/hwdep.h	/^typedef struct _snd_hwdep_dsp_image snd_hwdep_dsp_image_t;$/;"	t	typeref:struct:_snd_hwdep_dsp_image
snd_hwdep_dsp_status_alloca	alsa/hwdep.h	125;"	d
snd_hwdep_dsp_status_t	alsa/hwdep.h	/^typedef struct _snd_hwdep_dsp_status snd_hwdep_dsp_status_t;$/;"	t	typeref:struct:_snd_hwdep_dsp_status
snd_hwdep_iface_t	alsa/hwdep.h	/^} snd_hwdep_iface_t;$/;"	t	typeref:enum:_snd_hwdep_iface
snd_hwdep_info_alloca	alsa/hwdep.h	111;"	d
snd_hwdep_info_t	alsa/hwdep.h	/^typedef struct _snd_hwdep_info snd_hwdep_info_t;$/;"	t	typeref:struct:_snd_hwdep_info
snd_hwdep_t	alsa/hwdep.h	/^typedef struct _snd_hwdep snd_hwdep_t;$/;"	t	typeref:struct:_snd_hwdep
snd_hwdep_type_t	alsa/hwdep.h	/^} snd_hwdep_type_t;$/;"	t	typeref:enum:_snd_hwdep_type
ATOMIC_INIT	alsa/iatomic.h	1021;"	d
ATOMIC_INIT	alsa/iatomic.h	20;"	d
ATOMIC_INIT	alsa/iatomic.h	233;"	d
ATOMIC_INIT	alsa/iatomic.h	395;"	d
ATOMIC_INIT	alsa/iatomic.h	501;"	d
ATOMIC_INIT	alsa/iatomic.h	689;"	d
ATOMIC_INIT	alsa/iatomic.h	929;"	d
ATOMIC_SMP_LOCK	alsa/iatomic.h	11;"	d
ATOMIC_SMP_LOCK	alsa/iatomic.h	219;"	d
IA64_FETCHADD	alsa/iatomic.h	279;"	d
IATOMIC_DEFINED	alsa/iatomic.h	1009;"	d
IATOMIC_DEFINED	alsa/iatomic.h	1034;"	d
IATOMIC_DEFINED	alsa/iatomic.h	221;"	d
IATOMIC_DEFINED	alsa/iatomic.h	373;"	d
IATOMIC_DEFINED	alsa/iatomic.h	493;"	d
IATOMIC_DEFINED	alsa/iatomic.h	681;"	d
IATOMIC_DEFINED	alsa/iatomic.h	889;"	d
MAX_SPIN_COUNT	alsa/iatomic.h	1047;"	d
SMP_ISYNC	alsa/iatomic.h	509;"	d
SPIN_SLEEP_DURATION	alsa/iatomic.h	1057;"	d
__ALSA_IATOMIC_H	alsa/iatomic.h	2;"	d
__restore_flags	alsa/iatomic.h	925;"	d
__save_flags_cli	alsa/iatomic.h	924;"	d
atomic_add	alsa/iatomic.h	/^extern __inline__ void atomic_add(int i, atomic_t * v)$/;"	f
atomic_add	alsa/iatomic.h	/^static __inline__ void atomic_add(int a, atomic_t *v)$/;"	f
atomic_add	alsa/iatomic.h	/^static __inline__ void atomic_add(int i, atomic_t * v)$/;"	f
atomic_add	alsa/iatomic.h	/^static __inline__ void atomic_add(int i, atomic_t *v)$/;"	f
atomic_add	alsa/iatomic.h	/^static __inline__ void atomic_add(int i, volatile atomic_t *v)$/;"	f
atomic_add	alsa/iatomic.h	1025;"	d
atomic_add	alsa/iatomic.h	342;"	d
atomic_add_negative	alsa/iatomic.h	/^atomic_add_negative (int i, atomic_t *v)$/;"	f
atomic_add_negative	alsa/iatomic.h	/^static __inline__ int atomic_add_negative(int i, atomic_t *v)$/;"	f
atomic_add_negative	alsa/iatomic.h	/^static inline int atomic_add_negative(int i, volatile atomic_t *v)$/;"	f
atomic_add_return	alsa/iatomic.h	/^extern __inline__ int atomic_add_return(int i, atomic_t * v)$/;"	f
atomic_add_return	alsa/iatomic.h	/^static __inline__ int atomic_add_return(int a, atomic_t *v)$/;"	f
atomic_add_return	alsa/iatomic.h	/^static __inline__ long atomic_add_return(int i, atomic_t * v)$/;"	f
atomic_add_return	alsa/iatomic.h	321;"	d
atomic_clear_mask	alsa/iatomic.h	/^static __inline__ void atomic_clear_mask(unsigned long mask, unsigned long *addr)$/;"	f
atomic_clear_mask	alsa/iatomic.h	186;"	d
atomic_dec	alsa/iatomic.h	/^static __inline__ void atomic_dec(atomic_t *v)$/;"	f
atomic_dec	alsa/iatomic.h	/^static __inline__ void atomic_dec(volatile atomic_t *v)$/;"	f
atomic_dec	alsa/iatomic.h	1028;"	d
atomic_dec	alsa/iatomic.h	345;"	d
atomic_dec	alsa/iatomic.h	482;"	d
atomic_dec	alsa/iatomic.h	861;"	d
atomic_dec_and_test	alsa/iatomic.h	/^static __inline__ int atomic_dec_and_test(atomic_t *v)$/;"	f
atomic_dec_and_test	alsa/iatomic.h	/^static __inline__ int atomic_dec_and_test(volatile atomic_t *v)$/;"	f
atomic_dec_and_test	alsa/iatomic.h	339;"	d
atomic_dec_and_test	alsa/iatomic.h	479;"	d
atomic_dec_and_test	alsa/iatomic.h	636;"	d
atomic_dec_and_test	alsa/iatomic.h	843;"	d
atomic_dec_if_positive	alsa/iatomic.h	/^static __inline__ int atomic_dec_if_positive(atomic_t *v)$/;"	f
atomic_dec_return	alsa/iatomic.h	/^static __inline__ int atomic_dec_return(atomic_t *v)$/;"	f
atomic_dec_return	alsa/iatomic.h	335;"	d
atomic_dec_return	alsa/iatomic.h	475;"	d
atomic_dec_return	alsa/iatomic.h	808;"	d
atomic_inc	alsa/iatomic.h	/^static __inline__ void atomic_inc(atomic_t *v)$/;"	f
atomic_inc	alsa/iatomic.h	/^static __inline__ void atomic_inc(volatile atomic_t *v)$/;"	f
atomic_inc	alsa/iatomic.h	1027;"	d
atomic_inc	alsa/iatomic.h	344;"	d
atomic_inc	alsa/iatomic.h	481;"	d
atomic_inc	alsa/iatomic.h	852;"	d
atomic_inc_and_test	alsa/iatomic.h	/^static __inline__ int atomic_inc_and_test(atomic_t *v)$/;"	f
atomic_inc_and_test	alsa/iatomic.h	340;"	d
atomic_inc_and_test	alsa/iatomic.h	832;"	d
atomic_inc_return	alsa/iatomic.h	/^static __inline__ int atomic_inc_return(atomic_t *v)$/;"	f
atomic_inc_return	alsa/iatomic.h	336;"	d
atomic_inc_return	alsa/iatomic.h	476;"	d
atomic_inc_return	alsa/iatomic.h	809;"	d
atomic_read	alsa/iatomic.h	1023;"	d
atomic_read	alsa/iatomic.h	235;"	d
atomic_read	alsa/iatomic.h	29;"	d
atomic_read	alsa/iatomic.h	397;"	d
atomic_read	alsa/iatomic.h	503;"	d
atomic_read	alsa/iatomic.h	698;"	d
atomic_read	alsa/iatomic.h	931;"	d
atomic_set	alsa/iatomic.h	1024;"	d
atomic_set	alsa/iatomic.h	236;"	d
atomic_set	alsa/iatomic.h	398;"	d
atomic_set	alsa/iatomic.h	39;"	d
atomic_set	alsa/iatomic.h	504;"	d
atomic_set	alsa/iatomic.h	708;"	d
atomic_set	alsa/iatomic.h	932;"	d
atomic_set_mask	alsa/iatomic.h	190;"	d
atomic_sub	alsa/iatomic.h	/^extern __inline__ void atomic_sub(int i, atomic_t * v)$/;"	f
atomic_sub	alsa/iatomic.h	/^static __inline__ void atomic_sub(int a, atomic_t *v)$/;"	f
atomic_sub	alsa/iatomic.h	/^static __inline__ void atomic_sub(int i, atomic_t * v)$/;"	f
atomic_sub	alsa/iatomic.h	/^static __inline__ void atomic_sub(int i, atomic_t *v)$/;"	f
atomic_sub	alsa/iatomic.h	/^static __inline__ void atomic_sub(int i, volatile atomic_t *v)$/;"	f
atomic_sub	alsa/iatomic.h	1026;"	d
atomic_sub	alsa/iatomic.h	343;"	d
atomic_sub_and_test	alsa/iatomic.h	/^static __inline__ int atomic_sub_and_test(int i, atomic_t *v)$/;"	f
atomic_sub_and_test	alsa/iatomic.h	338;"	d
atomic_sub_and_test	alsa/iatomic.h	478;"	d
atomic_sub_and_test	alsa/iatomic.h	635;"	d
atomic_sub_and_test	alsa/iatomic.h	821;"	d
atomic_sub_return	alsa/iatomic.h	/^extern __inline__ int atomic_sub_return(int i, atomic_t * v)$/;"	f
atomic_sub_return	alsa/iatomic.h	/^static __inline__ int atomic_sub_return(int a, atomic_t *v)$/;"	f
atomic_sub_return	alsa/iatomic.h	/^static __inline__ long atomic_sub_return(int i, atomic_t * v)$/;"	f
atomic_sub_return	alsa/iatomic.h	328;"	d
atomic_t	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon84
atomic_t	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon85
atomic_t	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon86
atomic_t	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon87
atomic_t	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon88
atomic_t	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon89
atomic_t	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	t	typeref:struct:__anon90
begin	alsa/iatomic.h	/^	unsigned int begin, end;$/;"	m	struct:__anon91
counter	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon84
counter	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon85
counter	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon86
counter	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon87
counter	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon88
counter	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon89
counter	alsa/iatomic.h	/^typedef struct { volatile int counter; } atomic_t;$/;"	m	struct:__anon90
end	alsa/iatomic.h	/^	unsigned int begin, end;$/;"	m	struct:__anon91
end	alsa/iatomic.h	/^	unsigned int end;$/;"	m	struct:__anon92
ia64_atomic_add	alsa/iatomic.h	/^ia64_atomic_add (int i, atomic_t *v)$/;"	f
ia64_atomic_sub	alsa/iatomic.h	/^ia64_atomic_sub (int i, atomic_t *v)$/;"	f
ia64_cmpxchg	alsa/iatomic.h	239;"	d
ia64_fetch_and_add	alsa/iatomic.h	294;"	d
local_irq_restore	alsa/iatomic.h	917;"	d
local_irq_save	alsa/iatomic.h	902;"	d
mb	alsa/iatomic.h	1005;"	d
mb	alsa/iatomic.h	1030;"	d
mb	alsa/iatomic.h	210;"	d
mb	alsa/iatomic.h	214;"	d
mb	alsa/iatomic.h	369;"	d
mb	alsa/iatomic.h	484;"	d
mb	alsa/iatomic.h	677;"	d
mb	alsa/iatomic.h	876;"	d
rmb	alsa/iatomic.h	1006;"	d
rmb	alsa/iatomic.h	1031;"	d
rmb	alsa/iatomic.h	211;"	d
rmb	alsa/iatomic.h	215;"	d
rmb	alsa/iatomic.h	370;"	d
rmb	alsa/iatomic.h	487;"	d
rmb	alsa/iatomic.h	678;"	d
rmb	alsa/iatomic.h	886;"	d
snd_atomic_read_begin	alsa/iatomic.h	/^static inline void snd_atomic_read_begin(snd_atomic_read_t *r)$/;"	f
snd_atomic_read_init	alsa/iatomic.h	/^static inline void snd_atomic_read_init(snd_atomic_read_t *r, snd_atomic_write_t *w)$/;"	f
snd_atomic_read_ok	alsa/iatomic.h	/^static inline int snd_atomic_read_ok(snd_atomic_read_t *r)$/;"	f
snd_atomic_read_t	alsa/iatomic.h	/^} snd_atomic_read_t;$/;"	t	typeref:struct:__anon92
snd_atomic_write_begin	alsa/iatomic.h	/^static inline void snd_atomic_write_begin(snd_atomic_write_t *w)$/;"	f
snd_atomic_write_end	alsa/iatomic.h	/^static inline void snd_atomic_write_end(snd_atomic_write_t *w)$/;"	f
snd_atomic_write_init	alsa/iatomic.h	/^static inline void snd_atomic_write_init(snd_atomic_write_t *w)$/;"	f
snd_atomic_write_t	alsa/iatomic.h	/^} snd_atomic_write_t;$/;"	t	typeref:struct:__anon91
wmb	alsa/iatomic.h	1007;"	d
wmb	alsa/iatomic.h	1032;"	d
wmb	alsa/iatomic.h	212;"	d
wmb	alsa/iatomic.h	216;"	d
wmb	alsa/iatomic.h	371;"	d
wmb	alsa/iatomic.h	490;"	d
wmb	alsa/iatomic.h	679;"	d
wmb	alsa/iatomic.h	887;"	d
write	alsa/iatomic.h	/^	volatile const snd_atomic_write_t *write;$/;"	m	struct:__anon92
SND_INPUT_BUFFER	alsa/input.h	/^	SND_INPUT_BUFFER$/;"	e	enum:_snd_input_type
SND_INPUT_STDIO	alsa/input.h	/^	SND_INPUT_STDIO,$/;"	e	enum:_snd_input_type
__ALSA_INPUT_H	alsa/input.h	29;"	d
_snd_input_type	alsa/input.h	/^typedef enum _snd_input_type {$/;"	g
snd_input_t	alsa/input.h	/^typedef struct _snd_input snd_input_t;$/;"	t	typeref:struct:_snd_input
snd_input_type_t	alsa/input.h	/^} snd_input_type_t;$/;"	t	typeref:enum:_snd_input_type
SND_SEQ_INSTR_ATYPE_ALIAS	alsa/instr.h	85;"	d
SND_SEQ_INSTR_ATYPE_DATA	alsa/instr.h	84;"	d
SND_SEQ_INSTR_FREE_CMD_ALL	alsa/instr.h	122;"	d
SND_SEQ_INSTR_FREE_CMD_CLUSTER	alsa/instr.h	124;"	d
SND_SEQ_INSTR_FREE_CMD_PRIVATE	alsa/instr.h	123;"	d
SND_SEQ_INSTR_FREE_CMD_SINGLE	alsa/instr.h	125;"	d
SND_SEQ_INSTR_GET_CMD_FULL	alsa/instr.h	115;"	d
SND_SEQ_INSTR_GET_CMD_PARTIAL	alsa/instr.h	116;"	d
SND_SEQ_INSTR_ID_DLS1	alsa/instr.h	88;"	d
SND_SEQ_INSTR_ID_DLS2	alsa/instr.h	89;"	d
SND_SEQ_INSTR_ID_GUS_PATCH	alsa/instr.h	92;"	d
SND_SEQ_INSTR_ID_INTERWAVE	alsa/instr.h	93;"	d
SND_SEQ_INSTR_ID_OPL2_3	alsa/instr.h	94;"	d
SND_SEQ_INSTR_ID_OPL4	alsa/instr.h	95;"	d
SND_SEQ_INSTR_ID_SIMPLE	alsa/instr.h	90;"	d
SND_SEQ_INSTR_ID_SOUNDFONT	alsa/instr.h	91;"	d
SND_SEQ_INSTR_PUT_CMD_ADD	alsa/instr.h	111;"	d
SND_SEQ_INSTR_PUT_CMD_CREATE	alsa/instr.h	108;"	d
SND_SEQ_INSTR_PUT_CMD_MODIFY	alsa/instr.h	110;"	d
SND_SEQ_INSTR_PUT_CMD_REMOVE	alsa/instr.h	112;"	d
SND_SEQ_INSTR_PUT_CMD_REPLACE	alsa/instr.h	109;"	d
SND_SEQ_INSTR_QUERY_FOLLOW_ALIAS	alsa/instr.h	119;"	d
SND_SEQ_INSTR_TYPE0_DLS1	alsa/instr.h	98;"	d
SND_SEQ_INSTR_TYPE0_DLS2	alsa/instr.h	99;"	d
SND_SEQ_INSTR_TYPE1_GUS_PATCH	alsa/instr.h	102;"	d
SND_SEQ_INSTR_TYPE1_INTERWAVE	alsa/instr.h	103;"	d
SND_SEQ_INSTR_TYPE1_SIMPLE	alsa/instr.h	100;"	d
SND_SEQ_INSTR_TYPE1_SOUNDFONT	alsa/instr.h	101;"	d
SND_SEQ_INSTR_TYPE2_OPL2_3	alsa/instr.h	104;"	d
SND_SEQ_INSTR_TYPE2_OPL4	alsa/instr.h	105;"	d
__ALSA_INSTR_H	alsa/instr.h	29;"	d
snd_instr_fm_t	alsa/instr.h	/^typedef void snd_instr_fm_t;$/;"	t
snd_instr_header_alloca	alsa/instr.h	47;"	d
snd_instr_header_t	alsa/instr.h	/^typedef struct _snd_instr_header snd_instr_header_t;$/;"	t	typeref:struct:_snd_instr_header
snd_instr_iwffff_t	alsa/instr.h	/^typedef void snd_instr_iwffff_t;$/;"	t
snd_instr_simple_t	alsa/instr.h	/^typedef void snd_instr_simple_t;$/;"	t
snd_iwffff_handle_t	alsa/instr.h	/^typedef struct _snd_iwffff_handle snd_iwffff_handle_t;$/;"	t	typeref:struct:_snd_iwffff_handle
SND_MIXER_ELEM_LAST	alsa/mixer.h	/^	SND_MIXER_ELEM_LAST = SND_MIXER_ELEM_SIMPLE$/;"	e	enum:_snd_mixer_elem_type
SND_MIXER_ELEM_SIMPLE	alsa/mixer.h	/^	SND_MIXER_ELEM_SIMPLE,$/;"	e	enum:_snd_mixer_elem_type
SND_MIXER_SABSTRACT_BASIC	alsa/mixer.h	/^	SND_MIXER_SABSTRACT_BASIC,$/;"	e	enum:snd_mixer_selem_regopt_abstract
SND_MIXER_SABSTRACT_NONE	alsa/mixer.h	/^	SND_MIXER_SABSTRACT_NONE = 0,$/;"	e	enum:snd_mixer_selem_regopt_abstract
SND_MIXER_SCHN_FRONT_CENTER	alsa/mixer.h	/^	SND_MIXER_SCHN_FRONT_CENTER,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_FRONT_LEFT	alsa/mixer.h	/^	SND_MIXER_SCHN_FRONT_LEFT = 0,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_FRONT_RIGHT	alsa/mixer.h	/^	SND_MIXER_SCHN_FRONT_RIGHT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_LAST	alsa/mixer.h	/^	SND_MIXER_SCHN_LAST = 31,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_MONO	alsa/mixer.h	/^	SND_MIXER_SCHN_MONO = SND_MIXER_SCHN_FRONT_LEFT$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_LEFT	alsa/mixer.h	/^	SND_MIXER_SCHN_REAR_LEFT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_RIGHT	alsa/mixer.h	/^	SND_MIXER_SCHN_REAR_RIGHT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_UNKNOWN	alsa/mixer.h	/^	SND_MIXER_SCHN_UNKNOWN = -1,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_WOOFER	alsa/mixer.h	/^	SND_MIXER_SCHN_WOOFER,$/;"	e	enum:_snd_mixer_selem_channel_id
__ALSA_MIXER_H	alsa/mixer.h	29;"	d
_snd_mixer_elem_type	alsa/mixer.h	/^typedef enum _snd_mixer_elem_type {$/;"	g
_snd_mixer_selem_channel_id	alsa/mixer.h	/^typedef enum _snd_mixer_selem_channel_id {$/;"	g
abstract	alsa/mixer.h	/^	enum snd_mixer_selem_regopt_abstract abstract;$/;"	m	struct:snd_mixer_selem_regopt	typeref:enum:snd_mixer_selem_regopt::snd_mixer_selem_regopt_abstract
capture_pcm	alsa/mixer.h	/^	snd_pcm_t *capture_pcm;$/;"	m	struct:snd_mixer_selem_regopt
playback_pcm	alsa/mixer.h	/^	snd_pcm_t *playback_pcm;$/;"	m	struct:snd_mixer_selem_regopt
snd_mixer_callback_t	alsa/mixer.h	/^typedef int (*snd_mixer_callback_t)(snd_mixer_t *ctl,$/;"	t
snd_mixer_class_t	alsa/mixer.h	/^typedef struct _snd_mixer_class snd_mixer_class_t;$/;"	t	typeref:struct:_snd_mixer_class
snd_mixer_compare_t	alsa/mixer.h	/^typedef int (*snd_mixer_compare_t)(const snd_mixer_elem_t *e1,$/;"	t
snd_mixer_elem_callback_t	alsa/mixer.h	/^typedef int (*snd_mixer_elem_callback_t)(snd_mixer_elem_t *elem,$/;"	t
snd_mixer_elem_t	alsa/mixer.h	/^typedef struct _snd_mixer_elem snd_mixer_elem_t;$/;"	t	typeref:struct:_snd_mixer_elem
snd_mixer_elem_type_t	alsa/mixer.h	/^} snd_mixer_elem_type_t;$/;"	t	typeref:enum:_snd_mixer_elem_type
snd_mixer_selem_channel_id_t	alsa/mixer.h	/^} snd_mixer_selem_channel_id_t;$/;"	t	typeref:enum:_snd_mixer_selem_channel_id
snd_mixer_selem_id_alloca	alsa/mixer.h	237;"	d
snd_mixer_selem_id_t	alsa/mixer.h	/^typedef struct _snd_mixer_selem_id snd_mixer_selem_id_t;$/;"	t	typeref:struct:_snd_mixer_selem_id
snd_mixer_selem_regopt	alsa/mixer.h	/^struct snd_mixer_selem_regopt {$/;"	s
snd_mixer_selem_regopt_abstract	alsa/mixer.h	/^enum snd_mixer_selem_regopt_abstract {$/;"	g
snd_mixer_t	alsa/mixer.h	/^typedef struct _snd_mixer snd_mixer_t;$/;"	t	typeref:struct:_snd_mixer
ver	alsa/mixer.h	/^	int ver;$/;"	m	struct:snd_mixer_selem_regopt
SNDO_MIO_AUX_FCLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_FCLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_FCRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_FCRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_FCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_FCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_FLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_FLVOL = 5 * 0x40,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_FRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_FRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_FSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_FSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_FSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_FSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_LFEVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_LFEVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_OVRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_OVRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_RCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_RCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_RLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_RLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_RRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_RRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_RSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_RSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_AUX_RSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_AUX_RSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_FCLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_FCLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_FCRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_FCRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_FCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_FCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_FLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_FLVOL = 4 * 0x40,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_FRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_FRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_FSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_FSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_FSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_FSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_LFEVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_LFEVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_OVRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_OVRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_RCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_RCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_RLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_RLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_RRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_RRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_RSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_RSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CD_RSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CD_RSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_FC	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_FC,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_FCL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_FCL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_FCR	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_FCR,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_FL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_FL = 0x8000,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_FR	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_FR,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_FSL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_FSL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_FSR	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_FSR,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_LFE	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_LFE,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_OVR	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_OVR,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_RC	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_RC,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_RL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_RL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_RR	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_RR,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_RSL	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_RSL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CGAIN_RSR	alsa/mixer_ordinary.h	/^	SNDO_MIO_CGAIN_RSR,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CSOURCE_AUX	alsa/mixer_ordinary.h	/^	SNDO_MIO_CSOURCE_AUX,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CSOURCE_CD	alsa/mixer_ordinary.h	/^	SNDO_MIO_CSOURCE_CD,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CSOURCE_LINE	alsa/mixer_ordinary.h	/^	SNDO_MIO_CSOURCE_LINE,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CSOURCE_MIC	alsa/mixer_ordinary.h	/^	SNDO_MIO_CSOURCE_MIC = 0x8100,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_CSOURCE_MIX	alsa/mixer_ordinary.h	/^	SNDO_MIO_CSOURCE_MIX,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_FCLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_FCLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_FCRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_FCRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_FCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_FCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_FLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_FLVOL = 2 * 0x40,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_FRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_FRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_FSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_FSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_FSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_FSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_LFEVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_LFEVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_OVRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_OVRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_RCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_RCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_RLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_RLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_RRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_RRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_RSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_RSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_LINE_RSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_LINE_RSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_FCLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_FCLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_FCRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_FCRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_FCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_FCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_FLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_FLVOL = 0 * 0x40,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_FRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_FRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_FSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_FSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_FSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_FSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_LFEVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_LFEVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_OVRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_OVRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_RCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_RCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_RLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_RLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_RRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_RRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_RSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_RSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MASTER_RSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MASTER_RSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_FCLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_FCLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_FCRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_FCRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_FCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_FCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_FLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_FLVOL = 3 * 0x40,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_FRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_FRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_FSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_FSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_FSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_FSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_LFEVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_LFEVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_OVRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_OVRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_RCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_RCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_RLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_RLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_RRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_RRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_RSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_RSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_MIC_RSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_MIC_RSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_FCLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_FCLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_FCRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_FCRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_FCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_FCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_FLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_FLVOL = 1 * 0x40,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_FRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_FRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_FSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_FSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_FSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_FSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_LFEVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_LFEVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_OVRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_OVRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_RCVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_RCVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_RLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_RLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_RRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_RRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_RSLVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_RSLVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_PCM_RSRVOL	alsa/mixer_ordinary.h	/^	SNDO_MIO_PCM_RSRVOL,$/;"	e	enum:sndo_mixer_io_type
SNDO_MIO_STEREO	alsa/mixer_ordinary.h	/^	SNDO_MIO_STEREO = 0x8200,	\/* (0 = off, 1 = on) standard stereo source, might be converted to use all outputs *\/$/;"	e	enum:sndo_mixer_io_type
__ALSA_MIXER_SIMPLE_H	alsa/mixer_ordinary.h	28;"	d
sndo_mixer_io_type	alsa/mixer_ordinary.h	/^enum sndo_mixer_io_type {$/;"	g
sndo_mixer_t	alsa/mixer_ordinary.h	/^typedef struct sndo_mixer sndo_mixer_t;$/;"	t	typeref:struct:sndo_mixer
SND_OUTPUT_BUFFER	alsa/output.h	/^	SND_OUTPUT_BUFFER$/;"	e	enum:_snd_output_type
SND_OUTPUT_STDIO	alsa/output.h	/^	SND_OUTPUT_STDIO,$/;"	e	enum:_snd_output_type
__ALSA_OUTPUT_H	alsa/output.h	29;"	d
_snd_output_type	alsa/output.h	/^typedef enum _snd_output_type {$/;"	g
snd_output_t	alsa/output.h	/^typedef struct _snd_output snd_output_t;$/;"	t	typeref:struct:_snd_output
snd_output_type_t	alsa/output.h	/^} snd_output_type_t;$/;"	t	typeref:enum:_snd_output_type
SND_PCM_ACCESS_LAST	alsa/pcm.h	/^	SND_PCM_ACCESS_LAST = SND_PCM_ACCESS_RW_NONINTERLEAVED$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_COMPLEX	alsa/pcm.h	/^	SND_PCM_ACCESS_MMAP_COMPLEX,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_INTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_MMAP_INTERLEAVED = 0,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_NONINTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_MMAP_NONINTERLEAVED,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_RW_INTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_RW_INTERLEAVED,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_RW_NONINTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_RW_NONINTERLEAVED,$/;"	e	enum:_snd_pcm_access
SND_PCM_ASYNC	alsa/pcm.h	297;"	d
SND_PCM_CLASS_DIGITIZER	alsa/pcm.h	/^	SND_PCM_CLASS_DIGITIZER,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_GENERIC	alsa/pcm.h	/^	SND_PCM_CLASS_GENERIC = 0,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_LAST	alsa/pcm.h	/^	SND_PCM_CLASS_LAST = SND_PCM_CLASS_DIGITIZER$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_MODEM	alsa/pcm.h	/^	SND_PCM_CLASS_MODEM,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_MULTI	alsa/pcm.h	/^	SND_PCM_CLASS_MULTI,$/;"	e	enum:_snd_pcm_class
SND_PCM_DLSYM_VERSION	alsa/pcm.h	43;"	d
SND_PCM_FORMAT_A_LAW	alsa/pcm.h	/^	SND_PCM_FORMAT_A_LAW,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT = SND_PCM_FORMAT_FLOAT_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT64 = SND_PCM_FORMAT_FLOAT64_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT64_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT64_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_GSM	alsa/pcm.h	/^	SND_PCM_FORMAT_GSM,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME	alsa/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME = SND_PCM_FORMAT_IEC958_SUBFRAME_LE$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IMA_ADPCM	alsa/pcm.h	/^	SND_PCM_FORMAT_IMA_ADPCM,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_LAST	alsa/pcm.h	/^	SND_PCM_FORMAT_LAST = SND_PCM_FORMAT_U18_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_MPEG	alsa/pcm.h	/^	SND_PCM_FORMAT_MPEG,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_MU_LAW	alsa/pcm.h	/^	SND_PCM_FORMAT_MU_LAW,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16	alsa/pcm.h	/^	SND_PCM_FORMAT_S16 = SND_PCM_FORMAT_S16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S16_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S18_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S18_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S18_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S18_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S20_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S20_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S20_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S20_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24	alsa/pcm.h	/^	SND_PCM_FORMAT_S24 = SND_PCM_FORMAT_S24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_3LE = 32,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32	alsa/pcm.h	/^	SND_PCM_FORMAT_S32 = SND_PCM_FORMAT_S32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S32_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S8	alsa/pcm.h	/^	SND_PCM_FORMAT_S8 = 0,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_SPECIAL	alsa/pcm.h	/^	SND_PCM_FORMAT_SPECIAL = 31,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16	alsa/pcm.h	/^	SND_PCM_FORMAT_U16 = SND_PCM_FORMAT_U16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U16_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U16_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U18_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U18_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U18_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U18_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U20_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U20_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U20_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U20_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24	alsa/pcm.h	/^	SND_PCM_FORMAT_U24 = SND_PCM_FORMAT_U24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_3BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_3LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32	alsa/pcm.h	/^	SND_PCM_FORMAT_U32 = SND_PCM_FORMAT_U32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U32_BE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U32_LE,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U8	alsa/pcm.h	/^	SND_PCM_FORMAT_U8,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_UNKNOWN	alsa/pcm.h	/^	SND_PCM_FORMAT_UNKNOWN = -1,$/;"	e	enum:_snd_pcm_format
SND_PCM_HOOK_TYPE_CLOSE	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_CLOSE,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_HW_FREE	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_HW_FREE,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_HW_PARAMS	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_HW_PARAMS = 0,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_LAST	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_LAST = SND_PCM_HOOK_TYPE_CLOSE$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_NONBLOCK	alsa/pcm.h	295;"	d
SND_PCM_START_DATA	alsa/pcm.h	/^	SND_PCM_START_DATA = 0,$/;"	e	enum:_snd_pcm_start
SND_PCM_START_EXPLICIT	alsa/pcm.h	/^	SND_PCM_START_EXPLICIT,$/;"	e	enum:_snd_pcm_start
SND_PCM_START_LAST	alsa/pcm.h	/^	SND_PCM_START_LAST = SND_PCM_START_EXPLICIT$/;"	e	enum:_snd_pcm_start
SND_PCM_STATE_DISCONNECTED	alsa/pcm.h	/^	SND_PCM_STATE_DISCONNECTED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_DRAINING	alsa/pcm.h	/^	SND_PCM_STATE_DRAINING,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_LAST	alsa/pcm.h	/^	SND_PCM_STATE_LAST = SND_PCM_STATE_DISCONNECTED$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_OPEN	alsa/pcm.h	/^	SND_PCM_STATE_OPEN = 0,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_PAUSED	alsa/pcm.h	/^	SND_PCM_STATE_PAUSED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_PREPARED	alsa/pcm.h	/^	SND_PCM_STATE_PREPARED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_RUNNING	alsa/pcm.h	/^	SND_PCM_STATE_RUNNING,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_SETUP	alsa/pcm.h	/^	SND_PCM_STATE_SETUP,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_SUSPENDED	alsa/pcm.h	/^	SND_PCM_STATE_SUSPENDED,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_XRUN	alsa/pcm.h	/^	SND_PCM_STATE_XRUN,$/;"	e	enum:_snd_pcm_state
SND_PCM_STREAM_CAPTURE	alsa/pcm.h	/^	SND_PCM_STREAM_CAPTURE,$/;"	e	enum:_snd_pcm_stream
SND_PCM_STREAM_LAST	alsa/pcm.h	/^	SND_PCM_STREAM_LAST = SND_PCM_STREAM_CAPTURE$/;"	e	enum:_snd_pcm_stream
SND_PCM_STREAM_PLAYBACK	alsa/pcm.h	/^	SND_PCM_STREAM_PLAYBACK = 0,$/;"	e	enum:_snd_pcm_stream
SND_PCM_SUBCLASS_GENERIC_MIX	alsa/pcm.h	/^	SND_PCM_SUBCLASS_GENERIC_MIX = 0,$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBCLASS_LAST	alsa/pcm.h	/^	SND_PCM_SUBCLASS_LAST = SND_PCM_SUBCLASS_MULTI_MIX$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBCLASS_MULTI_MIX	alsa/pcm.h	/^	SND_PCM_SUBCLASS_MULTI_MIX,$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBFORMAT_LAST	alsa/pcm.h	/^	SND_PCM_SUBFORMAT_LAST = SND_PCM_SUBFORMAT_STD$/;"	e	enum:_snd_pcm_subformat
SND_PCM_SUBFORMAT_STD	alsa/pcm.h	/^	SND_PCM_SUBFORMAT_STD = 0,$/;"	e	enum:_snd_pcm_subformat
SND_PCM_TSTAMP_LAST	alsa/pcm.h	/^	SND_PCM_TSTAMP_LAST = SND_PCM_TSTAMP_MMAP$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TSTAMP_MMAP	alsa/pcm.h	/^	SND_PCM_TSTAMP_MMAP,$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TSTAMP_NONE	alsa/pcm.h	/^	SND_PCM_TSTAMP_NONE = 0,$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TYPE_ADPCM	alsa/pcm.h	/^	SND_PCM_TYPE_ADPCM,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_ALAW	alsa/pcm.h	/^	SND_PCM_TYPE_ALAW,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_COPY	alsa/pcm.h	/^	SND_PCM_TYPE_COPY,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DMIX	alsa/pcm.h	/^	SND_PCM_TYPE_DMIX,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DROUTE	alsa/pcm.h	/^	SND_PCM_TYPE_DROUTE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DSHARE	alsa/pcm.h	/^	SND_PCM_TYPE_DSHARE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DSNOOP	alsa/pcm.h	/^	SND_PCM_TYPE_DSNOOP,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_EXTPLUG	alsa/pcm.h	/^	SND_PCM_TYPE_EXTPLUG,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_FILE	alsa/pcm.h	/^	SND_PCM_TYPE_FILE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_HOOKS	alsa/pcm.h	/^	SND_PCM_TYPE_HOOKS,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_HW	alsa/pcm.h	/^	SND_PCM_TYPE_HW = 0,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_IEC958	alsa/pcm.h	/^	SND_PCM_TYPE_IEC958,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_INET	alsa/pcm.h	/^	SND_PCM_TYPE_INET,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_IOPLUG	alsa/pcm.h	/^	SND_PCM_TYPE_IOPLUG,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_JACK	alsa/pcm.h	/^	SND_PCM_TYPE_JACK,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LADSPA	alsa/pcm.h	/^	SND_PCM_TYPE_LADSPA,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LAST	alsa/pcm.h	/^	SND_PCM_TYPE_LAST = SND_PCM_TYPE_EXTPLUG$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LBSERVER	alsa/pcm.h	/^	SND_PCM_TYPE_LBSERVER,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LINEAR	alsa/pcm.h	/^	SND_PCM_TYPE_LINEAR,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LINEAR_FLOAT	alsa/pcm.h	/^	SND_PCM_TYPE_LINEAR_FLOAT,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_METER	alsa/pcm.h	/^	SND_PCM_TYPE_METER,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MIX	alsa/pcm.h	/^	SND_PCM_TYPE_MIX,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MULAW	alsa/pcm.h	/^	SND_PCM_TYPE_MULAW,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MULTI	alsa/pcm.h	/^	SND_PCM_TYPE_MULTI,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_NULL	alsa/pcm.h	/^	SND_PCM_TYPE_NULL,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_PLUG	alsa/pcm.h	/^	SND_PCM_TYPE_PLUG,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_RATE	alsa/pcm.h	/^	SND_PCM_TYPE_RATE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_ROUTE	alsa/pcm.h	/^	SND_PCM_TYPE_ROUTE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SHARE	alsa/pcm.h	/^	SND_PCM_TYPE_SHARE,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SHM	alsa/pcm.h	/^	SND_PCM_TYPE_SHM,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SOFTVOL	alsa/pcm.h	/^	SND_PCM_TYPE_SOFTVOL,$/;"	e	enum:_snd_pcm_type
SND_PCM_XRUN_LAST	alsa/pcm.h	/^	SND_PCM_XRUN_LAST = SND_PCM_XRUN_STOP$/;"	e	enum:_snd_pcm_xrun
SND_PCM_XRUN_NONE	alsa/pcm.h	/^	SND_PCM_XRUN_NONE = 0,$/;"	e	enum:_snd_pcm_xrun
SND_PCM_XRUN_STOP	alsa/pcm.h	/^	SND_PCM_XRUN_STOP,$/;"	e	enum:_snd_pcm_xrun
SND_SPCM_DUPLEX_LIBERAL	alsa/pcm.h	/^	SND_SPCM_DUPLEX_LIBERAL = 0,$/;"	e	enum:_snd_spcm_duplex_type
SND_SPCM_DUPLEX_PEDANTIC	alsa/pcm.h	/^	SND_SPCM_DUPLEX_PEDANTIC$/;"	e	enum:_snd_spcm_duplex_type
SND_SPCM_LATENCY_MEDIUM	alsa/pcm.h	/^	SND_SPCM_LATENCY_MEDIUM,$/;"	e	enum:_snd_spcm_latency
SND_SPCM_LATENCY_REALTIME	alsa/pcm.h	/^	SND_SPCM_LATENCY_REALTIME$/;"	e	enum:_snd_spcm_latency
SND_SPCM_LATENCY_STANDARD	alsa/pcm.h	/^	SND_SPCM_LATENCY_STANDARD = 0,$/;"	e	enum:_snd_spcm_latency
SND_SPCM_XRUN_IGNORE	alsa/pcm.h	/^	SND_SPCM_XRUN_IGNORE = 0,$/;"	e	enum:_snd_spcm_xrun_type
SND_SPCM_XRUN_STOP	alsa/pcm.h	/^	SND_SPCM_XRUN_STOP$/;"	e	enum:_snd_spcm_xrun_type
__ALSA_PCM_H	alsa/pcm.h	30;"	d
_snd_pcm_access	alsa/pcm.h	/^typedef enum _snd_pcm_access {$/;"	g
_snd_pcm_channel_area	alsa/pcm.h	/^typedef struct _snd_pcm_channel_area {$/;"	s
_snd_pcm_class	alsa/pcm.h	/^typedef enum _snd_pcm_class {$/;"	g
_snd_pcm_format	alsa/pcm.h	/^typedef enum _snd_pcm_format {$/;"	g
_snd_pcm_hook_type	alsa/pcm.h	/^typedef enum _snd_pcm_hook_type {$/;"	g
_snd_pcm_scope_ops	alsa/pcm.h	/^typedef struct _snd_pcm_scope_ops {$/;"	s
_snd_pcm_start	alsa/pcm.h	/^typedef enum _snd_pcm_start {$/;"	g
_snd_pcm_state	alsa/pcm.h	/^typedef enum _snd_pcm_state {$/;"	g
_snd_pcm_stream	alsa/pcm.h	/^typedef enum _snd_pcm_stream {$/;"	g
_snd_pcm_subclass	alsa/pcm.h	/^typedef enum _snd_pcm_subclass {$/;"	g
_snd_pcm_subformat	alsa/pcm.h	/^typedef enum _snd_pcm_subformat {$/;"	g
_snd_pcm_sync_id	alsa/pcm.h	/^typedef union _snd_pcm_sync_id {$/;"	u
_snd_pcm_tstamp	alsa/pcm.h	/^typedef enum _snd_pcm_tstamp {$/;"	g
_snd_pcm_type	alsa/pcm.h	/^enum _snd_pcm_type {$/;"	g
_snd_pcm_xrun	alsa/pcm.h	/^typedef enum _snd_pcm_xrun {$/;"	g
_snd_spcm_duplex_type	alsa/pcm.h	/^typedef enum _snd_spcm_duplex_type {$/;"	g
_snd_spcm_latency	alsa/pcm.h	/^typedef enum _snd_spcm_latency {$/;"	g
_snd_spcm_xrun_type	alsa/pcm.h	/^typedef enum _snd_spcm_xrun_type {$/;"	g
addr	alsa/pcm.h	/^	void *addr;$/;"	m	struct:_snd_pcm_channel_area
close	alsa/pcm.h	/^	void (*close)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
disable	alsa/pcm.h	/^	void (*disable)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
enable	alsa/pcm.h	/^	int (*enable)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
first	alsa/pcm.h	/^	unsigned int first;$/;"	m	struct:_snd_pcm_channel_area
id	alsa/pcm.h	/^	unsigned char id[16];$/;"	m	union:_snd_pcm_sync_id
id16	alsa/pcm.h	/^	unsigned short id16[8];$/;"	m	union:_snd_pcm_sync_id
id32	alsa/pcm.h	/^	unsigned int id32[4];$/;"	m	union:_snd_pcm_sync_id
reset	alsa/pcm.h	/^	void (*reset)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
snd_pcm_access_mask_alloca	alsa/pcm.h	731;"	d
snd_pcm_access_mask_t	alsa/pcm.h	/^typedef struct _snd_pcm_access_mask snd_pcm_access_mask_t;$/;"	t	typeref:struct:_snd_pcm_access_mask
snd_pcm_access_t	alsa/pcm.h	/^} snd_pcm_access_t;$/;"	t	typeref:enum:_snd_pcm_access
snd_pcm_channel_area_t	alsa/pcm.h	/^} snd_pcm_channel_area_t;$/;"	t	typeref:struct:_snd_pcm_channel_area
snd_pcm_class_t	alsa/pcm.h	/^} snd_pcm_class_t;$/;"	t	typeref:enum:_snd_pcm_class
snd_pcm_format_mask_alloca	alsa/pcm.h	756;"	d
snd_pcm_format_mask_t	alsa/pcm.h	/^typedef struct _snd_pcm_format_mask snd_pcm_format_mask_t;$/;"	t	typeref:struct:_snd_pcm_format_mask
snd_pcm_format_t	alsa/pcm.h	/^} snd_pcm_format_t;$/;"	t	typeref:enum:_snd_pcm_format
snd_pcm_hook_func_t	alsa/pcm.h	/^typedef int (*snd_pcm_hook_func_t)(snd_pcm_hook_t *hook);$/;"	t
snd_pcm_hook_t	alsa/pcm.h	/^typedef struct _snd_pcm_hook snd_pcm_hook_t;$/;"	t	typeref:struct:_snd_pcm_hook
snd_pcm_hook_type_t	alsa/pcm.h	/^} snd_pcm_hook_type_t;$/;"	t	typeref:enum:_snd_pcm_hook_type
snd_pcm_hw_params_alloca	alsa/pcm.h	532;"	d
snd_pcm_hw_params_t	alsa/pcm.h	/^typedef struct _snd_pcm_hw_params snd_pcm_hw_params_t;$/;"	t	typeref:struct:_snd_pcm_hw_params
snd_pcm_info_alloca	alsa/pcm.h	454;"	d
snd_pcm_info_t	alsa/pcm.h	/^typedef struct _snd_pcm_info snd_pcm_info_t;$/;"	t	typeref:struct:_snd_pcm_info
snd_pcm_scope_ops_t	alsa/pcm.h	/^} snd_pcm_scope_ops_t;$/;"	t	typeref:struct:_snd_pcm_scope_ops
snd_pcm_scope_t	alsa/pcm.h	/^typedef struct _snd_pcm_scope snd_pcm_scope_t;$/;"	t	typeref:struct:_snd_pcm_scope
snd_pcm_sframes_t	alsa/pcm.h	/^typedef long snd_pcm_sframes_t;$/;"	t
snd_pcm_start_t	alsa/pcm.h	/^} snd_pcm_start_t;$/;"	t	typeref:enum:_snd_pcm_start
snd_pcm_state_t	alsa/pcm.h	/^} snd_pcm_state_t;$/;"	t	typeref:enum:_snd_pcm_state
snd_pcm_status_alloca	alsa/pcm.h	806;"	d
snd_pcm_status_t	alsa/pcm.h	/^ typedef struct _snd_pcm_status snd_pcm_status_t;$/;"	t	typeref:struct:_snd_pcm_status
snd_pcm_stream_t	alsa/pcm.h	/^} snd_pcm_stream_t;$/;"	t	typeref:enum:_snd_pcm_stream
snd_pcm_subclass_t	alsa/pcm.h	/^} snd_pcm_subclass_t;$/;"	t	typeref:enum:_snd_pcm_subclass
snd_pcm_subformat_mask_alloca	alsa/pcm.h	781;"	d
snd_pcm_subformat_mask_t	alsa/pcm.h	/^typedef struct _snd_pcm_subformat_mask snd_pcm_subformat_mask_t;$/;"	t	typeref:struct:_snd_pcm_subformat_mask
snd_pcm_subformat_t	alsa/pcm.h	/^} snd_pcm_subformat_t;$/;"	t	typeref:enum:_snd_pcm_subformat
snd_pcm_sw_params_alloca	alsa/pcm.h	683;"	d
snd_pcm_sw_params_t	alsa/pcm.h	/^typedef struct _snd_pcm_sw_params snd_pcm_sw_params_t;$/;"	t	typeref:struct:_snd_pcm_sw_params
snd_pcm_sync_id_t	alsa/pcm.h	/^} snd_pcm_sync_id_t;$/;"	t	typeref:union:_snd_pcm_sync_id
snd_pcm_t	alsa/pcm.h	/^typedef struct _snd_pcm snd_pcm_t;$/;"	t	typeref:struct:_snd_pcm
snd_pcm_tstamp_t	alsa/pcm.h	/^} snd_pcm_tstamp_t;$/;"	t	typeref:enum:_snd_pcm_tstamp
snd_pcm_type_t	alsa/pcm.h	/^typedef enum _snd_pcm_type snd_pcm_type_t;$/;"	t	typeref:enum:_snd_pcm_type
snd_pcm_uframes_t	alsa/pcm.h	/^typedef unsigned long snd_pcm_uframes_t;$/;"	t
snd_pcm_xrun_t	alsa/pcm.h	/^} snd_pcm_xrun_t;$/;"	t	typeref:enum:_snd_pcm_xrun
snd_spcm_duplex_type_t	alsa/pcm.h	/^} snd_spcm_duplex_type_t;$/;"	t	typeref:enum:_snd_spcm_duplex_type
snd_spcm_latency_t	alsa/pcm.h	/^} snd_spcm_latency_t;$/;"	t	typeref:enum:_snd_spcm_latency
snd_spcm_xrun_type_t	alsa/pcm.h	/^} snd_spcm_xrun_type_t;$/;"	t	typeref:enum:_snd_spcm_xrun_type
start	alsa/pcm.h	/^	void (*start)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
step	alsa/pcm.h	/^	unsigned int step;$/;"	m	struct:_snd_pcm_channel_area
stop	alsa/pcm.h	/^	void (*stop)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
update	alsa/pcm.h	/^	void (*update)(snd_pcm_scope_t *scope);$/;"	m	struct:_snd_pcm_scope_ops
SND_PCM_PLUGIN_DEFINE_FUNC	alsa/pcm_external.h	53;"	d
SND_PCM_PLUGIN_ENTRY	alsa/pcm_external.h	43;"	d
SND_PCM_PLUGIN_SYMBOL	alsa/pcm_external.h	48;"	d
__ALSA_PCM_EXTERNAL_H	alsa/pcm_external.h	27;"	d
SND_PCM_EXTPLUG_HW_CHANNELS	alsa/pcm_extplug.h	/^	SND_PCM_EXTPLUG_HW_CHANNELS,	\/**< channels *\/$/;"	e	enum:__anon78
SND_PCM_EXTPLUG_HW_FORMAT	alsa/pcm_extplug.h	/^	SND_PCM_EXTPLUG_HW_FORMAT,	\/**< format *\/$/;"	e	enum:__anon78
SND_PCM_EXTPLUG_HW_PARAMS	alsa/pcm_extplug.h	/^	SND_PCM_EXTPLUG_HW_PARAMS	\/**< max number of hw constraints *\/$/;"	e	enum:__anon78
SND_PCM_EXTPLUG_VERSION	alsa/pcm_extplug.h	62;"	d
SND_PCM_EXTPLUG_VERSION_MAJOR	alsa/pcm_extplug.h	56;"	d
SND_PCM_EXTPLUG_VERSION_MINOR	alsa/pcm_extplug.h	57;"	d
SND_PCM_EXTPLUG_VERSION_TINY	alsa/pcm_extplug.h	58;"	d
__ALSA_PCM_EXTPLUG_H	alsa/pcm_extplug.h	32;"	d
callback	alsa/pcm_extplug.h	/^	const snd_pcm_extplug_callback_t *callback;$/;"	m	struct:snd_pcm_extplug
channels	alsa/pcm_extplug.h	/^	unsigned int channels;$/;"	m	struct:snd_pcm_extplug
close	alsa/pcm_extplug.h	/^	int (*close)(snd_pcm_extplug_t *ext);$/;"	m	struct:snd_pcm_extplug_callback
dump	alsa/pcm_extplug.h	/^	void (*dump)(snd_pcm_extplug_t *ext, snd_output_t *out);$/;"	m	struct:snd_pcm_extplug_callback
format	alsa/pcm_extplug.h	/^	snd_pcm_format_t format;$/;"	m	struct:snd_pcm_extplug
hw_free	alsa/pcm_extplug.h	/^	int (*hw_free)(snd_pcm_extplug_t *ext);$/;"	m	struct:snd_pcm_extplug_callback
hw_params	alsa/pcm_extplug.h	/^	int (*hw_params)(snd_pcm_extplug_t *ext, snd_pcm_hw_params_t *params);$/;"	m	struct:snd_pcm_extplug_callback
name	alsa/pcm_extplug.h	/^	const char *name;$/;"	m	struct:snd_pcm_extplug
pcm	alsa/pcm_extplug.h	/^	snd_pcm_t *pcm;$/;"	m	struct:snd_pcm_extplug
private_data	alsa/pcm_extplug.h	/^	void *private_data;$/;"	m	struct:snd_pcm_extplug
rate	alsa/pcm_extplug.h	/^	unsigned int rate;$/;"	m	struct:snd_pcm_extplug
slave_channels	alsa/pcm_extplug.h	/^	unsigned int slave_channels;$/;"	m	struct:snd_pcm_extplug
slave_format	alsa/pcm_extplug.h	/^	snd_pcm_format_t slave_format;$/;"	m	struct:snd_pcm_extplug
slave_subformat	alsa/pcm_extplug.h	/^	snd_pcm_subformat_t slave_subformat;$/;"	m	struct:snd_pcm_extplug
snd_pcm_extplug	alsa/pcm_extplug.h	/^struct snd_pcm_extplug {$/;"	s
snd_pcm_extplug_callback	alsa/pcm_extplug.h	/^struct snd_pcm_extplug_callback {$/;"	s
snd_pcm_extplug_callback_t	alsa/pcm_extplug.h	/^typedef struct snd_pcm_extplug_callback snd_pcm_extplug_callback_t;$/;"	t	typeref:struct:snd_pcm_extplug_callback
snd_pcm_extplug_set_param	alsa/pcm_extplug.h	/^static inline int snd_pcm_extplug_set_param(snd_pcm_extplug_t *extplug, int type, unsigned int val)$/;"	f
snd_pcm_extplug_set_slave_param	alsa/pcm_extplug.h	/^static inline int snd_pcm_extplug_set_slave_param(snd_pcm_extplug_t *extplug, int type, unsigned int val)$/;"	f
snd_pcm_extplug_t	alsa/pcm_extplug.h	/^typedef struct snd_pcm_extplug snd_pcm_extplug_t;$/;"	t	typeref:struct:snd_pcm_extplug
stream	alsa/pcm_extplug.h	/^	snd_pcm_stream_t stream;$/;"	m	struct:snd_pcm_extplug
subformat	alsa/pcm_extplug.h	/^	snd_pcm_subformat_t subformat;$/;"	m	struct:snd_pcm_extplug
transfer	alsa/pcm_extplug.h	/^	snd_pcm_sframes_t (*transfer)(snd_pcm_extplug_t *ext,$/;"	m	struct:snd_pcm_extplug_callback
version	alsa/pcm_extplug.h	/^	unsigned int version;$/;"	m	struct:snd_pcm_extplug
SND_PCM_IOPLUG_FLAG_LISTED	alsa/pcm_ioplug.h	61;"	d
SND_PCM_IOPLUG_HW_ACCESS	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_ACCESS = 0,	\/**< access type *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_HW_BUFFER_BYTES	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_BUFFER_BYTES,	\/**< buffer bytes *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_HW_CHANNELS	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_CHANNELS,	\/**< channels *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_HW_FORMAT	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_FORMAT,	\/**< format *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_HW_PARAMS	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_PARAMS	\/**< max number of hw constraints *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_HW_PERIODS	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_PERIODS,	\/**< number of periods *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_HW_PERIOD_BYTES	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_PERIOD_BYTES,	\/**< period bytes *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_HW_RATE	alsa/pcm_ioplug.h	/^	SND_PCM_IOPLUG_HW_RATE,		\/**< rate *\/$/;"	e	enum:__anon59
SND_PCM_IOPLUG_VERSION	alsa/pcm_ioplug.h	72;"	d
SND_PCM_IOPLUG_VERSION_MAJOR	alsa/pcm_ioplug.h	66;"	d
SND_PCM_IOPLUG_VERSION_MINOR	alsa/pcm_ioplug.h	67;"	d
SND_PCM_IOPLUG_VERSION_TINY	alsa/pcm_ioplug.h	68;"	d
__ALSA_PCM_IOPLUG_H	alsa/pcm_ioplug.h	32;"	d
access	alsa/pcm_ioplug.h	/^	snd_pcm_access_t access;	\/**< access type; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
appl_ptr	alsa/pcm_ioplug.h	/^	volatile snd_pcm_uframes_t appl_ptr;	\/**< application pointer; read-only *\/$/;"	m	struct:snd_pcm_ioplug
buffer_size	alsa/pcm_ioplug.h	/^	snd_pcm_uframes_t buffer_size;	\/**< buffer size; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
callback	alsa/pcm_ioplug.h	/^	const snd_pcm_ioplug_callback_t *callback;$/;"	m	struct:snd_pcm_ioplug
channels	alsa/pcm_ioplug.h	/^	unsigned int channels;		\/**< number of channels; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
close	alsa/pcm_ioplug.h	/^	int (*close)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
drain	alsa/pcm_ioplug.h	/^	int (*drain)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
dump	alsa/pcm_ioplug.h	/^	void (*dump)(snd_pcm_ioplug_t *io, snd_output_t *out);$/;"	m	struct:snd_pcm_ioplug_callback
flags	alsa/pcm_ioplug.h	/^	unsigned int flags;	\/**< SND_PCM_IOPLUG_FLAG_XXX *\/$/;"	m	struct:snd_pcm_ioplug
format	alsa/pcm_ioplug.h	/^	snd_pcm_format_t format;	\/**< PCM format; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
hw_free	alsa/pcm_ioplug.h	/^	int (*hw_free)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
hw_params	alsa/pcm_ioplug.h	/^	int (*hw_params)(snd_pcm_ioplug_t *io, snd_pcm_hw_params_t *params);$/;"	m	struct:snd_pcm_ioplug_callback
hw_ptr	alsa/pcm_ioplug.h	/^	volatile snd_pcm_uframes_t hw_ptr;	\/**< hw pointer; read-only *\/$/;"	m	struct:snd_pcm_ioplug
mmap_rw	alsa/pcm_ioplug.h	/^	unsigned int mmap_rw;		\/**< pseudo mmap mode *\/$/;"	m	struct:snd_pcm_ioplug
name	alsa/pcm_ioplug.h	/^	const char *name;$/;"	m	struct:snd_pcm_ioplug
nonblock	alsa/pcm_ioplug.h	/^	int nonblock;			\/**< non-block mode; read-only *\/$/;"	m	struct:snd_pcm_ioplug
pause	alsa/pcm_ioplug.h	/^	int (*pause)(snd_pcm_ioplug_t *io, int enable);$/;"	m	struct:snd_pcm_ioplug_callback
pcm	alsa/pcm_ioplug.h	/^	snd_pcm_t *pcm;$/;"	m	struct:snd_pcm_ioplug
period_size	alsa/pcm_ioplug.h	/^	snd_pcm_uframes_t period_size;	\/**< period size; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
pointer	alsa/pcm_ioplug.h	/^	snd_pcm_sframes_t (*pointer)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
poll_descriptors	alsa/pcm_ioplug.h	/^	int (*poll_descriptors)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int space);$/;"	m	struct:snd_pcm_ioplug_callback
poll_descriptors_count	alsa/pcm_ioplug.h	/^	int (*poll_descriptors_count)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
poll_events	alsa/pcm_ioplug.h	/^	unsigned int poll_events;	\/**< poll events *\/$/;"	m	struct:snd_pcm_ioplug
poll_fd	alsa/pcm_ioplug.h	/^	int poll_fd;		\/**< poll file descriptor *\/$/;"	m	struct:snd_pcm_ioplug
poll_revents	alsa/pcm_ioplug.h	/^	int (*poll_revents)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int nfds, unsigned short *revents);$/;"	m	struct:snd_pcm_ioplug_callback
prepare	alsa/pcm_ioplug.h	/^	int (*prepare)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
private_data	alsa/pcm_ioplug.h	/^	void *private_data;$/;"	m	struct:snd_pcm_ioplug
rate	alsa/pcm_ioplug.h	/^	unsigned int rate;		\/**< rate; filled after hw_params is called *\/$/;"	m	struct:snd_pcm_ioplug
resume	alsa/pcm_ioplug.h	/^	int (*resume)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
snd_pcm_ioplug	alsa/pcm_ioplug.h	/^struct snd_pcm_ioplug {$/;"	s
snd_pcm_ioplug_callback	alsa/pcm_ioplug.h	/^struct snd_pcm_ioplug_callback {$/;"	s
snd_pcm_ioplug_callback_t	alsa/pcm_ioplug.h	/^typedef struct snd_pcm_ioplug_callback snd_pcm_ioplug_callback_t;$/;"	t	typeref:struct:snd_pcm_ioplug_callback
snd_pcm_ioplug_t	alsa/pcm_ioplug.h	/^typedef struct snd_pcm_ioplug snd_pcm_ioplug_t;$/;"	t	typeref:struct:snd_pcm_ioplug
start	alsa/pcm_ioplug.h	/^	int (*start)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
state	alsa/pcm_ioplug.h	/^	snd_pcm_state_t state;		\/**< current PCM state; read-only *\/$/;"	m	struct:snd_pcm_ioplug
stop	alsa/pcm_ioplug.h	/^	int (*stop)(snd_pcm_ioplug_t *io);$/;"	m	struct:snd_pcm_ioplug_callback
stream	alsa/pcm_ioplug.h	/^	snd_pcm_stream_t stream;	\/**< stream direcion; read-only *\/	$/;"	m	struct:snd_pcm_ioplug
sw_params	alsa/pcm_ioplug.h	/^	int (*sw_params)(snd_pcm_ioplug_t *io, snd_pcm_sw_params_t *params);$/;"	m	struct:snd_pcm_ioplug_callback
transfer	alsa/pcm_ioplug.h	/^	snd_pcm_sframes_t (*transfer)(snd_pcm_ioplug_t *io,$/;"	m	struct:snd_pcm_ioplug_callback
version	alsa/pcm_ioplug.h	/^	unsigned int version;$/;"	m	struct:snd_pcm_ioplug
SNDO_PCM_ACCESS_INTERLEAVED	alsa/pcm_ordinary.h	/^	SNDO_PCM_ACCESS_INTERLEAVED = 0,$/;"	e	enum:sndo_pcm_access_type
SNDO_PCM_ACCESS_NONINTERLEAVED	alsa/pcm_ordinary.h	/^	SNDO_PCM_ACCESS_NONINTERLEAVED$/;"	e	enum:sndo_pcm_access_type
SNDO_PCM_LATENCY_MEDIUM	alsa/pcm_ordinary.h	/^	SNDO_PCM_LATENCY_MEDIUM,$/;"	e	enum:sndo_pcm_latency_type
SNDO_PCM_LATENCY_NORMAL	alsa/pcm_ordinary.h	/^	SNDO_PCM_LATENCY_NORMAL = 0,$/;"	e	enum:sndo_pcm_latency_type
SNDO_PCM_LATENCY_REALTIME	alsa/pcm_ordinary.h	/^	SNDO_PCM_LATENCY_REALTIME$/;"	e	enum:sndo_pcm_latency_type
SNDO_PCM_XRUN_IGNORE	alsa/pcm_ordinary.h	/^	SNDO_PCM_XRUN_IGNORE = 0,$/;"	e	enum:sndo_pcm_xrun_type
SNDO_PCM_XRUN_STOP	alsa/pcm_ordinary.h	/^	SNDO_PCM_XRUN_STOP$/;"	e	enum:sndo_pcm_xrun_type
__ALSA_PCM_ORDINARY_H	alsa/pcm_ordinary.h	28;"	d
sndo_pcm_access_type	alsa/pcm_ordinary.h	/^enum sndo_pcm_access_type {$/;"	g
sndo_pcm_engine_callback_t	alsa/pcm_ordinary.h	/^typedef int (sndo_pcm_engine_callback_t)(sndo_pcm_t *pcm);$/;"	t
sndo_pcm_latency_type	alsa/pcm_ordinary.h	/^enum sndo_pcm_latency_type {$/;"	g
sndo_pcm_t	alsa/pcm_ordinary.h	/^typedef struct sndo_pcm sndo_pcm_t;$/;"	t	typeref:struct:sndo_pcm
sndo_pcm_xrun_type	alsa/pcm_ordinary.h	/^enum sndo_pcm_xrun_type {$/;"	g
SND_PCM_PLUGIN_RATE_MAX	alsa/pcm_plugin.h	42;"	d
SND_PCM_PLUGIN_RATE_MIN	alsa/pcm_plugin.h	41;"	d
SND_PCM_PLUGIN_ROUTE_FLOAT	alsa/pcm_plugin.h	46;"	d
SND_PCM_PLUGIN_ROUTE_FLOAT	alsa/pcm_plugin.h	48;"	d
SND_PCM_PLUGIN_ROUTE_FULL	alsa/pcm_plugin.h	57;"	d
SND_PCM_PLUGIN_ROUTE_FULL	alsa/pcm_plugin.h	62;"	d
SND_PCM_PLUGIN_ROUTE_HALF	alsa/pcm_plugin.h	56;"	d
SND_PCM_PLUGIN_ROUTE_HALF	alsa/pcm_plugin.h	61;"	d
SND_PCM_PLUGIN_ROUTE_RESOLUTION	alsa/pcm_plugin.h	51;"	d
snd_pcm_route_ttable_entry_t	alsa/pcm_plugin.h	/^typedef float snd_pcm_route_ttable_entry_t;$/;"	t
snd_pcm_route_ttable_entry_t	alsa/pcm_plugin.h	/^typedef int snd_pcm_route_ttable_entry_t;$/;"	t
SND_RAWMIDI_APPEND	alsa/rawmidi.h	61;"	d
SND_RAWMIDI_DLSYM_VERSION	alsa/rawmidi.h	42;"	d
SND_RAWMIDI_NONBLOCK	alsa/rawmidi.h	63;"	d
SND_RAWMIDI_STREAM_INPUT	alsa/rawmidi.h	/^	SND_RAWMIDI_STREAM_INPUT,$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_STREAM_LAST	alsa/rawmidi.h	/^	SND_RAWMIDI_STREAM_LAST = SND_RAWMIDI_STREAM_INPUT$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_STREAM_OUTPUT	alsa/rawmidi.h	/^	SND_RAWMIDI_STREAM_OUTPUT = 0,$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_SYNC	alsa/rawmidi.h	65;"	d
SND_RAWMIDI_TYPE_HW	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_HW,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_INET	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_INET,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_SHM	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_SHM,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_VIRTUAL	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_VIRTUAL$/;"	e	enum:_snd_rawmidi_type
__ALSA_RAWMIDI_H	alsa/rawmidi.h	29;"	d
_snd_rawmidi_stream	alsa/rawmidi.h	/^typedef enum _snd_rawmidi_stream {$/;"	g
_snd_rawmidi_type	alsa/rawmidi.h	/^typedef enum _snd_rawmidi_type {$/;"	g
snd_rawmidi_info_alloca	alsa/rawmidi.h	96;"	d
snd_rawmidi_info_t	alsa/rawmidi.h	/^typedef struct _snd_rawmidi_info snd_rawmidi_info_t;$/;"	t	typeref:struct:_snd_rawmidi_info
snd_rawmidi_params_alloca	alsa/rawmidi.h	119;"	d
snd_rawmidi_params_t	alsa/rawmidi.h	/^typedef struct _snd_rawmidi_params snd_rawmidi_params_t;$/;"	t	typeref:struct:_snd_rawmidi_params
snd_rawmidi_status_alloca	alsa/rawmidi.h	136;"	d
snd_rawmidi_status_t	alsa/rawmidi.h	/^typedef struct _snd_rawmidi_status snd_rawmidi_status_t;$/;"	t	typeref:struct:_snd_rawmidi_status
snd_rawmidi_stream_t	alsa/rawmidi.h	/^} snd_rawmidi_stream_t;$/;"	t	typeref:enum:_snd_rawmidi_stream
snd_rawmidi_t	alsa/rawmidi.h	/^typedef struct _snd_rawmidi snd_rawmidi_t;$/;"	t	typeref:struct:_snd_rawmidi
snd_rawmidi_type_t	alsa/rawmidi.h	/^} snd_rawmidi_type_t;$/;"	t	typeref:enum:_snd_rawmidi_type
SND_ALLOCA	alsa/seq.h	50;"	d
SND_SEQ_ADDRESS_BROADCAST	alsa/seq.h	80;"	d
SND_SEQ_ADDRESS_SUBSCRIBERS	alsa/seq.h	79;"	d
SND_SEQ_ADDRESS_UNKNOWN	alsa/seq.h	78;"	d
SND_SEQ_CLIENT_DUMMY	alsa/seq.h	84;"	d
SND_SEQ_CLIENT_OSS	alsa/seq.h	85;"	d
SND_SEQ_CLIENT_SYSTEM	alsa/seq.h	83;"	d
SND_SEQ_DLSYM_VERSION	alsa/seq.h	44;"	d
SND_SEQ_EVFLG_CONNECTION	alsa/seq.h	/^	SND_SEQ_EVFLG_CONNECTION,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_CONTROL	alsa/seq.h	/^	SND_SEQ_EVFLG_CONTROL,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_FIXED	alsa/seq.h	/^	SND_SEQ_EVFLG_FIXED,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_INSTR	alsa/seq.h	/^	SND_SEQ_EVFLG_INSTR,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_MESSAGE	alsa/seq.h	/^	SND_SEQ_EVFLG_MESSAGE,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_NONE	alsa/seq.h	/^	SND_SEQ_EVFLG_NONE,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_NOTE	alsa/seq.h	/^	SND_SEQ_EVFLG_NOTE,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_NOTE_ONEARG	alsa/seq.h	/^	SND_SEQ_EVFLG_NOTE_ONEARG,$/;"	e	enum:__anon82
SND_SEQ_EVFLG_NOTE_TWOARG	alsa/seq.h	/^	SND_SEQ_EVFLG_NOTE_TWOARG$/;"	e	enum:__anon82
SND_SEQ_EVFLG_QUEUE	alsa/seq.h	/^	SND_SEQ_EVFLG_QUEUE,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_QUEUE_NOARG	alsa/seq.h	/^	SND_SEQ_EVFLG_QUEUE_NOARG,$/;"	e	enum:__anon83
SND_SEQ_EVFLG_QUEUE_TICK	alsa/seq.h	/^	SND_SEQ_EVFLG_QUEUE_TICK,$/;"	e	enum:__anon83
SND_SEQ_EVFLG_QUEUE_TIME	alsa/seq.h	/^	SND_SEQ_EVFLG_QUEUE_TIME,$/;"	e	enum:__anon83
SND_SEQ_EVFLG_QUEUE_VALUE	alsa/seq.h	/^	SND_SEQ_EVFLG_QUEUE_VALUE$/;"	e	enum:__anon83
SND_SEQ_EVFLG_QUOTE	alsa/seq.h	/^	SND_SEQ_EVFLG_QUOTE,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_RAW	alsa/seq.h	/^	SND_SEQ_EVFLG_RAW,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_RESULT	alsa/seq.h	/^	SND_SEQ_EVFLG_RESULT,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_SAMPLE	alsa/seq.h	/^	SND_SEQ_EVFLG_SAMPLE,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_SYSTEM	alsa/seq.h	/^	SND_SEQ_EVFLG_SYSTEM,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_USERS	alsa/seq.h	/^	SND_SEQ_EVFLG_USERS,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_VARIABLE	alsa/seq.h	/^	SND_SEQ_EVFLG_VARIABLE,$/;"	e	enum:__anon81
SND_SEQ_EVFLG_VARUSR	alsa/seq.h	/^	SND_SEQ_EVFLG_VARUSR$/;"	e	enum:__anon81
SND_SEQ_KERNEL_CLIENT	alsa/seq.h	/^	SND_SEQ_KERNEL_CLIENT   = 2	\/**< kernel client *\/$/;"	e	enum:snd_seq_client_type
SND_SEQ_NONBLOCK	alsa/seq.h	68;"	d
SND_SEQ_OPEN_DUPLEX	alsa/seq.h	63;"	d
SND_SEQ_OPEN_INPUT	alsa/seq.h	62;"	d
SND_SEQ_OPEN_OUTPUT	alsa/seq.h	61;"	d
SND_SEQ_PORT_CAP_DUPLEX	alsa/seq.h	224;"	d
SND_SEQ_PORT_CAP_NO_EXPORT	alsa/seq.h	228;"	d
SND_SEQ_PORT_CAP_READ	alsa/seq.h	218;"	d
SND_SEQ_PORT_CAP_SUBS_READ	alsa/seq.h	226;"	d
SND_SEQ_PORT_CAP_SUBS_WRITE	alsa/seq.h	227;"	d
SND_SEQ_PORT_CAP_SYNC_READ	alsa/seq.h	221;"	d
SND_SEQ_PORT_CAP_SYNC_WRITE	alsa/seq.h	222;"	d
SND_SEQ_PORT_CAP_WRITE	alsa/seq.h	219;"	d
SND_SEQ_PORT_SYSTEM_ANNOUNCE	alsa/seq.h	215;"	d
SND_SEQ_PORT_SYSTEM_TIMER	alsa/seq.h	214;"	d
SND_SEQ_PORT_TYPE_APPLICATION	alsa/seq.h	240;"	d
SND_SEQ_PORT_TYPE_DIRECT_SAMPLE	alsa/seq.h	238;"	d
SND_SEQ_PORT_TYPE_MIDI_GENERIC	alsa/seq.h	232;"	d
SND_SEQ_PORT_TYPE_MIDI_GM	alsa/seq.h	233;"	d
SND_SEQ_PORT_TYPE_MIDI_GS	alsa/seq.h	234;"	d
SND_SEQ_PORT_TYPE_MIDI_MT32	alsa/seq.h	236;"	d
SND_SEQ_PORT_TYPE_MIDI_XG	alsa/seq.h	235;"	d
SND_SEQ_PORT_TYPE_SAMPLE	alsa/seq.h	239;"	d
SND_SEQ_PORT_TYPE_SPECIFIC	alsa/seq.h	231;"	d
SND_SEQ_PORT_TYPE_SYNTH	alsa/seq.h	237;"	d
SND_SEQ_QUERY_SUBS_READ	alsa/seq.h	/^	SND_SEQ_QUERY_SUBS_READ,	\/**< query read subscriptions *\/$/;"	e	enum:__anon79
SND_SEQ_QUERY_SUBS_WRITE	alsa/seq.h	/^	SND_SEQ_QUERY_SUBS_WRITE	\/**< query write subscriptions *\/$/;"	e	enum:__anon79
SND_SEQ_QUEUE_DIRECT	alsa/seq.h	387;"	d
SND_SEQ_REMOVE_DEST	alsa/seq.h	520;"	d
SND_SEQ_REMOVE_DEST_CHANNEL	alsa/seq.h	521;"	d
SND_SEQ_REMOVE_EVENT_TYPE	alsa/seq.h	525;"	d
SND_SEQ_REMOVE_IGNORE_OFF	alsa/seq.h	526;"	d
SND_SEQ_REMOVE_INPUT	alsa/seq.h	518;"	d
SND_SEQ_REMOVE_OUTPUT	alsa/seq.h	519;"	d
SND_SEQ_REMOVE_TAG_MATCH	alsa/seq.h	527;"	d
SND_SEQ_REMOVE_TIME_AFTER	alsa/seq.h	523;"	d
SND_SEQ_REMOVE_TIME_BEFORE	alsa/seq.h	522;"	d
SND_SEQ_REMOVE_TIME_TICK	alsa/seq.h	524;"	d
SND_SEQ_TIMER_ALSA	alsa/seq.h	/^	SND_SEQ_TIMER_ALSA = 0,		\/* ALSA timer *\/$/;"	e	enum:__anon80
SND_SEQ_TIMER_MIDI_CLOCK	alsa/seq.h	/^	SND_SEQ_TIMER_MIDI_CLOCK = 1,	\/* Midi Clock (CLOCK event) *\/$/;"	e	enum:__anon80
SND_SEQ_TIMER_MIDI_TICK	alsa/seq.h	/^	SND_SEQ_TIMER_MIDI_TICK = 2	\/* Midi Timer Tick (TICK event *\/$/;"	e	enum:__anon80
SND_SEQ_TYPE_HW	alsa/seq.h	/^	SND_SEQ_TYPE_HW,		\/**< hardware *\/$/;"	e	enum:_snd_seq_type
SND_SEQ_TYPE_INET	alsa/seq.h	/^	SND_SEQ_TYPE_INET		\/**< network (NYI) *\/$/;"	e	enum:_snd_seq_type
SND_SEQ_TYPE_SHM	alsa/seq.h	/^	SND_SEQ_TYPE_SHM,		\/**< shared memory (NYI) *\/$/;"	e	enum:_snd_seq_type
SND_SEQ_USER_CLIENT	alsa/seq.h	/^	SND_SEQ_USER_CLIENT     = 1,	\/**< user client *\/$/;"	e	enum:snd_seq_client_type
_SND_SEQ_TYPE	alsa/seq.h	617;"	d
_SND_SEQ_TYPE_OPT	alsa/seq.h	618;"	d
__ALSA_SEQ_H	alsa/seq.h	30;"	d
_snd_seq_type	alsa/seq.h	/^typedef enum _snd_seq_type {$/;"	g
snd_seq_client_info_alloca	alsa/seq.h	146;"	d
snd_seq_client_info_t	alsa/seq.h	/^typedef struct _snd_seq_client_info snd_seq_client_info_t;$/;"	t	typeref:struct:_snd_seq_client_info
snd_seq_client_pool_alloca	alsa/seq.h	180;"	d
snd_seq_client_pool_t	alsa/seq.h	/^typedef struct _snd_seq_client_pool snd_seq_client_pool_t;$/;"	t	typeref:struct:_snd_seq_client_pool
snd_seq_client_type	alsa/seq.h	/^typedef enum snd_seq_client_type {$/;"	g
snd_seq_client_type_t	alsa/seq.h	/^} snd_seq_client_type_t;$/;"	t	typeref:enum:snd_seq_client_type
snd_seq_ev_is_abstime	alsa/seq.h	701;"	d
snd_seq_ev_is_channel_type	alsa/seq.h	633;"	d
snd_seq_ev_is_control_type	alsa/seq.h	630;"	d
snd_seq_ev_is_direct	alsa/seq.h	708;"	d
snd_seq_ev_is_fixed	alsa/seq.h	678;"	d
snd_seq_ev_is_fixed_type	alsa/seq.h	655;"	d
snd_seq_ev_is_instr_type	alsa/seq.h	652;"	d
snd_seq_ev_is_message_type	alsa/seq.h	640;"	d
snd_seq_ev_is_note_type	alsa/seq.h	627;"	d
snd_seq_ev_is_prior	alsa/seq.h	671;"	d
snd_seq_ev_is_queue_type	alsa/seq.h	637;"	d
snd_seq_ev_is_real	alsa/seq.h	694;"	d
snd_seq_ev_is_reltime	alsa/seq.h	704;"	d
snd_seq_ev_is_reserved	alsa/seq.h	664;"	d
snd_seq_ev_is_result_type	alsa/seq.h	624;"	d
snd_seq_ev_is_sample_type	alsa/seq.h	646;"	d
snd_seq_ev_is_subscribe_type	alsa/seq.h	643;"	d
snd_seq_ev_is_tick	alsa/seq.h	691;"	d
snd_seq_ev_is_user_type	alsa/seq.h	649;"	d
snd_seq_ev_is_variable	alsa/seq.h	681;"	d
snd_seq_ev_is_variable_type	alsa/seq.h	658;"	d
snd_seq_ev_is_varusr	alsa/seq.h	684;"	d
snd_seq_ev_is_varusr_type	alsa/seq.h	661;"	d
snd_seq_ev_length_type	alsa/seq.h	675;"	d
snd_seq_ev_timemode_type	alsa/seq.h	698;"	d
snd_seq_ev_timestamp_type	alsa/seq.h	688;"	d
snd_seq_port_info_alloca	alsa/seq.h	245;"	d
snd_seq_port_info_t	alsa/seq.h	/^typedef struct _snd_seq_port_info snd_seq_port_info_t;$/;"	t	typeref:struct:_snd_seq_port_info
snd_seq_port_subscribe_alloca	alsa/seq.h	303;"	d
snd_seq_port_subscribe_t	alsa/seq.h	/^typedef struct _snd_seq_port_subscribe snd_seq_port_subscribe_t;$/;"	t	typeref:struct:_snd_seq_port_subscribe
snd_seq_query_subs_type_t	alsa/seq.h	/^} snd_seq_query_subs_type_t;$/;"	t	typeref:enum:__anon79
snd_seq_query_subscribe_alloca	alsa/seq.h	341;"	d
snd_seq_query_subscribe_t	alsa/seq.h	/^typedef struct _snd_seq_query_subscribe snd_seq_query_subscribe_t;$/;"	t	typeref:struct:_snd_seq_query_subscribe
snd_seq_queue_info_alloca	alsa/seq.h	391;"	d
snd_seq_queue_info_t	alsa/seq.h	/^typedef struct _snd_seq_queue_info snd_seq_queue_info_t;$/;"	t	typeref:struct:_snd_seq_queue_info
snd_seq_queue_status_alloca	alsa/seq.h	423;"	d
snd_seq_queue_status_t	alsa/seq.h	/^typedef struct _snd_seq_queue_status snd_seq_queue_status_t;$/;"	t	typeref:struct:_snd_seq_queue_status
snd_seq_queue_tempo_alloca	alsa/seq.h	441;"	d
snd_seq_queue_tempo_t	alsa/seq.h	/^typedef struct _snd_seq_queue_tempo snd_seq_queue_tempo_t;$/;"	t	typeref:struct:_snd_seq_queue_tempo
snd_seq_queue_timer_alloca	alsa/seq.h	472;"	d
snd_seq_queue_timer_t	alsa/seq.h	/^typedef struct _snd_seq_queue_timer snd_seq_queue_timer_t;$/;"	t	typeref:struct:_snd_seq_queue_timer
snd_seq_queue_timer_type_t	alsa/seq.h	/^} snd_seq_queue_timer_type_t;$/;"	t	typeref:enum:__anon80
snd_seq_remove_events_alloca	alsa/seq.h	531;"	d
snd_seq_remove_events_t	alsa/seq.h	/^typedef struct _snd_seq_remove_events snd_seq_remove_events_t;$/;"	t	typeref:struct:_snd_seq_remove_events
snd_seq_system_info_alloca	alsa/seq.h	110;"	d
snd_seq_system_info_t	alsa/seq.h	/^typedef struct _snd_seq_system_info snd_seq_system_info_t;$/;"	t	typeref:struct:_snd_seq_system_info
snd_seq_t	alsa/seq.h	/^typedef struct _snd_seq snd_seq_t;$/;"	t	typeref:struct:_snd_seq
snd_seq_type_check	alsa/seq.h	621;"	d
snd_seq_type_t	alsa/seq.h	/^} snd_seq_type_t;$/;"	t	typeref:enum:_snd_seq_type
SND_SEQ_EVENT_BOUNCE	alsa/seq_event.h	/^	SND_SEQ_EVENT_BOUNCE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CHANPRESS	alsa/seq_event.h	/^	SND_SEQ_EVENT_CHANPRESS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLIENT_CHANGE	alsa/seq_event.h	/^	SND_SEQ_EVENT_CLIENT_CHANGE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLIENT_EXIT	alsa/seq_event.h	/^	SND_SEQ_EVENT_CLIENT_EXIT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLIENT_START	alsa/seq_event.h	/^	SND_SEQ_EVENT_CLIENT_START = 60,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CLOCK	alsa/seq_event.h	/^	SND_SEQ_EVENT_CLOCK,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CONTINUE	alsa/seq_event.h	/^	SND_SEQ_EVENT_CONTINUE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CONTROL14	alsa/seq_event.h	/^	SND_SEQ_EVENT_CONTROL14,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_CONTROLLER	alsa/seq_event.h	/^	SND_SEQ_EVENT_CONTROLLER = 10,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_ECHO	alsa/seq_event.h	/^	SND_SEQ_EVENT_ECHO = 50,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_BEGIN	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_BEGIN = 100,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_CHANGE	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_CHANGE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_CLUSTER	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_CLUSTER,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_CLUSTER_GET	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_CLUSTER_GET,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_CLUSTER_RESULT	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_CLUSTER_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_END	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_END,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_FINFO	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_FINFO,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_FINFO_RESULT	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_FINFO_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_FREE	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_FREE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_GET	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_GET,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_GET_RESULT	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_GET_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_INFO	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_INFO,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_INFO_RESULT	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_INFO_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_LIST	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_LIST,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_LIST_RESULT	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_LIST_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_PUT	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_PUT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_RESET	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_RESET,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_STATUS	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_STATUS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_INSTR_STATUS_RESULT	alsa/seq_event.h	/^	SND_SEQ_EVENT_INSTR_STATUS_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_KEYPRESS	alsa/seq_event.h	/^	SND_SEQ_EVENT_KEYPRESS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_KEYSIGN	alsa/seq_event.h	/^	SND_SEQ_EVENT_KEYSIGN,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_LENGTH_FIXED	alsa/seq_event.h	277;"	d
SND_SEQ_EVENT_LENGTH_MASK	alsa/seq_event.h	280;"	d
SND_SEQ_EVENT_LENGTH_VARIABLE	alsa/seq_event.h	278;"	d
SND_SEQ_EVENT_LENGTH_VARUSR	alsa/seq_event.h	279;"	d
SND_SEQ_EVENT_NONE	alsa/seq_event.h	/^	SND_SEQ_EVENT_NONE = 255$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NONREGPARAM	alsa/seq_event.h	/^	SND_SEQ_EVENT_NONREGPARAM,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NOTE	alsa/seq_event.h	/^	SND_SEQ_EVENT_NOTE = 5,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NOTEOFF	alsa/seq_event.h	/^	SND_SEQ_EVENT_NOTEOFF,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_NOTEON	alsa/seq_event.h	/^	SND_SEQ_EVENT_NOTEON,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_OSS	alsa/seq_event.h	/^	SND_SEQ_EVENT_OSS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PGMCHANGE	alsa/seq_event.h	/^	SND_SEQ_EVENT_PGMCHANGE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PITCHBEND	alsa/seq_event.h	/^	SND_SEQ_EVENT_PITCHBEND,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_CHANGE	alsa/seq_event.h	/^	SND_SEQ_EVENT_PORT_CHANGE,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_EXIT	alsa/seq_event.h	/^	SND_SEQ_EVENT_PORT_EXIT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_START	alsa/seq_event.h	/^	SND_SEQ_EVENT_PORT_START,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_SUBSCRIBED	alsa/seq_event.h	/^	SND_SEQ_EVENT_PORT_SUBSCRIBED,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_PORT_UNSUBSCRIBED	alsa/seq_event.h	/^	SND_SEQ_EVENT_PORT_UNSUBSCRIBED,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_QFRAME	alsa/seq_event.h	/^	SND_SEQ_EVENT_QFRAME,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_QUEUE_SKEW	alsa/seq_event.h	/^	SND_SEQ_EVENT_QUEUE_SKEW,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_REGPARAM	alsa/seq_event.h	/^	SND_SEQ_EVENT_REGPARAM,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_RESET	alsa/seq_event.h	/^	SND_SEQ_EVENT_RESET,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_RESULT	alsa/seq_event.h	/^	SND_SEQ_EVENT_RESULT,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE = 70,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_CLUSTER	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_CLUSTER,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_FREQ	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_FREQ,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_LOOP	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_LOOP,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_POSITION	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_POSITION,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_PRIVATE1	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_PRIVATE1,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_START	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_START,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_STOP	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_STOP,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SAMPLE_VOLUME	alsa/seq_event.h	/^	SND_SEQ_EVENT_SAMPLE_VOLUME,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SENSING	alsa/seq_event.h	/^	SND_SEQ_EVENT_SENSING,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SETPOS_TICK	alsa/seq_event.h	/^	SND_SEQ_EVENT_SETPOS_TICK,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SETPOS_TIME	alsa/seq_event.h	/^	SND_SEQ_EVENT_SETPOS_TIME,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SONGPOS	alsa/seq_event.h	/^	SND_SEQ_EVENT_SONGPOS = 20,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SONGSEL	alsa/seq_event.h	/^	SND_SEQ_EVENT_SONGSEL,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_START	alsa/seq_event.h	/^	SND_SEQ_EVENT_START = 30,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_STOP	alsa/seq_event.h	/^	SND_SEQ_EVENT_STOP,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SYNC_POS	alsa/seq_event.h	/^	SND_SEQ_EVENT_SYNC_POS,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SYSEX	alsa/seq_event.h	/^	SND_SEQ_EVENT_SYSEX = 130,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_SYSTEM	alsa/seq_event.h	/^	SND_SEQ_EVENT_SYSTEM = 0,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TEMPO	alsa/seq_event.h	/^	SND_SEQ_EVENT_TEMPO,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TICK	alsa/seq_event.h	/^	SND_SEQ_EVENT_TICK,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TIMESIGN	alsa/seq_event.h	/^	SND_SEQ_EVENT_TIMESIGN,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_TUNE_REQUEST	alsa/seq_event.h	/^	SND_SEQ_EVENT_TUNE_REQUEST = 40,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR0	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR0 = 90,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR1	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR1,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR2	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR2,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR3	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR3,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR4	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR4,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR5	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR5,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR6	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR6,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR7	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR7,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR8	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR8,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR9	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR9,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR0	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR0 = 135,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR1	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR1,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR2	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR2,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR3	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR3,$/;"	e	enum:snd_seq_event_type
SND_SEQ_EVENT_USR_VAR4	alsa/seq_event.h	/^	SND_SEQ_EVENT_USR_VAR4,$/;"	e	enum:snd_seq_event_type
SND_SEQ_PRIORITY_HIGH	alsa/seq_event.h	283;"	d
SND_SEQ_PRIORITY_MASK	alsa/seq_event.h	284;"	d
SND_SEQ_PRIORITY_NORMAL	alsa/seq_event.h	282;"	d
SND_SEQ_SAMPLE_STOP_IMMEDIATELY	alsa/seq_event.h	/^	SND_SEQ_SAMPLE_STOP_IMMEDIATELY = 0,	\/**< terminate playing immediately *\/$/;"	e	enum:snd_seq_stop_mode
SND_SEQ_SAMPLE_STOP_LOOP	alsa/seq_event.h	/^	SND_SEQ_SAMPLE_STOP_LOOP = 2		\/**< terminate loop and finish wave *\/$/;"	e	enum:snd_seq_stop_mode
SND_SEQ_SAMPLE_STOP_VENVELOPE	alsa/seq_event.h	/^	SND_SEQ_SAMPLE_STOP_VENVELOPE = 1,	\/**< finish volume envelope *\/$/;"	e	enum:snd_seq_stop_mode
SND_SEQ_TIME_MODE_ABS	alsa/seq_event.h	273;"	d
SND_SEQ_TIME_MODE_MASK	alsa/seq_event.h	275;"	d
SND_SEQ_TIME_MODE_REL	alsa/seq_event.h	274;"	d
SND_SEQ_TIME_STAMP_MASK	alsa/seq_event.h	271;"	d
SND_SEQ_TIME_STAMP_REAL	alsa/seq_event.h	270;"	d
SND_SEQ_TIME_STAMP_TICK	alsa/seq_event.h	269;"	d
__ALSA_SEQ_EVENT_H	alsa/seq_event.h	29;"	d
addr	alsa/seq_event.h	/^		snd_seq_addr_t addr;		\/**< address *\/$/;"	m	union:snd_seq_event::__anon95
bank	alsa/seq_event.h	/^	unsigned short bank;	\/**< instrument bank id *\/$/;"	m	struct:snd_seq_instr
bank	alsa/seq_event.h	/^	unsigned short bank;	\/**< sample bank id *\/$/;"	m	struct:snd_seq_ev_sample
base	alsa/seq_event.h	/^	unsigned int base;	\/**< skew base *\/$/;"	m	struct:snd_seq_queue_skew
channel	alsa/seq_event.h	/^	unsigned char channel;		\/**< channel *\/$/;"	m	struct:snd_seq_ev_sample_control
channel	alsa/seq_event.h	/^	unsigned char channel;		\/**< channel number *\/$/;"	m	struct:snd_seq_ev_ctrl
channel	alsa/seq_event.h	/^	unsigned char channel;		\/**< channel number *\/$/;"	m	struct:snd_seq_ev_note
client	alsa/seq_event.h	/^	unsigned char client;	\/**< Client id *\/$/;"	m	struct:snd_seq_addr
cluster	alsa/seq_event.h	/^		snd_seq_ev_cluster_t cluster;	\/**< cluster number *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
cluster	alsa/seq_event.h	/^	snd_seq_instr_cluster_t cluster;	\/**< cluster id *\/$/;"	m	struct:snd_seq_ev_cluster
cluster	alsa/seq_event.h	/^	snd_seq_instr_cluster_t cluster;	\/**< cluster id *\/$/;"	m	struct:snd_seq_instr
connect	alsa/seq_event.h	/^		snd_seq_connect_t connect;	\/**< connect information *\/$/;"	m	union:snd_seq_event::__anon95
control	alsa/seq_event.h	/^		snd_seq_ev_ctrl_t control;	\/**< MIDI control information *\/$/;"	m	union:snd_seq_event::__anon95
d	alsa/seq_event.h	/^	unsigned char d[12];		\/**< 8 bit value *\/$/;"	m	struct:snd_seq_ev_raw8
d	alsa/seq_event.h	/^	unsigned int d[3];		\/**< 32 bit value *\/$/;"	m	struct:snd_seq_ev_raw32
d32	alsa/seq_event.h	/^		unsigned int d32[2];		\/**< any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon94
d8	alsa/seq_event.h	/^		unsigned char d8[8];		\/**< any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon94
data	alsa/seq_event.h	/^	} data;				\/**< event data... *\/$/;"	m	struct:snd_seq_event	typeref:union:snd_seq_event::__anon95
dest	alsa/seq_event.h	/^	snd_seq_addr_t dest;		\/**< destination address *\/$/;"	m	struct:snd_seq_event
dest	alsa/seq_event.h	/^	snd_seq_addr_t dest;	\/**< destination address *\/$/;"	m	struct:snd_seq_connect
du	alsa/seq_event.h	/^	signed short du;	\/**< down-up balance; range: 0-16383 *\/$/;"	m	struct:snd_seq_ev_volume
duration	alsa/seq_event.h	/^	unsigned int duration;		\/**< duration until note-off; only for #SND_SEQ_EVENT_NOTE *\/$/;"	m	struct:snd_seq_ev_note
end	alsa/seq_event.h	/^	unsigned int end;	\/**< loop end (in samples) * 16 *\/$/;"	m	struct:snd_seq_ev_loop
event	alsa/seq_event.h	/^	int event;		\/**< processed event type *\/$/;"	m	struct:snd_seq_result
ext	alsa/seq_event.h	/^		snd_seq_ev_ext_t ext;		\/**< external data *\/$/;"	m	union:snd_seq_event::__anon95
flags	alsa/seq_event.h	/^	unsigned char flags;		\/**< event flags *\/$/;"	m	struct:snd_seq_event
fr	alsa/seq_event.h	/^	signed short fr;	\/**< front-rear balance; range: 0-16383 *\/$/;"	m	struct:snd_seq_ev_volume
frequency	alsa/seq_event.h	/^		snd_seq_frequency_t frequency;	\/**< frequency *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
instr_begin	alsa/seq_event.h	/^		snd_seq_ev_instr_begin_t instr_begin; \/**< instrument *\/$/;"	m	union:snd_seq_event::__anon95
len	alsa/seq_event.h	/^	unsigned int len;		\/**< length of data *\/$/;"	m	struct:snd_seq_ev_ext
loop	alsa/seq_event.h	/^		snd_seq_ev_loop_t loop;		\/**< loop control *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
lr	alsa/seq_event.h	/^	signed short lr;	\/**< left-right balance; range: 0-16383 *\/$/;"	m	struct:snd_seq_ev_volume
note	alsa/seq_event.h	/^		snd_seq_ev_note_t note;		\/**< note information *\/$/;"	m	union:snd_seq_event::__anon95
note	alsa/seq_event.h	/^	unsigned char note;		\/**< note *\/$/;"	m	struct:snd_seq_ev_note
off_velocity	alsa/seq_event.h	/^	unsigned char off_velocity;	\/**< note-off velocity; only for #SND_SEQ_EVENT_NOTE *\/$/;"	m	struct:snd_seq_ev_note
param	alsa/seq_event.h	/^	unsigned int param;		\/**< control parameter *\/$/;"	m	struct:snd_seq_ev_ctrl
param	alsa/seq_event.h	/^	} param;				\/**< data value union *\/$/;"	m	struct:snd_seq_ev_queue_control	typeref:union:snd_seq_ev_queue_control::__anon94
param	alsa/seq_event.h	/^	} param;		\/**< control parameters *\/$/;"	m	struct:snd_seq_ev_sample_control	typeref:union:snd_seq_ev_sample_control::__anon93
port	alsa/seq_event.h	/^	unsigned char port;	\/**< Port id *\/$/;"	m	struct:snd_seq_addr
position	alsa/seq_event.h	/^		snd_seq_position_t position;	\/**< position *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
position	alsa/seq_event.h	/^		unsigned int position;		\/**< sync position *\/$/;"	m	union:snd_seq_ev_queue_control::__anon94
prg	alsa/seq_event.h	/^	unsigned short prg;	\/**< instrument program id *\/$/;"	m	struct:snd_seq_instr
prg	alsa/seq_event.h	/^	unsigned short prg;	\/**< sample program id *\/$/;"	m	struct:snd_seq_ev_sample
ptr	alsa/seq_event.h	/^	void *ptr;			\/**< pointer to data (note: can be 64-bit) *\/$/;"	m	struct:snd_seq_ev_ext
queue	alsa/seq_event.h	/^		snd_seq_ev_queue_control_t queue; \/**< queue control *\/$/;"	m	union:snd_seq_event::__anon95
queue	alsa/seq_event.h	/^	unsigned char queue;			\/**< affected queue *\/$/;"	m	struct:snd_seq_ev_queue_control
queue	alsa/seq_event.h	/^	unsigned char queue;		\/**< schedule queue *\/$/;"	m	struct:snd_seq_event
raw32	alsa/seq_event.h	/^		snd_seq_ev_raw32_t raw32;	\/**< raw32 data *\/$/;"	m	union:snd_seq_event::__anon95
raw8	alsa/seq_event.h	/^		snd_seq_ev_raw8_t raw8;		\/**< raw8 data *\/$/;"	m	union:snd_seq_event::__anon95
raw8	alsa/seq_event.h	/^		unsigned char raw8[8];		\/**< raw 8-bit *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
result	alsa/seq_event.h	/^		snd_seq_result_t result;	\/**< operation result code *\/$/;"	m	union:snd_seq_event::__anon95
result	alsa/seq_event.h	/^	int result;		\/**< status *\/$/;"	m	struct:snd_seq_result
sample	alsa/seq_event.h	/^		snd_seq_ev_sample_control_t sample; \/**< sample control *\/$/;"	m	union:snd_seq_event::__anon95
sample	alsa/seq_event.h	/^		snd_seq_ev_sample_t sample;	\/**< sample number *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
sender	alsa/seq_event.h	/^	snd_seq_addr_t sender;	\/**< sender address *\/$/;"	m	struct:snd_seq_connect
skew	alsa/seq_event.h	/^		snd_seq_queue_skew_t skew;	\/**< queue skew *\/$/;"	m	union:snd_seq_ev_queue_control::__anon94
snd_seq_addr	alsa/seq_event.h	/^typedef struct snd_seq_addr {$/;"	s
snd_seq_addr_t	alsa/seq_event.h	/^} snd_seq_addr_t;$/;"	t	typeref:struct:snd_seq_addr
snd_seq_connect	alsa/seq_event.h	/^typedef struct snd_seq_connect {$/;"	s
snd_seq_connect_t	alsa/seq_event.h	/^} snd_seq_connect_t;$/;"	t	typeref:struct:snd_seq_connect
snd_seq_ev_cluster	alsa/seq_event.h	/^typedef struct snd_seq_ev_cluster {$/;"	s
snd_seq_ev_cluster_t	alsa/seq_event.h	/^} snd_seq_ev_cluster_t;$/;"	t	typeref:struct:snd_seq_ev_cluster
snd_seq_ev_ctrl	alsa/seq_event.h	/^typedef struct snd_seq_ev_ctrl {$/;"	s
snd_seq_ev_ctrl_t	alsa/seq_event.h	/^} snd_seq_ev_ctrl_t;$/;"	t	typeref:struct:snd_seq_ev_ctrl
snd_seq_ev_ext	alsa/seq_event.h	/^typedef struct snd_seq_ev_ext {$/;"	s
snd_seq_ev_ext_t	alsa/seq_event.h	/^} __attribute__((packed)) snd_seq_ev_ext_t;$/;"	t	typeref:struct:snd_seq_ev_ext
snd_seq_ev_instr_begin	alsa/seq_event.h	/^typedef struct snd_seq_ev_instr_begin {$/;"	s
snd_seq_ev_instr_begin_t	alsa/seq_event.h	/^} snd_seq_ev_instr_begin_t;$/;"	t	typeref:struct:snd_seq_ev_instr_begin
snd_seq_ev_loop	alsa/seq_event.h	/^typedef struct snd_seq_ev_loop {$/;"	s
snd_seq_ev_loop_t	alsa/seq_event.h	/^} snd_seq_ev_loop_t;$/;"	t	typeref:struct:snd_seq_ev_loop
snd_seq_ev_note	alsa/seq_event.h	/^typedef struct snd_seq_ev_note {$/;"	s
snd_seq_ev_note_t	alsa/seq_event.h	/^} snd_seq_ev_note_t;$/;"	t	typeref:struct:snd_seq_ev_note
snd_seq_ev_queue_control	alsa/seq_event.h	/^typedef struct snd_seq_ev_queue_control {$/;"	s
snd_seq_ev_queue_control_t	alsa/seq_event.h	/^} snd_seq_ev_queue_control_t;$/;"	t	typeref:struct:snd_seq_ev_queue_control
snd_seq_ev_raw32	alsa/seq_event.h	/^typedef struct snd_seq_ev_raw32 {$/;"	s
snd_seq_ev_raw32_t	alsa/seq_event.h	/^} snd_seq_ev_raw32_t;$/;"	t	typeref:struct:snd_seq_ev_raw32
snd_seq_ev_raw8	alsa/seq_event.h	/^typedef struct snd_seq_ev_raw8 {$/;"	s
snd_seq_ev_raw8_t	alsa/seq_event.h	/^} snd_seq_ev_raw8_t;$/;"	t	typeref:struct:snd_seq_ev_raw8
snd_seq_ev_sample	alsa/seq_event.h	/^typedef struct snd_seq_ev_sample {$/;"	s
snd_seq_ev_sample_control	alsa/seq_event.h	/^typedef struct snd_seq_ev_sample_control {$/;"	s
snd_seq_ev_sample_control_t	alsa/seq_event.h	/^} snd_seq_ev_sample_control_t;$/;"	t	typeref:struct:snd_seq_ev_sample_control
snd_seq_ev_sample_t	alsa/seq_event.h	/^} snd_seq_ev_sample_t;$/;"	t	typeref:struct:snd_seq_ev_sample
snd_seq_ev_volume	alsa/seq_event.h	/^typedef struct snd_seq_ev_volume {$/;"	s
snd_seq_ev_volume_t	alsa/seq_event.h	/^} snd_seq_ev_volume_t;$/;"	t	typeref:struct:snd_seq_ev_volume
snd_seq_event	alsa/seq_event.h	/^typedef struct snd_seq_event {$/;"	s
snd_seq_event_t	alsa/seq_event.h	/^} snd_seq_event_t;$/;"	t	typeref:struct:snd_seq_event
snd_seq_event_type	alsa/seq_event.h	/^enum snd_seq_event_type {$/;"	g
snd_seq_event_type_t	alsa/seq_event.h	/^typedef unsigned char snd_seq_event_type_t;$/;"	t
snd_seq_frequency_t	alsa/seq_event.h	/^typedef int snd_seq_frequency_t; \/**< playback frequency in HZ * 16 *\/$/;"	t
snd_seq_instr	alsa/seq_event.h	/^typedef struct snd_seq_instr {$/;"	s
snd_seq_instr_cluster_t	alsa/seq_event.h	/^typedef unsigned int snd_seq_instr_cluster_t;$/;"	t
snd_seq_instr_t	alsa/seq_event.h	/^} snd_seq_instr_t;$/;"	t	typeref:struct:snd_seq_instr
snd_seq_position_t	alsa/seq_event.h	/^typedef unsigned int snd_seq_position_t; \/**< playback position (in samples) * 16 *\/$/;"	t
snd_seq_queue_skew	alsa/seq_event.h	/^typedef struct snd_seq_queue_skew {$/;"	s
snd_seq_queue_skew_t	alsa/seq_event.h	/^} snd_seq_queue_skew_t;$/;"	t	typeref:struct:snd_seq_queue_skew
snd_seq_real_time	alsa/seq_event.h	/^typedef struct snd_seq_real_time {$/;"	s
snd_seq_real_time_t	alsa/seq_event.h	/^} snd_seq_real_time_t;$/;"	t	typeref:struct:snd_seq_real_time
snd_seq_result	alsa/seq_event.h	/^typedef struct snd_seq_result {$/;"	s
snd_seq_result_t	alsa/seq_event.h	/^} snd_seq_result_t;$/;"	t	typeref:struct:snd_seq_result
snd_seq_stop_mode	alsa/seq_event.h	/^typedef enum snd_seq_stop_mode {$/;"	g
snd_seq_stop_mode_t	alsa/seq_event.h	/^} snd_seq_stop_mode_t;$/;"	t	typeref:enum:snd_seq_stop_mode
snd_seq_tick_time_t	alsa/seq_event.h	/^typedef unsigned int snd_seq_tick_time_t;$/;"	t
snd_seq_timestamp	alsa/seq_event.h	/^typedef union snd_seq_timestamp {$/;"	u
snd_seq_timestamp_t	alsa/seq_event.h	/^} snd_seq_timestamp_t;$/;"	t	typeref:union:snd_seq_timestamp
source	alsa/seq_event.h	/^	snd_seq_addr_t source;		\/**< source address *\/$/;"	m	struct:snd_seq_event
start	alsa/seq_event.h	/^	unsigned int start;	\/**< loop start (in samples) * 16 *\/$/;"	m	struct:snd_seq_ev_loop
std	alsa/seq_event.h	/^	unsigned int std;	\/**< instrument standard id; the upper byte means a private instrument (owner - client id) *\/$/;"	m	struct:snd_seq_instr
std	alsa/seq_event.h	/^	unsigned int std;	\/**< sample standard id *\/$/;"	m	struct:snd_seq_ev_sample
stop_mode	alsa/seq_event.h	/^		snd_seq_stop_mode_t stop_mode;	\/**< stop mode *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
tag	alsa/seq_event.h	/^	unsigned char tag;		\/**< tag *\/$/;"	m	struct:snd_seq_event
tick	alsa/seq_event.h	/^	snd_seq_tick_time_t tick;	\/**< tick-time *\/$/;"	m	union:snd_seq_timestamp
time	alsa/seq_event.h	/^		snd_seq_timestamp_t time;	\/**< time *\/$/;"	m	union:snd_seq_ev_queue_control::__anon94
time	alsa/seq_event.h	/^		snd_seq_timestamp_t time;	\/**< timestamp *\/$/;"	m	union:snd_seq_event::__anon95
time	alsa/seq_event.h	/^	snd_seq_timestamp_t time;	\/**< schedule time *\/$/;"	m	struct:snd_seq_event
time	alsa/seq_event.h	/^	struct snd_seq_real_time time;	\/**< real-time *\/$/;"	m	union:snd_seq_timestamp	typeref:struct:snd_seq_timestamp::snd_seq_real_time
timeout	alsa/seq_event.h	/^	int timeout;		\/**< zero = forever, otherwise timeout in ms *\/$/;"	m	struct:snd_seq_ev_instr_begin
tv_nsec	alsa/seq_event.h	/^	unsigned int tv_nsec;		\/**< nanoseconds *\/$/;"	m	struct:snd_seq_real_time
tv_sec	alsa/seq_event.h	/^	unsigned int tv_sec;		\/**< seconds *\/$/;"	m	struct:snd_seq_real_time
type	alsa/seq_event.h	/^	snd_seq_event_type_t type;	\/**< event type *\/$/;"	m	struct:snd_seq_event
unused	alsa/seq_event.h	/^	unsigned char unused[3];		\/**< reserved *\/$/;"	m	struct:snd_seq_ev_queue_control
unused	alsa/seq_event.h	/^	unsigned char unused[3];	\/**< reserved *\/$/;"	m	struct:snd_seq_ev_ctrl
unused	alsa/seq_event.h	/^	unsigned char unused[3];	\/**< reserved *\/$/;"	m	struct:snd_seq_ev_sample_control
value	alsa/seq_event.h	/^		signed int value;		\/**< affected value (e.g. tempo) *\/$/;"	m	union:snd_seq_ev_queue_control::__anon94
value	alsa/seq_event.h	/^	signed int value;		\/**< control value *\/$/;"	m	struct:snd_seq_ev_ctrl
value	alsa/seq_event.h	/^	unsigned int value;	\/**< skew value *\/$/;"	m	struct:snd_seq_queue_skew
velocity	alsa/seq_event.h	/^	unsigned char velocity;		\/**< velocity *\/$/;"	m	struct:snd_seq_ev_note
volume	alsa/seq_event.h	/^		snd_seq_ev_volume_t volume;	\/**< volume *\/$/;"	m	union:snd_seq_ev_sample_control::__anon93
volume	alsa/seq_event.h	/^	signed short volume;	\/**< range: 0-16383 *\/$/;"	m	struct:snd_seq_ev_volume
__ALSA_SEQ_MIDI_EVENT_H	alsa/seq_midi_event.h	29;"	d
snd_midi_event_t	alsa/seq_midi_event.h	/^typedef struct snd_midi_event snd_midi_event_t;$/;"	t	typeref:struct:snd_midi_event
__ALSA_SEQMID_H	alsa/seqmid.h	29;"	d
snd_seq_change_queue_tempo	alsa/seqmid.h	324;"	d
snd_seq_continue_queue	alsa/seqmid.h	314;"	d
snd_seq_ev_clear	alsa/seqmid.h	48;"	d
snd_seq_ev_schedule_real	alsa/seqmid.h	151;"	d
snd_seq_ev_schedule_tick	alsa/seqmid.h	132;"	d
snd_seq_ev_set_broadcast	alsa/seqmid.h	94;"	d
snd_seq_ev_set_chanpress	alsa/seqmid.h	465;"	d
snd_seq_ev_set_controller	alsa/seqmid.h	428;"	d
snd_seq_ev_set_dest	alsa/seqmid.h	71;"	d
snd_seq_ev_set_direct	alsa/seqmid.h	117;"	d
snd_seq_ev_set_fixed	alsa/seqmid.h	175;"	d
snd_seq_ev_set_keypress	alsa/seqmid.h	414;"	d
snd_seq_ev_set_note	alsa/seqmid.h	371;"	d
snd_seq_ev_set_noteoff	alsa/seqmid.h	400;"	d
snd_seq_ev_set_noteon	alsa/seqmid.h	386;"	d
snd_seq_ev_set_pgmchange	alsa/seqmid.h	441;"	d
snd_seq_ev_set_pitchbend	alsa/seqmid.h	453;"	d
snd_seq_ev_set_priority	alsa/seqmid.h	163;"	d
snd_seq_ev_set_queue_continue	alsa/seqmid.h	251;"	d
snd_seq_ev_set_queue_control	alsa/seqmid.h	218;"	d
snd_seq_ev_set_queue_pos_real	alsa/seqmid.h	269;"	d
snd_seq_ev_set_queue_pos_tick	alsa/seqmid.h	281;"	d
snd_seq_ev_set_queue_start	alsa/seqmid.h	231;"	d
snd_seq_ev_set_queue_stop	alsa/seqmid.h	241;"	d
snd_seq_ev_set_queue_tempo	alsa/seqmid.h	260;"	d
snd_seq_ev_set_source	alsa/seqmid.h	105;"	d
snd_seq_ev_set_subs	alsa/seqmid.h	82;"	d
snd_seq_ev_set_sysex	alsa/seqmid.h	479;"	d
snd_seq_ev_set_tag	alsa/seqmid.h	58;"	d
snd_seq_ev_set_variable	alsa/seqmid.h	189;"	d
snd_seq_ev_set_varusr	alsa/seqmid.h	205;"	d
snd_seq_start_queue	alsa/seqmid.h	296;"	d
snd_seq_stop_queue	alsa/seqmid.h	305;"	d
FM_PATCH_OPL2	alsa/sound/ainstr_fm.h	56;"	d
FM_PATCH_OPL3	alsa/sound/ainstr_fm.h	57;"	d
FM_SHARE_FILE	alsa/sound/ainstr_fm.h	38;"	d
FM_STRU_INSTR	alsa/sound/ainstr_fm.h	87;"	d
__KERNEL__	alsa/sound/ainstr_fm.h	28;"	d
__KERNEL__	alsa/sound/ainstr_fm.h	31;"	d
__SOUND_AINSTR_FM_H	alsa/sound/ainstr_fm.h	25;"	d
am_vib	alsa/sound/ainstr_fm.h	/^	__u8 am_vib;$/;"	m	struct:fm_xoperator
am_vib	alsa/sound/ainstr_fm.h	/^	unsigned char am_vib;$/;"	m	struct:fm_operator
attack_decay	alsa/sound/ainstr_fm.h	/^	__u8 attack_decay;$/;"	m	struct:fm_xoperator
attack_decay	alsa/sound/ainstr_fm.h	/^	unsigned char attack_decay;$/;"	m	struct:fm_operator
chorus_spread	alsa/sound/ainstr_fm.h	/^	__u8 chorus_spread;$/;"	m	struct:fm_xinstrument
chorus_spread	alsa/sound/ainstr_fm.h	/^	unsigned char chorus_spread;$/;"	m	struct:__anon64
echo_atten	alsa/sound/ainstr_fm.h	/^	__u8 echo_atten;$/;"	m	struct:fm_xinstrument
echo_atten	alsa/sound/ainstr_fm.h	/^	unsigned char echo_atten;$/;"	m	struct:__anon64
echo_delay	alsa/sound/ainstr_fm.h	/^	__u8 echo_delay;$/;"	m	struct:fm_xinstrument
echo_delay	alsa/sound/ainstr_fm.h	/^	unsigned char echo_delay;$/;"	m	struct:__anon64
feedback_connection	alsa/sound/ainstr_fm.h	/^	__u8 feedback_connection[2];$/;"	m	struct:fm_xinstrument
feedback_connection	alsa/sound/ainstr_fm.h	/^	unsigned char feedback_connection[2];$/;"	m	struct:__anon64
fix_dur	alsa/sound/ainstr_fm.h	/^	__u8 fix_dur;$/;"	m	struct:fm_xinstrument
fix_dur	alsa/sound/ainstr_fm.h	/^	unsigned char fix_dur;$/;"	m	struct:__anon64
fix_key	alsa/sound/ainstr_fm.h	/^	__u8 fix_key;$/;"	m	struct:fm_xinstrument
fix_key	alsa/sound/ainstr_fm.h	/^	unsigned char fix_key;$/;"	m	struct:__anon64
fm_instrument_t	alsa/sound/ainstr_fm.h	/^} fm_instrument_t;$/;"	t	typeref:struct:__anon64
fm_operator	alsa/sound/ainstr_fm.h	/^typedef struct fm_operator {$/;"	s
fm_operator_t	alsa/sound/ainstr_fm.h	/^} fm_operator_t;$/;"	t	typeref:struct:fm_operator
fm_xinstrument	alsa/sound/ainstr_fm.h	/^typedef struct fm_xinstrument {$/;"	s
fm_xinstrument_t	alsa/sound/ainstr_fm.h	/^} fm_xinstrument_t;$/;"	t	typeref:struct:fm_xinstrument
fm_xoperator	alsa/sound/ainstr_fm.h	/^typedef struct fm_xoperator {$/;"	s
fm_xoperator_t	alsa/sound/ainstr_fm.h	/^} fm_xoperator_t;$/;"	t	typeref:struct:fm_xoperator
ksl_level	alsa/sound/ainstr_fm.h	/^	__u8 ksl_level;$/;"	m	struct:fm_xoperator
ksl_level	alsa/sound/ainstr_fm.h	/^	unsigned char ksl_level;$/;"	m	struct:fm_operator
modes	alsa/sound/ainstr_fm.h	/^	__u8 modes;$/;"	m	struct:fm_xinstrument
modes	alsa/sound/ainstr_fm.h	/^	unsigned char modes;$/;"	m	struct:__anon64
op	alsa/sound/ainstr_fm.h	/^	fm_operator_t op[4];$/;"	m	struct:__anon64
op	alsa/sound/ainstr_fm.h	/^	fm_xoperator_t op[4];		\/* fm operators *\/$/;"	m	struct:fm_xinstrument
share_id	alsa/sound/ainstr_fm.h	/^	__u32 share_id[4];		\/* share id - zero = no sharing *\/$/;"	m	struct:fm_xinstrument
share_id	alsa/sound/ainstr_fm.h	/^	unsigned int share_id[4];	\/* share id - zero = no sharing *\/$/;"	m	struct:__anon64
stype	alsa/sound/ainstr_fm.h	/^	__u32 stype;			\/* structure type *\/$/;"	m	struct:fm_xinstrument
sustain_release	alsa/sound/ainstr_fm.h	/^	__u8 sustain_release;$/;"	m	struct:fm_xoperator
sustain_release	alsa/sound/ainstr_fm.h	/^	unsigned char sustain_release;$/;"	m	struct:fm_operator
trnsps	alsa/sound/ainstr_fm.h	/^	__u8 trnsps;$/;"	m	struct:fm_xinstrument
trnsps	alsa/sound/ainstr_fm.h	/^	unsigned char trnsps;$/;"	m	struct:__anon64
type	alsa/sound/ainstr_fm.h	/^	__u8 type;			\/* instrument type *\/$/;"	m	struct:fm_xinstrument
type	alsa/sound/ainstr_fm.h	/^	unsigned char type;		\/* instrument type *\/$/;"	m	struct:__anon64
wave_select	alsa/sound/ainstr_fm.h	/^	__u8 wave_select;$/;"	m	struct:fm_xoperator
wave_select	alsa/sound/ainstr_fm.h	/^	unsigned char wave_select;$/;"	m	struct:fm_operator
GF1_INFO_ENVELOPE	alsa/sound/ainstr_gf1.h	190;"	d
GF1_INFO_TREMOLO	alsa/sound/ainstr_gf1.h	191;"	d
GF1_INFO_VIBRATO	alsa/sound/ainstr_gf1.h	192;"	d
GF1_SHARE_FILE	alsa/sound/ainstr_gf1.h	36;"	d
GF1_STRU_INSTR	alsa/sound/ainstr_gf1.h	132;"	d
GF1_STRU_WAVE	alsa/sound/ainstr_gf1.h	131;"	d
GF1_WAVE_16BIT	alsa/sound/ainstr_gf1.h	42;"	d
GF1_WAVE_BACKWARD	alsa/sound/ainstr_gf1.h	45;"	d
GF1_WAVE_BIDIR	alsa/sound/ainstr_gf1.h	47;"	d
GF1_WAVE_INVERT	alsa/sound/ainstr_gf1.h	44;"	d
GF1_WAVE_LOOP	alsa/sound/ainstr_gf1.h	46;"	d
GF1_WAVE_STEREO	alsa/sound/ainstr_gf1.h	48;"	d
GF1_WAVE_ULAW	alsa/sound/ainstr_gf1.h	49;"	d
GF1_WAVE_UNSIGNED	alsa/sound/ainstr_gf1.h	43;"	d
IWFFFF_EFFECT_CHORUS	alsa/sound/ainstr_gf1.h	103;"	d
IWFFFF_EFFECT_ECHO	alsa/sound/ainstr_gf1.h	104;"	d
IWFFFF_EFFECT_NONE	alsa/sound/ainstr_gf1.h	101;"	d
IWFFFF_EFFECT_REVERB	alsa/sound/ainstr_gf1.h	102;"	d
IWFFFF_EXCLUDE_MULTIPLE	alsa/sound/ainstr_gf1.h	99;"	d
IWFFFF_EXCLUDE_NONE	alsa/sound/ainstr_gf1.h	97;"	d
IWFFFF_EXCLUDE_SINGLE	alsa/sound/ainstr_gf1.h	98;"	d
__SOUND_AINSTR_GF1_H	alsa/sound/ainstr_gf1.h	25;"	d
address	alsa/sound/ainstr_gf1.h	/^	} address;$/;"	m	struct:gf1_wave	typeref:struct:gf1_wave::__anon61
balance	alsa/sound/ainstr_gf1.h	/^	__u8 balance;$/;"	m	struct:gf1_xwave
balance	alsa/sound/ainstr_gf1.h	/^	unsigned char balance;$/;"	m	struct:gf1_wave
effect1	alsa/sound/ainstr_gf1.h	/^	__u8 effect1;			\/* effect 1 *\/$/;"	m	struct:gf1_xinstrument
effect1	alsa/sound/ainstr_gf1.h	/^	unsigned char effect1;		\/* effect 1 *\/$/;"	m	struct:__anon62
effect1_depth	alsa/sound/ainstr_gf1.h	/^	__u8 effect1_depth;		\/* 0-127 *\/$/;"	m	struct:gf1_xinstrument
effect1_depth	alsa/sound/ainstr_gf1.h	/^	unsigned char effect1_depth;	\/* 0-127 *\/$/;"	m	struct:__anon62
effect2	alsa/sound/ainstr_gf1.h	/^	__u8 effect2;			\/* effect 2 *\/$/;"	m	struct:gf1_xinstrument
effect2	alsa/sound/ainstr_gf1.h	/^	unsigned char effect2;		\/* effect 2 *\/$/;"	m	struct:__anon62
effect2_depth	alsa/sound/ainstr_gf1.h	/^	__u8 effect2_depth;		\/* 0-127 *\/$/;"	m	struct:gf1_xinstrument
effect2_depth	alsa/sound/ainstr_gf1.h	/^	unsigned char effect2_depth;	\/* 0-127 *\/$/;"	m	struct:__anon62
envelope_offset	alsa/sound/ainstr_gf1.h	/^	__u8 envelope_offset[6];$/;"	m	struct:gf1_xwave
envelope_offset	alsa/sound/ainstr_gf1.h	/^	unsigned char envelope_offset[6];$/;"	m	struct:gf1_wave
envelope_rate	alsa/sound/ainstr_gf1.h	/^	__u8 envelope_rate[6];$/;"	m	struct:gf1_xwave
envelope_rate	alsa/sound/ainstr_gf1.h	/^	unsigned char envelope_rate[6];$/;"	m	struct:gf1_wave
exclusion	alsa/sound/ainstr_gf1.h	/^	__u16 exclusion;$/;"	m	struct:gf1_xinstrument
exclusion	alsa/sound/ainstr_gf1.h	/^	unsigned short exclusion;$/;"	m	struct:__anon62
exclusion_group	alsa/sound/ainstr_gf1.h	/^	__u16 exclusion_group;		\/* 0 - none, 1-65535 *\/$/;"	m	struct:gf1_xinstrument
exclusion_group	alsa/sound/ainstr_gf1.h	/^	unsigned short exclusion_group;	\/* 0 - none, 1-65535 *\/$/;"	m	struct:__anon62
features	alsa/sound/ainstr_gf1.h	/^	unsigned int features;		\/* supported features *\/$/;"	m	struct:gf1_info
flags	alsa/sound/ainstr_gf1.h	/^	__u8 flags;			\/* GF1 patch flags *\/$/;"	m	struct:gf1_xwave
flags	alsa/sound/ainstr_gf1.h	/^	unsigned char flags;		\/* GF1 patch flags *\/$/;"	m	struct:gf1_wave
flags	alsa/sound/ainstr_gf1.h	/^	unsigned char flags;		\/* supported wave flags *\/$/;"	m	struct:gf1_info
format	alsa/sound/ainstr_gf1.h	/^	__u32 format;			\/* wave format *\/$/;"	m	struct:gf1_xwave
format	alsa/sound/ainstr_gf1.h	/^	unsigned int format;		\/* wave format *\/$/;"	m	struct:gf1_wave
get_sample	alsa/sound/ainstr_gf1.h	/^	int (*get_sample)(void *private_data, gf1_wave_t *wave,$/;"	m	struct:__anon63
gf1_info	alsa/sound/ainstr_gf1.h	/^typedef struct gf1_info {$/;"	s
gf1_info_t	alsa/sound/ainstr_gf1.h	/^} gf1_info_t;$/;"	t	typeref:struct:gf1_info
gf1_instrument_t	alsa/sound/ainstr_gf1.h	/^} gf1_instrument_t;$/;"	t	typeref:struct:__anon62
gf1_wave	alsa/sound/ainstr_gf1.h	/^typedef struct gf1_wave {$/;"	s
gf1_wave_t	alsa/sound/ainstr_gf1.h	/^} gf1_wave_t;$/;"	t	typeref:struct:gf1_wave
gf1_xinstrument	alsa/sound/ainstr_gf1.h	/^typedef struct gf1_xinstrument {$/;"	s
gf1_xinstrument_t	alsa/sound/ainstr_gf1.h	/^} gf1_xinstrument_t;$/;"	t	typeref:struct:gf1_xinstrument
gf1_xwave	alsa/sound/ainstr_gf1.h	/^typedef struct gf1_xwave {$/;"	s
gf1_xwave_t	alsa/sound/ainstr_gf1.h	/^} gf1_xwave_t;$/;"	t	typeref:struct:gf1_xwave
high_frequency	alsa/sound/ainstr_gf1.h	/^	__u32 high_frequency;		\/* high frequency range *\/$/;"	m	struct:gf1_xwave
high_frequency	alsa/sound/ainstr_gf1.h	/^	unsigned int high_frequency;	\/* high frequency range *\/$/;"	m	struct:gf1_wave
info	alsa/sound/ainstr_gf1.h	/^	int (*info)(void *private_data, gf1_info_t *info);$/;"	m	struct:__anon63
kops	alsa/sound/ainstr_gf1.h	/^	snd_seq_kinstr_ops_t kops;$/;"	m	struct:__anon63
loop_end	alsa/sound/ainstr_gf1.h	/^	__u32 loop_end;			\/* loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:gf1_xwave
loop_end	alsa/sound/ainstr_gf1.h	/^	unsigned int loop_end;		\/* loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:gf1_wave
loop_repeat	alsa/sound/ainstr_gf1.h	/^	__u16 loop_repeat;		\/* loop repeat - 0 = forever *\/$/;"	m	struct:gf1_xwave
loop_repeat	alsa/sound/ainstr_gf1.h	/^	unsigned short loop_repeat;	\/* loop repeat - 0 = forever *\/$/;"	m	struct:gf1_wave
loop_start	alsa/sound/ainstr_gf1.h	/^	__u32 loop_start;		\/* bits loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:gf1_xwave
loop_start	alsa/sound/ainstr_gf1.h	/^	unsigned int loop_start;	\/* bits loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:gf1_wave
low_frequency	alsa/sound/ainstr_gf1.h	/^	__u32 low_frequency;		\/* low frequency range *\/$/;"	m	struct:gf1_xwave
low_frequency	alsa/sound/ainstr_gf1.h	/^	unsigned int low_frequency;	\/* low frequency range *\/$/;"	m	struct:gf1_wave
max16_len	alsa/sound/ainstr_gf1.h	/^	unsigned int max16_len;		\/* maximum 16-bit wave length *\/$/;"	m	struct:gf1_info
max8_len	alsa/sound/ainstr_gf1.h	/^	unsigned int max8_len;		\/* maximum 8-bit wave length *\/$/;"	m	struct:gf1_info
memory	alsa/sound/ainstr_gf1.h	/^		unsigned int memory;	\/* begin of waveform in onboard memory *\/$/;"	m	struct:gf1_wave::__anon61
next	alsa/sound/ainstr_gf1.h	/^	struct gf1_wave *next;$/;"	m	struct:gf1_wave	typeref:struct:gf1_wave::gf1_wave
notify	alsa/sound/ainstr_gf1.h	/^	void (*notify)(void *private_data, snd_seq_kinstr_t *instr, int what);$/;"	m	struct:__anon63
number	alsa/sound/ainstr_gf1.h	/^		unsigned int number;	\/* some other ID for this instrument *\/$/;"	m	struct:gf1_wave::__anon61
pad	alsa/sound/ainstr_gf1.h	/^	__u8 pad;$/;"	m	struct:gf1_xwave
pad	alsa/sound/ainstr_gf1.h	/^	unsigned char pad;$/;"	m	struct:gf1_wave
pad	alsa/sound/ainstr_gf1.h	/^	unsigned char pad[3];$/;"	m	struct:gf1_info
private_data	alsa/sound/ainstr_gf1.h	/^	void *private_data;$/;"	m	struct:__anon63
ptr	alsa/sound/ainstr_gf1.h	/^		unsigned char *ptr;	\/* pointer to waveform in system memory *\/$/;"	m	struct:gf1_wave::__anon61
put_sample	alsa/sound/ainstr_gf1.h	/^	int (*put_sample)(void *private_data, gf1_wave_t *wave,$/;"	m	struct:__anon63
remove_sample	alsa/sound/ainstr_gf1.h	/^	int (*remove_sample)(void *private_data, gf1_wave_t *wave,$/;"	m	struct:__anon63
root_frequency	alsa/sound/ainstr_gf1.h	/^	__u32 root_frequency;		\/* root frequency range *\/$/;"	m	struct:gf1_xwave
root_frequency	alsa/sound/ainstr_gf1.h	/^	unsigned int root_frequency;	\/* root frequency range *\/$/;"	m	struct:gf1_wave
sample_rate	alsa/sound/ainstr_gf1.h	/^	__u32 sample_rate;		\/* sample rate in Hz *\/$/;"	m	struct:gf1_xwave
sample_rate	alsa/sound/ainstr_gf1.h	/^	unsigned int sample_rate;	\/* sample rate in Hz *\/$/;"	m	struct:gf1_wave
scale_factor	alsa/sound/ainstr_gf1.h	/^	__u16 scale_factor;		\/* 0-2048 or 0-2 *\/  $/;"	m	struct:gf1_xwave
scale_factor	alsa/sound/ainstr_gf1.h	/^	unsigned short scale_factor;	\/* 0-2048 or 0-2 *\/$/;"	m	struct:gf1_wave
scale_frequency	alsa/sound/ainstr_gf1.h	/^	__u16 scale_frequency;$/;"	m	struct:gf1_xwave
scale_frequency	alsa/sound/ainstr_gf1.h	/^	unsigned short scale_frequency;$/;"	m	struct:gf1_wave
share_id	alsa/sound/ainstr_gf1.h	/^	__u32 share_id[4];		\/* share id - zero = no sharing *\/$/;"	m	struct:gf1_xwave
share_id	alsa/sound/ainstr_gf1.h	/^	unsigned int share_id[4];	\/* share id - zero = no sharing *\/$/;"	m	struct:gf1_wave
size	alsa/sound/ainstr_gf1.h	/^	__u32 size;			\/* size of waveform in samples *\/$/;"	m	struct:gf1_xwave
size	alsa/sound/ainstr_gf1.h	/^	unsigned int size;		\/* size of waveform in samples *\/$/;"	m	struct:gf1_wave
snd_gf1_ops_t	alsa/sound/ainstr_gf1.h	/^} snd_gf1_ops_t;$/;"	t	typeref:struct:__anon63
start	alsa/sound/ainstr_gf1.h	/^	__u32 start;			\/* start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:gf1_xwave
start	alsa/sound/ainstr_gf1.h	/^	unsigned int start;		\/* start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:gf1_wave
stype	alsa/sound/ainstr_gf1.h	/^	__u32 stype;			\/* structure type *\/$/;"	m	struct:gf1_xwave
stype	alsa/sound/ainstr_gf1.h	/^	__u32 stype;$/;"	m	struct:gf1_xinstrument
tremolo_depth	alsa/sound/ainstr_gf1.h	/^	__u8 tremolo_depth;$/;"	m	struct:gf1_xwave
tremolo_depth	alsa/sound/ainstr_gf1.h	/^	unsigned char tremolo_depth;$/;"	m	struct:gf1_wave
tremolo_rate	alsa/sound/ainstr_gf1.h	/^	__u8 tremolo_rate;$/;"	m	struct:gf1_xwave
tremolo_rate	alsa/sound/ainstr_gf1.h	/^	unsigned char tremolo_rate;$/;"	m	struct:gf1_wave
tremolo_sweep	alsa/sound/ainstr_gf1.h	/^	__u8 tremolo_sweep;$/;"	m	struct:gf1_xwave
tremolo_sweep	alsa/sound/ainstr_gf1.h	/^	unsigned char tremolo_sweep;$/;"	m	struct:gf1_wave
tune	alsa/sound/ainstr_gf1.h	/^	__s16 tune;$/;"	m	struct:gf1_xwave
tune	alsa/sound/ainstr_gf1.h	/^	signed short tune;$/;"	m	struct:gf1_wave
vibrato_depth	alsa/sound/ainstr_gf1.h	/^	__u8 vibrato_depth;$/;"	m	struct:gf1_xwave
vibrato_depth	alsa/sound/ainstr_gf1.h	/^	unsigned char vibrato_depth;$/;"	m	struct:gf1_wave
vibrato_rate	alsa/sound/ainstr_gf1.h	/^	__u8 vibrato_rate;$/;"	m	struct:gf1_xwave
vibrato_rate	alsa/sound/ainstr_gf1.h	/^	unsigned char vibrato_rate;$/;"	m	struct:gf1_wave
vibrato_sweep	alsa/sound/ainstr_gf1.h	/^	__u8 vibrato_sweep;$/;"	m	struct:gf1_xwave
vibrato_sweep	alsa/sound/ainstr_gf1.h	/^	unsigned char vibrato_sweep;$/;"	m	struct:gf1_wave
wave	alsa/sound/ainstr_gf1.h	/^	gf1_wave_t *wave;		\/* first waveform *\/$/;"	m	struct:__anon62
IWFFFF_EFFECT_CHORUS	alsa/sound/ainstr_iw.h	179;"	d
IWFFFF_EFFECT_ECHO	alsa/sound/ainstr_iw.h	180;"	d
IWFFFF_EFFECT_NONE	alsa/sound/ainstr_iw.h	177;"	d
IWFFFF_EFFECT_REVERB	alsa/sound/ainstr_iw.h	178;"	d
IWFFFF_ENV_FLAG_RETRIGGER	alsa/sound/ainstr_iw.h	98;"	d
IWFFFF_ENV_INDEX_FREQUENCY	alsa/sound/ainstr_iw.h	105;"	d
IWFFFF_ENV_INDEX_VELOCITY	alsa/sound/ainstr_iw.h	104;"	d
IWFFFF_ENV_MODE_NO_SUSTAIN	alsa/sound/ainstr_iw.h	102;"	d
IWFFFF_ENV_MODE_ONE_SHOT	alsa/sound/ainstr_iw.h	100;"	d
IWFFFF_ENV_MODE_SUSTAIN	alsa/sound/ainstr_iw.h	101;"	d
IWFFFF_EXCLUDE_MULTIPLE	alsa/sound/ainstr_iw.h	170;"	d
IWFFFF_EXCLUDE_NONE	alsa/sound/ainstr_iw.h	168;"	d
IWFFFF_EXCLUDE_SINGLE	alsa/sound/ainstr_iw.h	169;"	d
IWFFFF_INFO_LFO_TREMOLO	alsa/sound/ainstr_iw.h	341;"	d
IWFFFF_INFO_LFO_TREMOLO_SHAPE	alsa/sound/ainstr_iw.h	342;"	d
IWFFFF_INFO_LFO_VIBRATO	alsa/sound/ainstr_iw.h	339;"	d
IWFFFF_INFO_LFO_VIBRATO_SHAPE	alsa/sound/ainstr_iw.h	340;"	d
IWFFFF_LAYER_EVENT_KDOWN	alsa/sound/ainstr_iw.h	139;"	d
IWFFFF_LAYER_EVENT_KUP	alsa/sound/ainstr_iw.h	138;"	d
IWFFFF_LAYER_EVENT_LEGATO	alsa/sound/ainstr_iw.h	141;"	d
IWFFFF_LAYER_EVENT_RETRIG	alsa/sound/ainstr_iw.h	140;"	d
IWFFFF_LAYER_FLAG_RETRIGGER	alsa/sound/ainstr_iw.h	133;"	d
IWFFFF_LAYER_FREQUENCY	alsa/sound/ainstr_iw.h	175;"	d
IWFFFF_LAYER_NONE	alsa/sound/ainstr_iw.h	172;"	d
IWFFFF_LAYER_ON	alsa/sound/ainstr_iw.h	173;"	d
IWFFFF_LAYER_VELOCITY	alsa/sound/ainstr_iw.h	174;"	d
IWFFFF_LAYER_VELOCITY_RATE	alsa/sound/ainstr_iw.h	136;"	d
IWFFFF_LAYER_VELOCITY_TIME	alsa/sound/ainstr_iw.h	135;"	d
IWFFFF_LFO_SHAPE_POSTRIANGLE	alsa/sound/ainstr_iw.h	88;"	d
IWFFFF_LFO_SHAPE_TRIANGLE	alsa/sound/ainstr_iw.h	87;"	d
IWFFFF_ROM_HDR_SIZE	alsa/sound/ainstr_iw.h	319;"	d
IWFFFF_SHARE_FILE	alsa/sound/ainstr_iw.h	38;"	d
IWFFFF_STRU_ENV_RECP	alsa/sound/ainstr_iw.h	212;"	d
IWFFFF_STRU_ENV_RECV	alsa/sound/ainstr_iw.h	213;"	d
IWFFFF_STRU_INSTR	alsa/sound/ainstr_iw.h	215;"	d
IWFFFF_STRU_LAYER	alsa/sound/ainstr_iw.h	214;"	d
IWFFFF_STRU_WAVE	alsa/sound/ainstr_iw.h	211;"	d
IWFFFF_WAVE_16BIT	alsa/sound/ainstr_iw.h	44;"	d
IWFFFF_WAVE_BACKWARD	alsa/sound/ainstr_iw.h	47;"	d
IWFFFF_WAVE_BIDIR	alsa/sound/ainstr_iw.h	49;"	d
IWFFFF_WAVE_INVERT	alsa/sound/ainstr_iw.h	46;"	d
IWFFFF_WAVE_LOOP	alsa/sound/ainstr_iw.h	48;"	d
IWFFFF_WAVE_RAM	alsa/sound/ainstr_iw.h	51;"	d
IWFFFF_WAVE_ROM	alsa/sound/ainstr_iw.h	52;"	d
IWFFFF_WAVE_STEREO	alsa/sound/ainstr_iw.h	53;"	d
IWFFFF_WAVE_ULAW	alsa/sound/ainstr_iw.h	50;"	d
IWFFFF_WAVE_UNSIGNED	alsa/sound/ainstr_iw.h	45;"	d
__KERNEL__	alsa/sound/ainstr_iw.h	28;"	d
__KERNEL__	alsa/sound/ainstr_iw.h	31;"	d
__SOUND_AINSTR_IW_H	alsa/sound/ainstr_iw.h	25;"	d
address	alsa/sound/ainstr_iw.h	/^	} address;$/;"	m	struct:iwffff_wave	typeref:struct:iwffff_wave::__anon74
attenuation	alsa/sound/ainstr_iw.h	/^	__u8 attenuation;		\/* 0 - 127 (no corresponding midi controller) *\/$/;"	m	struct:iwffff_xwave
attenuation	alsa/sound/ainstr_iw.h	/^	__u8 attenuation;		\/* 0-127 (no corresponding midi controller) *\/$/;"	m	struct:iwffff_xlayer
attenuation	alsa/sound/ainstr_iw.h	/^	unsigned char attenuation;	\/* 0 - 127 (no corresponding midi controller) *\/$/;"	m	struct:iwffff_wave
attenuation	alsa/sound/ainstr_iw.h	/^	unsigned char attenuation;	\/* 0-127 (no corresponding midi controller) *\/$/;"	m	struct:iwffff_layer
copyright	alsa/sound/ainstr_iw.h	/^	__u8 copyright[128];$/;"	m	struct:__anon76
date	alsa/sound/ainstr_iw.h	/^	__u8 date[10];$/;"	m	struct:__anon76
delay	alsa/sound/ainstr_iw.h	/^	__u8 delay;			\/* 0 - 255 deciseconds *\/$/;"	m	struct:iwffff_xlfo
delay	alsa/sound/ainstr_iw.h	/^	unsigned char delay;		\/* 0 - 255 deciseconds *\/$/;"	m	struct:iwffff_lfo
depth	alsa/sound/ainstr_iw.h	/^	__s16 depth;			\/* volume +- (0-255) 0.48675dB\/step *\/$/;"	m	struct:iwffff_xlfo
depth	alsa/sound/ainstr_iw.h	/^	signed short depth;		\/* volume +- (0-255) 0.48675dB\/step *\/$/;"	m	struct:iwffff_lfo
description	alsa/sound/ainstr_iw.h	/^	__u8 description[128];$/;"	m	struct:__anon76
effect1	alsa/sound/ainstr_iw.h	/^	__u8 effect1;			\/* effect 1 *\/$/;"	m	struct:iwffff_xinstrument
effect1	alsa/sound/ainstr_iw.h	/^	unsigned char effect1;		\/* effect 1 *\/$/;"	m	struct:__anon75
effect1_depth	alsa/sound/ainstr_iw.h	/^	__u8 effect1_depth;		\/* 0-127 *\/$/;"	m	struct:iwffff_xinstrument
effect1_depth	alsa/sound/ainstr_iw.h	/^	unsigned char effect1_depth;	\/* 0-127 *\/$/;"	m	struct:__anon75
effect2	alsa/sound/ainstr_iw.h	/^	__u8 effect2;			\/* effect 2 *\/$/;"	m	struct:iwffff_xinstrument
effect2	alsa/sound/ainstr_iw.h	/^	unsigned char effect2;		\/* effect 2 *\/$/;"	m	struct:__anon75
effect2_depth	alsa/sound/ainstr_iw.h	/^	__u8 effect2_depth;		\/* 0-127 *\/$/;"	m	struct:iwffff_xinstrument
effect2_depth	alsa/sound/ainstr_iw.h	/^	unsigned char effect2_depth;	\/* 0-127 *\/$/;"	m	struct:__anon75
effects	alsa/sound/ainstr_iw.h	/^	unsigned int effects;		\/* supported effects (1 << IWFFFF_EFFECT*) *\/$/;"	m	struct:iwffff_info
exclusion	alsa/sound/ainstr_iw.h	/^	__u16 exclusion;$/;"	m	struct:iwffff_xinstrument
exclusion	alsa/sound/ainstr_iw.h	/^	unsigned short exclusion;$/;"	m	struct:__anon75
exclusion_group	alsa/sound/ainstr_iw.h	/^	__u16 exclusion_group;		\/* 0 - none, 1-65535 *\/$/;"	m	struct:iwffff_xinstrument
exclusion_group	alsa/sound/ainstr_iw.h	/^	unsigned short exclusion_group;	\/* 0 - none, 1-65535 *\/$/;"	m	struct:__anon75
flags	alsa/sound/ainstr_iw.h	/^	__u8 flags;$/;"	m	struct:iwffff_xenv
flags	alsa/sound/ainstr_iw.h	/^	__u8 flags;$/;"	m	struct:iwffff_xlayer
flags	alsa/sound/ainstr_iw.h	/^	unsigned char flags;$/;"	m	struct:iwffff_env
flags	alsa/sound/ainstr_iw.h	/^	unsigned char flags;$/;"	m	struct:iwffff_layer
format	alsa/sound/ainstr_iw.h	/^	__u32 format;			\/* wave format *\/$/;"	m	struct:iwffff_xwave
format	alsa/sound/ainstr_iw.h	/^	unsigned int format;		\/* supported format bits *\/$/;"	m	struct:iwffff_info
format	alsa/sound/ainstr_iw.h	/^	unsigned int format;		\/* wave format *\/$/;"	m	struct:iwffff_wave
freq	alsa/sound/ainstr_iw.h	/^	__u16 freq;			\/* (0-2047) 0.01Hz - 21.5Hz *\/$/;"	m	struct:iwffff_xlfo
freq	alsa/sound/ainstr_iw.h	/^	unsigned short freq;		\/* (0-2047) 0.01Hz - 21.5Hz *\/$/;"	m	struct:iwffff_lfo
freq_center	alsa/sound/ainstr_iw.h	/^	__u8 freq_center;		\/* center for keyboard frequency scaling *\/$/;"	m	struct:iwffff_xlayer
freq_center	alsa/sound/ainstr_iw.h	/^	unsigned char freq_center;	\/* center for keyboard frequency scaling *\/$/;"	m	struct:iwffff_layer
freq_scale	alsa/sound/ainstr_iw.h	/^	__u16 freq_scale;		\/* 0-2048, 1024 is equal to semitone scaling *\/$/;"	m	struct:iwffff_xlayer
freq_scale	alsa/sound/ainstr_iw.h	/^	unsigned short freq_scale;	\/* 0-2048, 1024 is equal to semitone scaling *\/$/;"	m	struct:iwffff_layer
get_sample	alsa/sound/ainstr_iw.h	/^	int (*get_sample)(void *private_data, iwffff_wave_t *wave,$/;"	m	struct:__anon77
high_note	alsa/sound/ainstr_iw.h	/^	__u8 high_note;			\/* higher frequency range for this waveform *\/$/;"	m	struct:iwffff_xwave
high_note	alsa/sound/ainstr_iw.h	/^	unsigned char high_note;	\/* higher frequency range for this waveform *\/$/;"	m	struct:iwffff_wave
high_range	alsa/sound/ainstr_iw.h	/^	__u8 high_range;		\/* on either velocity or frequency *\/$/;"	m	struct:iwffff_xlayer
high_range	alsa/sound/ainstr_iw.h	/^	unsigned char high_range;	\/* on either velocity or frequency *\/$/;"	m	struct:iwffff_layer
hirange	alsa/sound/ainstr_iw.h	/^	__u8 hirange;$/;"	m	struct:iwffff_xenv_record
hirange	alsa/sound/ainstr_iw.h	/^	unsigned char hirange;$/;"	m	struct:iwffff_env_record
index	alsa/sound/ainstr_iw.h	/^  	__u8 index;$/;"	m	struct:iwffff_xenv
index	alsa/sound/ainstr_iw.h	/^  	unsigned char index;$/;"	m	struct:iwffff_env
info	alsa/sound/ainstr_iw.h	/^	int (*info)(void *private_data, iwffff_info_t *info);$/;"	m	struct:__anon77
iwave	alsa/sound/ainstr_iw.h	/^	__u8 iwave[8];$/;"	m	struct:__anon76
iwffff_env	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_env {$/;"	s
iwffff_env_point	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_env_point {$/;"	s
iwffff_env_point_t	alsa/sound/ainstr_iw.h	/^} iwffff_env_point_t;$/;"	t	typeref:struct:iwffff_env_point
iwffff_env_record	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_env_record {$/;"	s
iwffff_env_record_t	alsa/sound/ainstr_iw.h	/^} iwffff_env_record_t;$/;"	t	typeref:struct:iwffff_env_record
iwffff_env_t	alsa/sound/ainstr_iw.h	/^} iwffff_env_t;$/;"	t	typeref:struct:iwffff_env
iwffff_info	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_info {$/;"	s
iwffff_info_t	alsa/sound/ainstr_iw.h	/^} iwffff_info_t;$/;"	t	typeref:struct:iwffff_info
iwffff_instrument_t	alsa/sound/ainstr_iw.h	/^} iwffff_instrument_t;$/;"	t	typeref:struct:__anon75
iwffff_layer	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_layer {$/;"	s
iwffff_layer_t	alsa/sound/ainstr_iw.h	/^} iwffff_layer_t;$/;"	t	typeref:struct:iwffff_layer
iwffff_lfo	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_lfo {$/;"	s
iwffff_lfo_t	alsa/sound/ainstr_iw.h	/^} iwffff_lfo_t;$/;"	t	typeref:struct:iwffff_lfo
iwffff_rom_header_t	alsa/sound/ainstr_iw.h	/^} iwffff_rom_header_t;$/;"	t	typeref:struct:__anon76
iwffff_wave	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_wave {$/;"	s
iwffff_wave_t	alsa/sound/ainstr_iw.h	/^} iwffff_wave_t;$/;"	t	typeref:struct:iwffff_wave
iwffff_xenv	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_xenv {$/;"	s
iwffff_xenv_point	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_xenv_point {$/;"	s
iwffff_xenv_point_t	alsa/sound/ainstr_iw.h	/^} iwffff_xenv_point_t;$/;"	t	typeref:struct:iwffff_xenv_point
iwffff_xenv_record	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_xenv_record {$/;"	s
iwffff_xenv_record_t	alsa/sound/ainstr_iw.h	/^} iwffff_xenv_record_t;$/;"	t	typeref:struct:iwffff_xenv_record
iwffff_xenv_t	alsa/sound/ainstr_iw.h	/^} iwffff_xenv_t;$/;"	t	typeref:struct:iwffff_xenv
iwffff_xinstrument	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_xinstrument {$/;"	s
iwffff_xinstrument_t	alsa/sound/ainstr_iw.h	/^} iwffff_xinstrument_t;$/;"	t	typeref:struct:iwffff_xinstrument
iwffff_xlayer	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_xlayer {$/;"	s
iwffff_xlayer_t	alsa/sound/ainstr_iw.h	/^} iwffff_xlayer_t;$/;"	t	typeref:struct:iwffff_xlayer
iwffff_xlfo	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_xlfo {$/;"	s
iwffff_xlfo_t	alsa/sound/ainstr_iw.h	/^} iwffff_xlfo_t;$/;"	t	typeref:struct:iwffff_xlfo
iwffff_xwave	alsa/sound/ainstr_iw.h	/^typedef struct iwffff_xwave {$/;"	s
iwffff_xwave_t	alsa/sound/ainstr_iw.h	/^} iwffff_xwave_t;$/;"	t	typeref:struct:iwffff_xwave
kops	alsa/sound/ainstr_iw.h	/^	snd_seq_kinstr_ops_t kops;$/;"	m	struct:__anon77
layer	alsa/sound/ainstr_iw.h	/^	iwffff_layer_t *layer;		\/* first layer *\/$/;"	m	struct:__anon75
layer_event	alsa/sound/ainstr_iw.h	/^      	__u8 layer_event;$/;"	m	struct:iwffff_xlayer
layer_event	alsa/sound/ainstr_iw.h	/^      	unsigned char layer_event;$/;"	m	struct:iwffff_layer
layer_type	alsa/sound/ainstr_iw.h	/^	__u16 layer_type;$/;"	m	struct:iwffff_xinstrument
layer_type	alsa/sound/ainstr_iw.h	/^	unsigned short layer_type;$/;"	m	struct:__anon75
lfos	alsa/sound/ainstr_iw.h	/^	unsigned int lfos;		\/* LFO effects *\/$/;"	m	struct:iwffff_info
loop_end	alsa/sound/ainstr_iw.h	/^	__u32 loop_end;			\/* loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:iwffff_xwave
loop_end	alsa/sound/ainstr_iw.h	/^	unsigned int loop_end;		\/* loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:iwffff_wave
loop_repeat	alsa/sound/ainstr_iw.h	/^	__u16 loop_repeat;		\/* loop repeat - 0 = forever *\/$/;"	m	struct:iwffff_xwave
loop_repeat	alsa/sound/ainstr_iw.h	/^	unsigned short loop_repeat;	\/* loop repeat - 0 = forever *\/$/;"	m	struct:iwffff_wave
loop_start	alsa/sound/ainstr_iw.h	/^	__u32 loop_start;		\/* bits loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:iwffff_xwave
loop_start	alsa/sound/ainstr_iw.h	/^	unsigned int loop_start;	\/* bits loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:iwffff_wave
low_note	alsa/sound/ainstr_iw.h	/^	__u8 low_note;			\/* lower frequency range for this waveform *\/$/;"	m	struct:iwffff_xwave
low_note	alsa/sound/ainstr_iw.h	/^	unsigned char low_note;		\/* lower frequency range for this waveform *\/$/;"	m	struct:iwffff_wave
low_range	alsa/sound/ainstr_iw.h	/^	__u8 low_range;			\/* range for layer based *\/$/;"	m	struct:iwffff_xlayer
low_range	alsa/sound/ainstr_iw.h	/^	unsigned char low_range;	\/* range for layer based *\/$/;"	m	struct:iwffff_layer
max16_len	alsa/sound/ainstr_iw.h	/^	unsigned int max16_len;		\/* maximum 16-bit wave length *\/$/;"	m	struct:iwffff_info
max8_len	alsa/sound/ainstr_iw.h	/^	unsigned int max8_len;		\/* maximum 8-bit wave length *\/$/;"	m	struct:iwffff_info
memory	alsa/sound/ainstr_iw.h	/^		unsigned int memory;	\/* begin of waveform in onboard memory *\/$/;"	m	struct:iwffff_wave::__anon74
mode	alsa/sound/ainstr_iw.h	/^  	__u8 mode;$/;"	m	struct:iwffff_xenv
mode	alsa/sound/ainstr_iw.h	/^  	unsigned char mode;$/;"	m	struct:iwffff_env
nattack	alsa/sound/ainstr_iw.h	/^	__u16 nattack;$/;"	m	struct:iwffff_xenv_record
nattack	alsa/sound/ainstr_iw.h	/^	unsigned short nattack;$/;"	m	struct:iwffff_env_record
next	alsa/sound/ainstr_iw.h	/^	struct iwffff_env_record *next;$/;"	m	struct:iwffff_env_record	typeref:struct:iwffff_env_record::iwffff_env_record
next	alsa/sound/ainstr_iw.h	/^	struct iwffff_layer *next;$/;"	m	struct:iwffff_layer	typeref:struct:iwffff_layer::iwffff_layer
next	alsa/sound/ainstr_iw.h	/^	struct iwffff_wave *next;$/;"	m	struct:iwffff_wave	typeref:struct:iwffff_wave::iwffff_wave
notify	alsa/sound/ainstr_iw.h	/^	void (*notify)(void *private_data, snd_seq_kinstr_t *instr, int what);$/;"	m	struct:__anon77
nrelease	alsa/sound/ainstr_iw.h	/^	__u16 nrelease;$/;"	m	struct:iwffff_xenv_record
nrelease	alsa/sound/ainstr_iw.h	/^	unsigned short nrelease;$/;"	m	struct:iwffff_env_record
number	alsa/sound/ainstr_iw.h	/^		unsigned int number;	\/* some other ID for this wave *\/$/;"	m	struct:iwffff_wave::__anon74
offset	alsa/sound/ainstr_iw.h	/^	__u16 offset;$/;"	m	struct:iwffff_xenv_point
offset	alsa/sound/ainstr_iw.h	/^	__u32 offset;			\/* offset to ROM (address) *\/$/;"	m	struct:iwffff_xwave
offset	alsa/sound/ainstr_iw.h	/^	unsigned short offset;$/;"	m	struct:iwffff_env_point
pad	alsa/sound/ainstr_iw.h	/^	__u8 pad;$/;"	m	struct:iwffff_xenv
pad	alsa/sound/ainstr_iw.h	/^	__u8 pad;$/;"	m	struct:iwffff_xenv_record
pad	alsa/sound/ainstr_iw.h	/^	__u8 pad;$/;"	m	struct:iwffff_xlayer
pad	alsa/sound/ainstr_iw.h	/^	__u8 pad;$/;"	m	struct:iwffff_xwave
pad	alsa/sound/ainstr_iw.h	/^	unsigned char pad;$/;"	m	struct:iwffff_env
pad	alsa/sound/ainstr_iw.h	/^	unsigned char pad;$/;"	m	struct:iwffff_env_record
pad	alsa/sound/ainstr_iw.h	/^	unsigned char pad;$/;"	m	struct:iwffff_layer
pad	alsa/sound/ainstr_iw.h	/^	unsigned char pad;$/;"	m	struct:iwffff_wave
pan	alsa/sound/ainstr_iw.h	/^	__u8 pan;			\/* pan offset from CC1 (0 left - 127 right) *\/$/;"	m	struct:iwffff_xlayer
pan	alsa/sound/ainstr_iw.h	/^	unsigned char pan;		\/* pan offset from CC1 (0 left - 127 right) *\/$/;"	m	struct:iwffff_layer
pan_freq_scale	alsa/sound/ainstr_iw.h	/^	__u8 pan_freq_scale;		\/* position based on frequency (0-127) *\/$/;"	m	struct:iwffff_xlayer
pan_freq_scale	alsa/sound/ainstr_iw.h	/^	unsigned char pan_freq_scale;	\/* position based on frequency (0-127) *\/$/;"	m	struct:iwffff_layer
penv	alsa/sound/ainstr_iw.h	/^	iwffff_env_t penv;		\/* pitch envelope *\/$/;"	m	struct:iwffff_layer
penv	alsa/sound/ainstr_iw.h	/^	iwffff_xenv_t penv;		\/* pitch envelope *\/$/;"	m	struct:iwffff_xlayer
private_data	alsa/sound/ainstr_iw.h	/^	void *private_data;$/;"	m	struct:__anon77
ptr	alsa/sound/ainstr_iw.h	/^		unsigned char *ptr;	\/* pointer to waveform in system memory *\/$/;"	m	struct:iwffff_wave::__anon74
put_sample	alsa/sound/ainstr_iw.h	/^	int (*put_sample)(void *private_data, iwffff_wave_t *wave,$/;"	m	struct:__anon77
rate	alsa/sound/ainstr_iw.h	/^	__u16 rate;$/;"	m	struct:iwffff_xenv_point
rate	alsa/sound/ainstr_iw.h	/^	unsigned short rate;$/;"	m	struct:iwffff_env_point
record	alsa/sound/ainstr_iw.h	/^	struct iwffff_env_record *record;$/;"	m	struct:iwffff_env	typeref:struct:iwffff_env::iwffff_env_record
release_rate	alsa/sound/ainstr_iw.h	/^	__u16 release_rate;$/;"	m	struct:iwffff_xenv_record
release_rate	alsa/sound/ainstr_iw.h	/^	unsigned short release_rate;$/;"	m	struct:iwffff_env_record
remove_sample	alsa/sound/ainstr_iw.h	/^	int (*remove_sample)(void *private_data, iwffff_wave_t *wave,$/;"	m	struct:__anon77
revision	alsa/sound/ainstr_iw.h	/^	__u8 revision;$/;"	m	struct:__anon76
rom_size	alsa/sound/ainstr_iw.h	/^	__u32 rom_size;$/;"	m	struct:__anon76
sample_ratio	alsa/sound/ainstr_iw.h	/^	__u32 sample_ratio;		\/* sample ratio (44100 * 1024 \/ rate) *\/$/;"	m	struct:iwffff_xwave
sample_ratio	alsa/sound/ainstr_iw.h	/^	unsigned int sample_ratio;	\/* sample ratio (44100 * 1024 \/ rate) *\/$/;"	m	struct:iwffff_wave
series_name	alsa/sound/ainstr_iw.h	/^	__u8 series_name[16];$/;"	m	struct:__anon76
series_number	alsa/sound/ainstr_iw.h	/^	__u8 series_number;$/;"	m	struct:__anon76
shape	alsa/sound/ainstr_iw.h	/^	__u8 shape;			\/* see to ULTRA_IW_LFO_SHAPE_XXXX *\/$/;"	m	struct:iwffff_xlfo
shape	alsa/sound/ainstr_iw.h	/^	unsigned char shape;		\/* see to IWFFFF_LFO_SHAPE_XXXX *\/$/;"	m	struct:iwffff_lfo
share_id	alsa/sound/ainstr_iw.h	/^	__u32 share_id[4];		\/* share id - zero = no sharing *\/$/;"	m	struct:iwffff_xwave
share_id	alsa/sound/ainstr_iw.h	/^	unsigned int share_id[4];	\/* share id - zero = no sharing *\/$/;"	m	struct:iwffff_wave
size	alsa/sound/ainstr_iw.h	/^	__u32 size;			\/* size of waveform in samples *\/$/;"	m	struct:iwffff_xwave
size	alsa/sound/ainstr_iw.h	/^	unsigned int size;		\/* size of waveform in samples *\/$/;"	m	struct:iwffff_wave
snd_iwffff_ops_t	alsa/sound/ainstr_iw.h	/^} snd_iwffff_ops_t;$/;"	t	typeref:struct:__anon77
start	alsa/sound/ainstr_iw.h	/^	__u32 start;			\/* start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:iwffff_xwave
start	alsa/sound/ainstr_iw.h	/^	unsigned int start;		\/* start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:iwffff_wave
stype	alsa/sound/ainstr_iw.h	/^	__u32 stype;			\/* structure type *\/$/;"	m	struct:iwffff_xwave
stype	alsa/sound/ainstr_iw.h	/^	__u32 stype;$/;"	m	struct:iwffff_xenv_record
stype	alsa/sound/ainstr_iw.h	/^	__u32 stype;$/;"	m	struct:iwffff_xinstrument
stype	alsa/sound/ainstr_iw.h	/^	__u32 stype;$/;"	m	struct:iwffff_xlayer
sustain_offset	alsa/sound/ainstr_iw.h	/^	__u16 sustain_offset;$/;"	m	struct:iwffff_xenv_record
sustain_offset	alsa/sound/ainstr_iw.h	/^	unsigned short sustain_offset;$/;"	m	struct:iwffff_env_record
sustain_rate	alsa/sound/ainstr_iw.h	/^	__u16 sustain_rate;$/;"	m	struct:iwffff_xenv_record
sustain_rate	alsa/sound/ainstr_iw.h	/^	unsigned short sustain_rate;$/;"	m	struct:iwffff_env_record
sweep	alsa/sound/ainstr_iw.h	/^	__s16 sweep;			\/* 0 - 950 deciseconds *\/$/;"	m	struct:iwffff_xlfo
sweep	alsa/sound/ainstr_iw.h	/^	signed short sweep;		\/* 0 - 950 deciseconds *\/$/;"	m	struct:iwffff_lfo
tremolo	alsa/sound/ainstr_iw.h	/^	iwffff_lfo_t tremolo;		\/* tremolo effect *\/$/;"	m	struct:iwffff_layer
tremolo	alsa/sound/ainstr_iw.h	/^	iwffff_xlfo_t tremolo;		\/* tremolo effect *\/$/;"	m	struct:iwffff_xlayer
velocity_mode	alsa/sound/ainstr_iw.h	/^	__u8 velocity_mode;$/;"	m	struct:iwffff_xlayer
velocity_mode	alsa/sound/ainstr_iw.h	/^	unsigned char velocity_mode;$/;"	m	struct:iwffff_layer
vendor_name	alsa/sound/ainstr_iw.h	/^	__u8 vendor_name[64];$/;"	m	struct:__anon76
vendor_revision_major	alsa/sound/ainstr_iw.h	/^	__u16 vendor_revision_major;$/;"	m	struct:__anon76
vendor_revision_minor	alsa/sound/ainstr_iw.h	/^	__u16 vendor_revision_minor;$/;"	m	struct:__anon76
venv	alsa/sound/ainstr_iw.h	/^	iwffff_env_t venv;		\/* volume envelope *\/$/;"	m	struct:iwffff_layer
venv	alsa/sound/ainstr_iw.h	/^	iwffff_xenv_t venv;		\/* volume envelope *\/$/;"	m	struct:iwffff_xlayer
vibrato	alsa/sound/ainstr_iw.h	/^	iwffff_lfo_t vibrato;		\/* vibrato effect *\/$/;"	m	struct:iwffff_layer
vibrato	alsa/sound/ainstr_iw.h	/^	iwffff_xlfo_t vibrato;		\/* vibrato effect *\/$/;"	m	struct:iwffff_xlayer
wave	alsa/sound/ainstr_iw.h	/^	iwffff_wave_t *wave;$/;"	m	struct:iwffff_layer
SIMPLE_EFFECT_CHORUS	alsa/sound/ainstr_simple.h	59;"	d
SIMPLE_EFFECT_ECHO	alsa/sound/ainstr_simple.h	60;"	d
SIMPLE_EFFECT_NONE	alsa/sound/ainstr_simple.h	57;"	d
SIMPLE_EFFECT_REVERB	alsa/sound/ainstr_simple.h	58;"	d
SIMPLE_SHARE_FILE	alsa/sound/ainstr_simple.h	38;"	d
SIMPLE_STRU_INSTR	alsa/sound/ainstr_simple.h	111;"	d
SIMPLE_WAVE_16BIT	alsa/sound/ainstr_simple.h	44;"	d
SIMPLE_WAVE_BACKWARD	alsa/sound/ainstr_simple.h	47;"	d
SIMPLE_WAVE_BIDIR	alsa/sound/ainstr_simple.h	49;"	d
SIMPLE_WAVE_INVERT	alsa/sound/ainstr_simple.h	46;"	d
SIMPLE_WAVE_LOOP	alsa/sound/ainstr_simple.h	48;"	d
SIMPLE_WAVE_STEREO	alsa/sound/ainstr_simple.h	50;"	d
SIMPLE_WAVE_ULAW	alsa/sound/ainstr_simple.h	51;"	d
SIMPLE_WAVE_UNSIGNED	alsa/sound/ainstr_simple.h	45;"	d
__KERNEL__	alsa/sound/ainstr_simple.h	28;"	d
__KERNEL__	alsa/sound/ainstr_simple.h	31;"	d
__SOUND_AINSTR_SIMPLE_H	alsa/sound/ainstr_simple.h	25;"	d
address	alsa/sound/ainstr_simple.h	/^	} address;$/;"	m	struct:__anon65	typeref:struct:__anon65::__anon66
effect1	alsa/sound/ainstr_simple.h	/^	__u8 effect1;			\/* effect 1 *\/$/;"	m	struct:simple_xinstrument
effect1	alsa/sound/ainstr_simple.h	/^	unsigned char effect1;		\/* effect 1 *\/$/;"	m	struct:__anon65
effect1_depth	alsa/sound/ainstr_simple.h	/^	__u8 effect1_depth;		\/* 0-127 *\/$/;"	m	struct:simple_xinstrument
effect1_depth	alsa/sound/ainstr_simple.h	/^	unsigned char effect1_depth;	\/* 0-127 *\/$/;"	m	struct:__anon65
effect2	alsa/sound/ainstr_simple.h	/^	__u8 effect2;			\/* effect 2 *\/$/;"	m	struct:simple_xinstrument
effect2	alsa/sound/ainstr_simple.h	/^	unsigned char effect2;		\/* effect 2 *\/$/;"	m	struct:__anon65
effect2_depth	alsa/sound/ainstr_simple.h	/^	__u8 effect2_depth;		\/* 0-127 *\/$/;"	m	struct:simple_xinstrument
effect2_depth	alsa/sound/ainstr_simple.h	/^	unsigned char effect2_depth;	\/* 0-127 *\/$/;"	m	struct:__anon65
effects	alsa/sound/ainstr_simple.h	/^	unsigned int effects;		\/* supported effects (1 << SIMPLE_EFFECT_*) *\/$/;"	m	struct:simple_instrument_info
format	alsa/sound/ainstr_simple.h	/^	__u32 format;			\/* wave format *\/$/;"	m	struct:simple_xinstrument
format	alsa/sound/ainstr_simple.h	/^	unsigned int format;		\/* supported format bits *\/$/;"	m	struct:simple_instrument_info
format	alsa/sound/ainstr_simple.h	/^	unsigned int format;		\/* wave format *\/$/;"	m	struct:__anon65
get_sample	alsa/sound/ainstr_simple.h	/^	int (*get_sample)(void *private_data, simple_instrument_t *instr,$/;"	m	struct:__anon67
info	alsa/sound/ainstr_simple.h	/^	int (*info)(void *private_data, simple_instrument_info_t *info);$/;"	m	struct:__anon67
kops	alsa/sound/ainstr_simple.h	/^	snd_seq_kinstr_ops_t kops;$/;"	m	struct:__anon67
loop_end	alsa/sound/ainstr_simple.h	/^	__u32 loop_end;			\/* loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:simple_xinstrument
loop_end	alsa/sound/ainstr_simple.h	/^	unsigned int loop_end;		\/* loop end offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:__anon65
loop_repeat	alsa/sound/ainstr_simple.h	/^	__u16 loop_repeat;		\/* loop repeat - 0 = forever *\/$/;"	m	struct:simple_xinstrument
loop_repeat	alsa/sound/ainstr_simple.h	/^	unsigned short loop_repeat;	\/* loop repeat - 0 = forever *\/$/;"	m	struct:__anon65
loop_start	alsa/sound/ainstr_simple.h	/^	__u32 loop_start;		\/* bits loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:simple_xinstrument
loop_start	alsa/sound/ainstr_simple.h	/^	unsigned int loop_start;	\/* loop start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:__anon65
max16_len	alsa/sound/ainstr_simple.h	/^	unsigned int max16_len;		\/* maximum 16-bit wave length *\/$/;"	m	struct:simple_instrument_info
max8_len	alsa/sound/ainstr_simple.h	/^	unsigned int max8_len;		\/* maximum 8-bit wave length *\/$/;"	m	struct:simple_instrument_info
memory	alsa/sound/ainstr_simple.h	/^		unsigned int memory;	\/* begin of waveform in onboard memory *\/$/;"	m	struct:__anon65::__anon66
notify	alsa/sound/ainstr_simple.h	/^	void (*notify)(void *private_data, snd_seq_kinstr_t *instr, int what);$/;"	m	struct:__anon67
number	alsa/sound/ainstr_simple.h	/^		unsigned int number;	\/* some other ID for this instrument *\/$/;"	m	struct:__anon65::__anon66
private_data	alsa/sound/ainstr_simple.h	/^	void *private_data;$/;"	m	struct:__anon67
ptr	alsa/sound/ainstr_simple.h	/^		unsigned char *ptr;	\/* pointer to waveform in system memory *\/$/;"	m	struct:__anon65::__anon66
put_sample	alsa/sound/ainstr_simple.h	/^	int (*put_sample)(void *private_data, simple_instrument_t *instr,$/;"	m	struct:__anon67
remove_sample	alsa/sound/ainstr_simple.h	/^	int (*remove_sample)(void *private_data, simple_instrument_t *instr,$/;"	m	struct:__anon67
share_id	alsa/sound/ainstr_simple.h	/^	__u32 share_id[4];		\/* share id - zero = no sharing *\/$/;"	m	struct:simple_xinstrument
share_id	alsa/sound/ainstr_simple.h	/^	unsigned int share_id[4];	\/* share id - zero = no sharing *\/$/;"	m	struct:__anon65
simple_instrument_info	alsa/sound/ainstr_simple.h	/^typedef struct simple_instrument_info {$/;"	s
simple_instrument_info_t	alsa/sound/ainstr_simple.h	/^} simple_instrument_info_t;$/;"	t	typeref:struct:simple_instrument_info
simple_instrument_t	alsa/sound/ainstr_simple.h	/^} simple_instrument_t;$/;"	t	typeref:struct:__anon65
simple_xinstrument	alsa/sound/ainstr_simple.h	/^typedef struct simple_xinstrument {$/;"	s
simple_xinstrument_t	alsa/sound/ainstr_simple.h	/^} simple_xinstrument_t;$/;"	t	typeref:struct:simple_xinstrument
size	alsa/sound/ainstr_simple.h	/^	__u32 size;			\/* size of waveform in samples *\/$/;"	m	struct:simple_xinstrument
size	alsa/sound/ainstr_simple.h	/^	unsigned int size;		\/* size of waveform in samples *\/$/;"	m	struct:__anon65
snd_simple_ops_t	alsa/sound/ainstr_simple.h	/^} snd_simple_ops_t;$/;"	t	typeref:struct:__anon67
start	alsa/sound/ainstr_simple.h	/^	__u32 start;			\/* start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:simple_xinstrument
start	alsa/sound/ainstr_simple.h	/^	unsigned int start;		\/* start offset in samples * 16 (lowest 4 bits - fraction) *\/$/;"	m	struct:__anon65
stype	alsa/sound/ainstr_simple.h	/^	__u32 stype;$/;"	m	struct:simple_xinstrument
SNDRV_DM_FM_IOCTL_INFO	alsa/sound/asound_fm.h	99;"	d
SNDRV_DM_FM_IOCTL_PLAY_NOTE	alsa/sound/asound_fm.h	101;"	d
SNDRV_DM_FM_IOCTL_RESET	alsa/sound/asound_fm.h	100;"	d
SNDRV_DM_FM_IOCTL_SET_CONNECTION	alsa/sound/asound_fm.h	106;"	d
SNDRV_DM_FM_IOCTL_SET_MODE	alsa/sound/asound_fm.h	104;"	d
SNDRV_DM_FM_IOCTL_SET_PARAMS	alsa/sound/asound_fm.h	103;"	d
SNDRV_DM_FM_IOCTL_SET_VOICE	alsa/sound/asound_fm.h	102;"	d
SNDRV_DM_FM_MODE_OPL2	alsa/sound/asound_fm.h	29;"	d
SNDRV_DM_FM_MODE_OPL3	alsa/sound/asound_fm.h	30;"	d
SNDRV_DM_FM_OSS_IOCTL_PLAY_NOTE	alsa/sound/asound_fm.h	109;"	d
SNDRV_DM_FM_OSS_IOCTL_RESET	alsa/sound/asound_fm.h	108;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_MODE	alsa/sound/asound_fm.h	112;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_OPL	alsa/sound/asound_fm.h	113;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_PARAMS	alsa/sound/asound_fm.h	111;"	d
SNDRV_DM_FM_OSS_IOCTL_SET_VOICE	alsa/sound/asound_fm.h	110;"	d
__SOUND_ASOUND_FM_H	alsa/sound/asound_fm.h	2;"	d
am	alsa/sound/asound_fm.h	/^	unsigned char am;		\/* amplitude modulation *\/$/;"	m	struct:snd_dm_fm_voice
am_depth	alsa/sound/asound_fm.h	/^	unsigned char am_depth;		\/* amplitude modulation depth (1=hi) *\/$/;"	m	struct:snd_dm_fm_params
attack	alsa/sound/asound_fm.h	/^	unsigned char attack;		\/* 4 bits: attack rate *\/$/;"	m	struct:snd_dm_fm_voice
bass	alsa/sound/asound_fm.h	/^	unsigned char bass;$/;"	m	struct:snd_dm_fm_params
connection	alsa/sound/asound_fm.h	/^	unsigned char connection;	\/* 0 for serial, 1 for parallel *\/$/;"	m	struct:snd_dm_fm_voice
cymbal	alsa/sound/asound_fm.h	/^	unsigned char cymbal;$/;"	m	struct:snd_dm_fm_params
decay	alsa/sound/asound_fm.h	/^	unsigned char decay;		\/* 4 bits: decay rate *\/$/;"	m	struct:snd_dm_fm_voice
do_sustain	alsa/sound/asound_fm.h	/^	unsigned char do_sustain;	\/* sustain phase *\/$/;"	m	struct:snd_dm_fm_voice
feedback	alsa/sound/asound_fm.h	/^	unsigned char feedback;		\/* 3 bits: feedback for op0 *\/$/;"	m	struct:snd_dm_fm_voice
fm_mode	alsa/sound/asound_fm.h	/^	unsigned char fm_mode;		\/* OPL mode, see SNDRV_DM_FM_MODE_XXX *\/$/;"	m	struct:snd_dm_fm_info
fnum	alsa/sound/asound_fm.h	/^	unsigned int fnum;	\/* 10 bits: frequency number *\/$/;"	m	struct:snd_dm_fm_note
harmonic	alsa/sound/asound_fm.h	/^	unsigned char harmonic;		\/* 4 bits: harmonic and multiplier *\/$/;"	m	struct:snd_dm_fm_voice
hihat	alsa/sound/asound_fm.h	/^	unsigned char hihat;$/;"	m	struct:snd_dm_fm_params
kbd_scale	alsa/sound/asound_fm.h	/^	unsigned char kbd_scale;	\/* keyboard scaling *\/$/;"	m	struct:snd_dm_fm_voice
kbd_split	alsa/sound/asound_fm.h	/^	unsigned char kbd_split;	\/* keyboard split *\/$/;"	m	struct:snd_dm_fm_params
key_on	alsa/sound/asound_fm.h	/^	unsigned char key_on;	\/* set for active, clear for silent *\/$/;"	m	struct:snd_dm_fm_note
left	alsa/sound/asound_fm.h	/^	unsigned char left;		\/* stereo left *\/$/;"	m	struct:snd_dm_fm_voice
octave	alsa/sound/asound_fm.h	/^	unsigned char octave;	\/* 3 bits: what octave to play *\/$/;"	m	struct:snd_dm_fm_note
op	alsa/sound/asound_fm.h	/^	unsigned char op;		\/* operator cell (0 or 1) *\/$/;"	m	struct:snd_dm_fm_voice
release	alsa/sound/asound_fm.h	/^	unsigned char release;		\/* 4 bits: release rate *\/$/;"	m	struct:snd_dm_fm_voice
rhythm	alsa/sound/asound_fm.h	/^	unsigned char rhythm;		\/* percussion mode flag *\/$/;"	m	struct:snd_dm_fm_info
rhythm	alsa/sound/asound_fm.h	/^	unsigned char rhythm;		\/* percussion mode select *\/$/;"	m	struct:snd_dm_fm_params
right	alsa/sound/asound_fm.h	/^	unsigned char right;		\/* stereo right *\/$/;"	m	struct:snd_dm_fm_voice
scale_level	alsa/sound/asound_fm.h	/^	unsigned char scale_level;	\/* 2 bits: decrease output freq rises *\/$/;"	m	struct:snd_dm_fm_voice
snare	alsa/sound/asound_fm.h	/^	unsigned char snare;$/;"	m	struct:snd_dm_fm_params
snd_dm_fm_info	alsa/sound/asound_fm.h	/^typedef struct snd_dm_fm_info {$/;"	s
snd_dm_fm_info_t	alsa/sound/asound_fm.h	/^} snd_dm_fm_info_t;$/;"	t	typeref:struct:snd_dm_fm_info
snd_dm_fm_note	alsa/sound/asound_fm.h	/^typedef struct snd_dm_fm_note {$/;"	s
snd_dm_fm_note_t	alsa/sound/asound_fm.h	/^} snd_dm_fm_note_t;$/;"	t	typeref:struct:snd_dm_fm_note
snd_dm_fm_params	alsa/sound/asound_fm.h	/^typedef struct snd_dm_fm_params {$/;"	s
snd_dm_fm_params_t	alsa/sound/asound_fm.h	/^} snd_dm_fm_params_t;$/;"	t	typeref:struct:snd_dm_fm_params
snd_dm_fm_voice	alsa/sound/asound_fm.h	/^typedef struct snd_dm_fm_voice {$/;"	s
snd_dm_fm_voice_t	alsa/sound/asound_fm.h	/^} snd_dm_fm_voice_t;$/;"	t	typeref:struct:snd_dm_fm_voice
sustain	alsa/sound/asound_fm.h	/^	unsigned char sustain;		\/* 4 bits: sustain level *\/$/;"	m	struct:snd_dm_fm_voice
tomtom	alsa/sound/asound_fm.h	/^	unsigned char tomtom;$/;"	m	struct:snd_dm_fm_params
vib_depth	alsa/sound/asound_fm.h	/^	unsigned char vib_depth;	\/* vibrato depth (1=hi) *\/$/;"	m	struct:snd_dm_fm_params
vibrato	alsa/sound/asound_fm.h	/^	unsigned char vibrato;		\/* vibrato effect *\/$/;"	m	struct:snd_dm_fm_voice
voice	alsa/sound/asound_fm.h	/^	unsigned char voice;		\/* FM voice (0 to 17) *\/$/;"	m	struct:snd_dm_fm_voice
voice	alsa/sound/asound_fm.h	/^	unsigned char voice;	\/* 0-17 voice channel *\/$/;"	m	struct:snd_dm_fm_note
volume	alsa/sound/asound_fm.h	/^	unsigned char volume;		\/* 6 bits: volume *\/$/;"	m	struct:snd_dm_fm_voice
waveform	alsa/sound/asound_fm.h	/^	unsigned char waveform;		\/* 3 bits: waveform shape *\/$/;"	m	struct:snd_dm_fm_voice
A_C_00000000	alsa/sound/emu10k1.h	197;"	d
A_C_00000001	alsa/sound/emu10k1.h	198;"	d
A_C_00000002	alsa/sound/emu10k1.h	199;"	d
A_C_00000003	alsa/sound/emu10k1.h	200;"	d
A_C_00000004	alsa/sound/emu10k1.h	201;"	d
A_C_00000008	alsa/sound/emu10k1.h	202;"	d
A_C_00000010	alsa/sound/emu10k1.h	203;"	d
A_C_00000020	alsa/sound/emu10k1.h	204;"	d
A_C_00000100	alsa/sound/emu10k1.h	205;"	d
A_C_00000800	alsa/sound/emu10k1.h	207;"	d
A_C_00010000	alsa/sound/emu10k1.h	206;"	d
A_C_00100000	alsa/sound/emu10k1.h	218;"	d
A_C_10000000	alsa/sound/emu10k1.h	208;"	d
A_C_20000000	alsa/sound/emu10k1.h	209;"	d
A_C_40000000	alsa/sound/emu10k1.h	210;"	d
A_C_4f1bbcdc	alsa/sound/emu10k1.h	216;"	d
A_C_5a7ef9db	alsa/sound/emu10k1.h	217;"	d
A_C_7fffffff	alsa/sound/emu10k1.h	212;"	d
A_C_80000000	alsa/sound/emu10k1.h	211;"	d
A_C_c0000000	alsa/sound/emu10k1.h	215;"	d
A_C_fffffffe	alsa/sound/emu10k1.h	214;"	d
A_C_ffffffff	alsa/sound/emu10k1.h	213;"	d
A_EXTIN	alsa/sound/emu10k1.h	94;"	d
A_EXTIN_AC97_L	alsa/sound/emu10k1.h	160;"	d
A_EXTIN_AC97_R	alsa/sound/emu10k1.h	161;"	d
A_EXTIN_ADC_L	alsa/sound/emu10k1.h	168;"	d
A_EXTIN_ADC_R	alsa/sound/emu10k1.h	169;"	d
A_EXTIN_AUX2_L	alsa/sound/emu10k1.h	170;"	d
A_EXTIN_AUX2_R	alsa/sound/emu10k1.h	171;"	d
A_EXTIN_LINE2_L	alsa/sound/emu10k1.h	166;"	d
A_EXTIN_LINE2_R	alsa/sound/emu10k1.h	167;"	d
A_EXTIN_OPT_SPDIF_L	alsa/sound/emu10k1.h	164;"	d
A_EXTIN_OPT_SPDIF_R	alsa/sound/emu10k1.h	165;"	d
A_EXTIN_SPDIF_CD_L	alsa/sound/emu10k1.h	162;"	d
A_EXTIN_SPDIF_CD_R	alsa/sound/emu10k1.h	163;"	d
A_EXTOUT	alsa/sound/emu10k1.h	95;"	d
A_EXTOUT_AC97_L	alsa/sound/emu10k1.h	190;"	d
A_EXTOUT_AC97_R	alsa/sound/emu10k1.h	191;"	d
A_EXTOUT_ACENTER	alsa/sound/emu10k1.h	184;"	d
A_EXTOUT_ADC_CAP_L	alsa/sound/emu10k1.h	192;"	d
A_EXTOUT_ADC_CAP_R	alsa/sound/emu10k1.h	193;"	d
A_EXTOUT_AFRONT_L	alsa/sound/emu10k1.h	182;"	d
A_EXTOUT_AFRONT_R	alsa/sound/emu10k1.h	183;"	d
A_EXTOUT_ALFE	alsa/sound/emu10k1.h	185;"	d
A_EXTOUT_AREAR_L	alsa/sound/emu10k1.h	188;"	d
A_EXTOUT_AREAR_R	alsa/sound/emu10k1.h	189;"	d
A_EXTOUT_ASIDE_L	alsa/sound/emu10k1.h	186;"	d
A_EXTOUT_ASIDE_R	alsa/sound/emu10k1.h	187;"	d
A_EXTOUT_CENTER	alsa/sound/emu10k1.h	176;"	d
A_EXTOUT_FRONT_L	alsa/sound/emu10k1.h	174;"	d
A_EXTOUT_FRONT_R	alsa/sound/emu10k1.h	175;"	d
A_EXTOUT_HEADPHONE_L	alsa/sound/emu10k1.h	178;"	d
A_EXTOUT_HEADPHONE_R	alsa/sound/emu10k1.h	179;"	d
A_EXTOUT_LFE	alsa/sound/emu10k1.h	177;"	d
A_EXTOUT_MIC_CAP	alsa/sound/emu10k1.h	194;"	d
A_EXTOUT_REAR_L	alsa/sound/emu10k1.h	180;"	d
A_EXTOUT_REAR_R	alsa/sound/emu10k1.h	181;"	d
A_FXBUS	alsa/sound/emu10k1.h	93;"	d
A_GPR	alsa/sound/emu10k1.h	96;"	d
A_GPR_ACCU	alsa/sound/emu10k1.h	219;"	d
A_GPR_COND	alsa/sound/emu10k1.h	220;"	d
A_GPR_DBAC	alsa/sound/emu10k1.h	224;"	d
A_GPR_DBACE	alsa/sound/emu10k1.h	225;"	d
A_GPR_IRQ	alsa/sound/emu10k1.h	223;"	d
A_GPR_NOISE0	alsa/sound/emu10k1.h	221;"	d
A_GPR_NOISE1	alsa/sound/emu10k1.h	222;"	d
CC_REG_BORROW	alsa/sound/emu10k1.h	100;"	d
CC_REG_MINUS	alsa/sound/emu10k1.h	101;"	d
CC_REG_NONZERO	alsa/sound/emu10k1.h	104;"	d
CC_REG_NORMALIZED	alsa/sound/emu10k1.h	99;"	d
CC_REG_SATURATE	alsa/sound/emu10k1.h	103;"	d
CC_REG_ZERO	alsa/sound/emu10k1.h	102;"	d
C_00000000	alsa/sound/emu10k1.h	59;"	d
C_00000001	alsa/sound/emu10k1.h	60;"	d
C_00000002	alsa/sound/emu10k1.h	61;"	d
C_00000003	alsa/sound/emu10k1.h	62;"	d
C_00000004	alsa/sound/emu10k1.h	63;"	d
C_00000008	alsa/sound/emu10k1.h	64;"	d
C_00000010	alsa/sound/emu10k1.h	65;"	d
C_00000020	alsa/sound/emu10k1.h	66;"	d
C_00000100	alsa/sound/emu10k1.h	67;"	d
C_00010000	alsa/sound/emu10k1.h	68;"	d
C_00080000	alsa/sound/emu10k1.h	69;"	d
C_00100000	alsa/sound/emu10k1.h	80;"	d
C_10000000	alsa/sound/emu10k1.h	70;"	d
C_20000000	alsa/sound/emu10k1.h	71;"	d
C_40000000	alsa/sound/emu10k1.h	72;"	d
C_4f1bbcdc	alsa/sound/emu10k1.h	78;"	d
C_5a7ef9db	alsa/sound/emu10k1.h	79;"	d
C_7fffffff	alsa/sound/emu10k1.h	74;"	d
C_80000000	alsa/sound/emu10k1.h	73;"	d
C_c0000000	alsa/sound/emu10k1.h	77;"	d
C_fffffffe	alsa/sound/emu10k1.h	76;"	d
C_ffffffff	alsa/sound/emu10k1.h	75;"	d
EMU10K1_CARD_CREATIVE	alsa/sound/emu10k1.h	32;"	d
EMU10K1_CARD_EMUAPS	alsa/sound/emu10k1.h	33;"	d
EMU10K1_CTL_ELEM_IFACE_MIXER	alsa/sound/emu10k1.h	/^	EMU10K1_CTL_ELEM_IFACE_MIXER = 2,	\/* virtual mixer device *\/$/;"	e	enum:emu10k1_ctl_elem_iface
EMU10K1_CTL_ELEM_IFACE_PCM	alsa/sound/emu10k1.h	/^	EMU10K1_CTL_ELEM_IFACE_PCM = 3,		\/* PCM device *\/$/;"	e	enum:emu10k1_ctl_elem_iface
EMU10K1_DBG_CONDITION_CODE	alsa/sound/emu10k1.h	233;"	d
EMU10K1_DBG_SATURATION_ADDR	alsa/sound/emu10k1.h	230;"	d
EMU10K1_DBG_SATURATION_OCCURED	alsa/sound/emu10k1.h	229;"	d
EMU10K1_DBG_SINGLE_STEP	alsa/sound/emu10k1.h	231;"	d
EMU10K1_DBG_SINGLE_STEP_ADDR	alsa/sound/emu10k1.h	234;"	d
EMU10K1_DBG_STEP	alsa/sound/emu10k1.h	232;"	d
EMU10K1_DBG_ZC	alsa/sound/emu10k1.h	228;"	d
EMU10K1_FX8010_PCM_COUNT	alsa/sound/emu10k1.h	35;"	d
EMU10K1_GPR_TRANSLATION_BASS	alsa/sound/emu10k1.h	256;"	d
EMU10K1_GPR_TRANSLATION_NONE	alsa/sound/emu10k1.h	254;"	d
EMU10K1_GPR_TRANSLATION_ONOFF	alsa/sound/emu10k1.h	258;"	d
EMU10K1_GPR_TRANSLATION_TABLE100	alsa/sound/emu10k1.h	255;"	d
EMU10K1_GPR_TRANSLATION_TREBLE	alsa/sound/emu10k1.h	257;"	d
ETRAM_ADDR	alsa/sound/emu10k1.h	91;"	d
ETRAM_DATA	alsa/sound/emu10k1.h	89;"	d
EXTIN	alsa/sound/emu10k1.h	57;"	d
EXTIN_AC97_L	alsa/sound/emu10k1.h	125;"	d
EXTIN_AC97_R	alsa/sound/emu10k1.h	126;"	d
EXTIN_COAX_SPDIF_L	alsa/sound/emu10k1.h	135;"	d
EXTIN_COAX_SPDIF_R	alsa/sound/emu10k1.h	136;"	d
EXTIN_LINE1_L	alsa/sound/emu10k1.h	133;"	d
EXTIN_LINE1_R	alsa/sound/emu10k1.h	134;"	d
EXTIN_LINE2_L	alsa/sound/emu10k1.h	137;"	d
EXTIN_LINE2_R	alsa/sound/emu10k1.h	138;"	d
EXTIN_SPDIF_CD_L	alsa/sound/emu10k1.h	127;"	d
EXTIN_SPDIF_CD_R	alsa/sound/emu10k1.h	128;"	d
EXTIN_TOSLINK_L	alsa/sound/emu10k1.h	131;"	d
EXTIN_TOSLINK_R	alsa/sound/emu10k1.h	132;"	d
EXTIN_ZOOM_L	alsa/sound/emu10k1.h	129;"	d
EXTIN_ZOOM_R	alsa/sound/emu10k1.h	130;"	d
EXTOUT	alsa/sound/emu10k1.h	58;"	d
EXTOUT_AC97_CENTER	alsa/sound/emu10k1.h	145;"	d
EXTOUT_AC97_L	alsa/sound/emu10k1.h	141;"	d
EXTOUT_AC97_LFE	alsa/sound/emu10k1.h	146;"	d
EXTOUT_AC97_R	alsa/sound/emu10k1.h	142;"	d
EXTOUT_AC97_REAR_L	alsa/sound/emu10k1.h	154;"	d
EXTOUT_AC97_REAR_R	alsa/sound/emu10k1.h	155;"	d
EXTOUT_ACENTER	alsa/sound/emu10k1.h	156;"	d
EXTOUT_ADC_CAP_L	alsa/sound/emu10k1.h	151;"	d
EXTOUT_ADC_CAP_R	alsa/sound/emu10k1.h	152;"	d
EXTOUT_ALFE	alsa/sound/emu10k1.h	157;"	d
EXTOUT_HEADPHONE_L	alsa/sound/emu10k1.h	147;"	d
EXTOUT_HEADPHONE_R	alsa/sound/emu10k1.h	148;"	d
EXTOUT_MIC_CAP	alsa/sound/emu10k1.h	153;"	d
EXTOUT_REAR_L	alsa/sound/emu10k1.h	149;"	d
EXTOUT_REAR_R	alsa/sound/emu10k1.h	150;"	d
EXTOUT_TOSLINK_L	alsa/sound/emu10k1.h	143;"	d
EXTOUT_TOSLINK_R	alsa/sound/emu10k1.h	144;"	d
FXBUS	alsa/sound/emu10k1.h	56;"	d
FXBUS_MIDI_CHORUS	alsa/sound/emu10k1.h	118;"	d
FXBUS_MIDI_LEFT	alsa/sound/emu10k1.h	111;"	d
FXBUS_MIDI_REVERB	alsa/sound/emu10k1.h	117;"	d
FXBUS_MIDI_RIGHT	alsa/sound/emu10k1.h	112;"	d
FXBUS_PCM_CENTER	alsa/sound/emu10k1.h	113;"	d
FXBUS_PCM_LEFT	alsa/sound/emu10k1.h	107;"	d
FXBUS_PCM_LEFT_FRONT	alsa/sound/emu10k1.h	115;"	d
FXBUS_PCM_LEFT_REAR	alsa/sound/emu10k1.h	109;"	d
FXBUS_PCM_LEFT_SIDE	alsa/sound/emu10k1.h	119;"	d
FXBUS_PCM_LFE	alsa/sound/emu10k1.h	114;"	d
FXBUS_PCM_RIGHT	alsa/sound/emu10k1.h	108;"	d
FXBUS_PCM_RIGHT_FRONT	alsa/sound/emu10k1.h	116;"	d
FXBUS_PCM_RIGHT_REAR	alsa/sound/emu10k1.h	110;"	d
FXBUS_PCM_RIGHT_SIDE	alsa/sound/emu10k1.h	120;"	d
FXBUS_PT_LEFT	alsa/sound/emu10k1.h	121;"	d
FXBUS_PT_RIGHT	alsa/sound/emu10k1.h	122;"	d
GPR	alsa/sound/emu10k1.h	87;"	d
GPR_ACCU	alsa/sound/emu10k1.h	81;"	d
GPR_COND	alsa/sound/emu10k1.h	82;"	d
GPR_DBAC	alsa/sound/emu10k1.h	86;"	d
GPR_IRQ	alsa/sound/emu10k1.h	85;"	d
GPR_NOISE0	alsa/sound/emu10k1.h	83;"	d
GPR_NOISE1	alsa/sound/emu10k1.h	84;"	d
ITRAM_ADDR	alsa/sound/emu10k1.h	90;"	d
ITRAM_DATA	alsa/sound/emu10k1.h	88;"	d
SNDRV_EMU10K1_IOCTL_CODE_PEEK	alsa/sound/emu10k1.h	335;"	d
SNDRV_EMU10K1_IOCTL_CODE_POKE	alsa/sound/emu10k1.h	334;"	d
SNDRV_EMU10K1_IOCTL_CONTINUE	alsa/sound/emu10k1.h	342;"	d
SNDRV_EMU10K1_IOCTL_DBG_READ	alsa/sound/emu10k1.h	345;"	d
SNDRV_EMU10K1_IOCTL_INFO	alsa/sound/emu10k1.h	333;"	d
SNDRV_EMU10K1_IOCTL_PCM_PEEK	alsa/sound/emu10k1.h	340;"	d
SNDRV_EMU10K1_IOCTL_PCM_POKE	alsa/sound/emu10k1.h	339;"	d
SNDRV_EMU10K1_IOCTL_SINGLE_STEP	alsa/sound/emu10k1.h	344;"	d
SNDRV_EMU10K1_IOCTL_STOP	alsa/sound/emu10k1.h	341;"	d
SNDRV_EMU10K1_IOCTL_TRAM_PEEK	alsa/sound/emu10k1.h	338;"	d
SNDRV_EMU10K1_IOCTL_TRAM_POKE	alsa/sound/emu10k1.h	337;"	d
SNDRV_EMU10K1_IOCTL_TRAM_SETUP	alsa/sound/emu10k1.h	336;"	d
SNDRV_EMU10K1_IOCTL_ZERO_TRAM_COUNTER	alsa/sound/emu10k1.h	343;"	d
TANKMEMADDRREG_ADDR_MASK	alsa/sound/emu10k1.h	238;"	d
TANKMEMADDRREG_ALIGN	alsa/sound/emu10k1.h	240;"	d
TANKMEMADDRREG_CLEAR	alsa/sound/emu10k1.h	239;"	d
TANKMEMADDRREG_READ	alsa/sound/emu10k1.h	242;"	d
TANKMEMADDRREG_WRITE	alsa/sound/emu10k1.h	241;"	d
__SOUND_EMU10K1_H	alsa/sound/emu10k1.h	2;"	d
address	alsa/sound/emu10k1.h	/^	unsigned int address;		\/* 31.bit == 1 -> external TRAM *\/$/;"	m	struct:__anon72
buffer_size	alsa/sound/emu10k1.h	/^	unsigned int buffer_size;	\/* count of buffered samples *\/$/;"	m	struct:__anon73
channels	alsa/sound/emu10k1.h	/^	unsigned int channels;		\/* 16-bit channels count, zero = remove this substream *\/$/;"	m	struct:__anon73
code	alsa/sound/emu10k1.h	/^	uint32_t *code;			\/* one instruction - 64 bits *\/$/;"	m	struct:__anon71
code_valid	alsa/sound/emu10k1.h	/^	unsigned long code_valid[1024\/(sizeof(unsigned long)*8)];  \/* bitmask of valid instructions *\/$/;"	m	struct:__anon71
count	alsa/sound/emu10k1.h	/^	unsigned int count;		\/* count of GPR (1..16) *\/$/;"	m	struct:__anon70
device	alsa/sound/emu10k1.h	/^	unsigned int device;		\/* device\/client number *\/$/;"	m	struct:__anon69
emu10k1_ctl_elem_id_t	alsa/sound/emu10k1.h	/^} emu10k1_ctl_elem_id_t;$/;"	t	typeref:struct:__anon69
emu10k1_ctl_elem_iface	alsa/sound/emu10k1.h	/^enum emu10k1_ctl_elem_iface {$/;"	g
emu10k1_fx8010_code_t	alsa/sound/emu10k1.h	/^} emu10k1_fx8010_code_t;$/;"	t	typeref:struct:__anon71
emu10k1_fx8010_control_gpr_t	alsa/sound/emu10k1.h	/^} emu10k1_fx8010_control_gpr_t;$/;"	t	typeref:struct:__anon70
emu10k1_fx8010_info_t	alsa/sound/emu10k1.h	/^} emu10k1_fx8010_info_t;$/;"	t	typeref:struct:__anon68
emu10k1_fx8010_pcm_t	alsa/sound/emu10k1.h	/^} emu10k1_fx8010_pcm_t;$/;"	t	typeref:struct:__anon73
emu10k1_fx8010_tram_t	alsa/sound/emu10k1.h	/^} emu10k1_fx8010_tram_t;$/;"	t	typeref:struct:__anon72
etram	alsa/sound/emu10k1.h	/^	unsigned char etram[32];	\/* external TRAM address & data (one per channel) *\/$/;"	m	struct:__anon73
external_tram_size	alsa/sound/emu10k1.h	/^	unsigned int external_tram_size;	\/* in samples *\/$/;"	m	struct:__anon68
extin_names	alsa/sound/emu10k1.h	/^	char extin_names[16][32];		\/* names of external inputs *\/$/;"	m	struct:__anon68
extout_names	alsa/sound/emu10k1.h	/^	char extout_names[32][32];		\/* names of external outputs *\/$/;"	m	struct:__anon68
fxbus_names	alsa/sound/emu10k1.h	/^	char fxbus_names[16][32];		\/* names of FXBUSes *\/$/;"	m	struct:__anon68
gpr	alsa/sound/emu10k1.h	/^	unsigned short gpr[32];		\/* GPR number(s) *\/$/;"	m	struct:__anon70
gpr_add_control_count	alsa/sound/emu10k1.h	/^	unsigned int gpr_add_control_count; \/* count of GPR controls to add\/replace *\/$/;"	m	struct:__anon71
gpr_add_controls	alsa/sound/emu10k1.h	/^	emu10k1_fx8010_control_gpr_t *gpr_add_controls; \/* GPR controls to add\/replace *\/$/;"	m	struct:__anon71
gpr_controls	alsa/sound/emu10k1.h	/^	unsigned int gpr_controls;		\/* count of GPR controls *\/$/;"	m	struct:__anon68
gpr_count	alsa/sound/emu10k1.h	/^	unsigned short gpr_count;	\/* GPR containing count of samples between two interrupts (host) *\/$/;"	m	struct:__anon73
gpr_del_control_count	alsa/sound/emu10k1.h	/^	unsigned int gpr_del_control_count; \/* count of GPR controls to remove *\/$/;"	m	struct:__anon71
gpr_del_controls	alsa/sound/emu10k1.h	/^	emu10k1_ctl_elem_id_t *gpr_del_controls; \/* IDs of GPR controls to remove *\/$/;"	m	struct:__anon71
gpr_list_control_count	alsa/sound/emu10k1.h	/^	unsigned int gpr_list_control_count; \/* count of GPR controls to list *\/$/;"	m	struct:__anon71
gpr_list_control_total	alsa/sound/emu10k1.h	/^	unsigned int gpr_list_control_total; \/* total count of GPR controls *\/$/;"	m	struct:__anon71
gpr_list_controls	alsa/sound/emu10k1.h	/^	emu10k1_fx8010_control_gpr_t *gpr_list_controls; \/* listed GPR controls *\/$/;"	m	struct:__anon71
gpr_map	alsa/sound/emu10k1.h	/^	uint32_t *gpr_map;		  \/* initializers *\/$/;"	m	struct:__anon71
gpr_ptr	alsa/sound/emu10k1.h	/^	unsigned short gpr_ptr;		\/* GPR containing current pointer in the ring buffer (host = reset, FX8010) *\/$/;"	m	struct:__anon73
gpr_running	alsa/sound/emu10k1.h	/^	unsigned short gpr_running;	\/* GPR containing info if PCM is running (FX8010) *\/$/;"	m	struct:__anon73
gpr_size	alsa/sound/emu10k1.h	/^	unsigned short gpr_size;		\/* GPR containing size of ringbuffer in samples (host) *\/$/;"	m	struct:__anon73
gpr_tmpcount	alsa/sound/emu10k1.h	/^	unsigned short gpr_tmpcount;	\/* GPR containing current count of samples to interrupt (host = set, FX8010) *\/$/;"	m	struct:__anon73
gpr_trigger	alsa/sound/emu10k1.h	/^	unsigned short gpr_trigger;	\/* GPR containing trigger (activate) information (host) *\/$/;"	m	struct:__anon73
gpr_valid	alsa/sound/emu10k1.h	/^	unsigned long gpr_valid[0x200\/(sizeof(unsigned long)*8)]; \/* bitmask of valid initializers *\/$/;"	m	struct:__anon71
iACC3	alsa/sound/emu10k1.h	44;"	d
iANDXOR	alsa/sound/emu10k1.h	46;"	d
iEXP	alsa/sound/emu10k1.h	51;"	d
iINTERP	alsa/sound/emu10k1.h	52;"	d
iLIMITGE	alsa/sound/emu10k1.h	48;"	d
iLIMITLT	alsa/sound/emu10k1.h	49;"	d
iLOG	alsa/sound/emu10k1.h	50;"	d
iMAC0	alsa/sound/emu10k1.h	38;"	d
iMAC1	alsa/sound/emu10k1.h	39;"	d
iMAC2	alsa/sound/emu10k1.h	40;"	d
iMAC3	alsa/sound/emu10k1.h	41;"	d
iMACINT0	alsa/sound/emu10k1.h	42;"	d
iMACINT1	alsa/sound/emu10k1.h	43;"	d
iMACMV	alsa/sound/emu10k1.h	45;"	d
iSKIP	alsa/sound/emu10k1.h	53;"	d
iTSTNEG	alsa/sound/emu10k1.h	47;"	d
id	alsa/sound/emu10k1.h	/^	emu10k1_ctl_elem_id_t id;	\/* full control ID definition *\/$/;"	m	struct:__anon70
iface	alsa/sound/emu10k1.h	/^	enum emu10k1_ctl_elem_iface iface;\/* interface identifier *\/$/;"	m	struct:__anon69	typeref:enum:__anon69::emu10k1_ctl_elem_iface
index	alsa/sound/emu10k1.h	/^	unsigned int index;		\/* index of item *\/$/;"	m	struct:__anon69
internal_tram_size	alsa/sound/emu10k1.h	/^	unsigned int internal_tram_size;	\/* in samples *\/$/;"	m	struct:__anon68
max	alsa/sound/emu10k1.h	/^	unsigned int max;		\/* maximum range *\/$/;"	m	struct:__anon70
min	alsa/sound/emu10k1.h	/^	unsigned int min;		\/* minimum range *\/$/;"	m	struct:__anon70
name	alsa/sound/emu10k1.h	/^	char name[128];$/;"	m	struct:__anon71
name	alsa/sound/emu10k1.h	/^	unsigned char name[44];		\/* ASCII name of item *\/ $/;"	m	struct:__anon69
pad	alsa/sound/emu10k1.h	/^	unsigned char pad;		\/* reserved *\/$/;"	m	struct:__anon73
pad	alsa/sound/emu10k1.h	/^	unsigned int pad;		\/* don't use *\/$/;"	m	struct:__anon69
res1	alsa/sound/emu10k1.h	/^	unsigned int res1;		\/* reserved *\/$/;"	m	struct:__anon73
res2	alsa/sound/emu10k1.h	/^	unsigned int res2;		\/* reserved *\/$/;"	m	struct:__anon73
samples	alsa/sound/emu10k1.h	/^	unsigned int *samples;		\/* pointer to samples (20-bit) *\/$/;"	m	struct:__anon72
size	alsa/sound/emu10k1.h	/^	unsigned int size;		\/* size in samples (4 bytes) *\/$/;"	m	struct:__anon72
subdevice	alsa/sound/emu10k1.h	/^	unsigned int subdevice;		\/* subdevice (substream) number *\/$/;"	m	struct:__anon69
substream	alsa/sound/emu10k1.h	/^	unsigned int substream;		\/* substream number *\/$/;"	m	struct:__anon73
tram_addr_map	alsa/sound/emu10k1.h	/^	uint32_t *tram_addr_map;	\/* map initializers *\/$/;"	m	struct:__anon71
tram_data_map	alsa/sound/emu10k1.h	/^	uint32_t *tram_data_map;	\/* data initializers *\/$/;"	m	struct:__anon71
tram_start	alsa/sound/emu10k1.h	/^	unsigned int tram_start;	\/* ring buffer position in TRAM (in samples) *\/$/;"	m	struct:__anon73
tram_valid	alsa/sound/emu10k1.h	/^	unsigned long tram_valid[0x100\/(sizeof(unsigned long)*8)]; \/* bitmask of valid initializers *\/$/;"	m	struct:__anon71
translation	alsa/sound/emu10k1.h	/^	unsigned int translation;	\/* translation type (EMU10K1_GPR_TRANSLATION*) *\/$/;"	m	struct:__anon70
value	alsa/sound/emu10k1.h	/^	unsigned int value[32];		\/* initial values *\/$/;"	m	struct:__anon70
vcount	alsa/sound/emu10k1.h	/^	unsigned int vcount;		\/* visible count *\/$/;"	m	struct:__anon70
Digiface	alsa/sound/hdsp.h	/^	Digiface,$/;"	e	enum:__anon60
H9632	alsa/sound/hdsp.h	/^	H9632,$/;"	e	enum:__anon60
H9652	alsa/sound/hdsp.h	/^	H9652,$/;"	e	enum:__anon60
HDSP_IO_Type	alsa/sound/hdsp.h	/^} HDSP_IO_Type;$/;"	t	typeref:enum:__anon60
HDSP_MATRIX_MIXER_SIZE	alsa/sound/hdsp.h	24;"	d
Multiface	alsa/sound/hdsp.h	/^	Multiface,$/;"	e	enum:__anon60
SNDRV_HDSP_IOCTL_GET_9632_AEB	alsa/sound/hdsp.h	110;"	d
SNDRV_HDSP_IOCTL_GET_CONFIG_INFO	alsa/sound/hdsp.h	76;"	d
SNDRV_HDSP_IOCTL_GET_MIXER	alsa/sound/hdsp.h	101;"	d
SNDRV_HDSP_IOCTL_GET_PEAK_RMS	alsa/sound/hdsp.h	46;"	d
SNDRV_HDSP_IOCTL_GET_VERSION	alsa/sound/hdsp.h	93;"	d
SNDRV_HDSP_IOCTL_UPLOAD_FIRMWARE	alsa/sound/hdsp.h	84;"	d
Undefined	alsa/sound/hdsp.h	/^	Undefined,$/;"	e	enum:__anon60
__SOUND_HDSP_H	alsa/sound/hdsp.h	2;"	d
_snd_hdsp_9632_aeb	alsa/sound/hdsp.h	/^struct _snd_hdsp_9632_aeb {$/;"	s
_snd_hdsp_config_info	alsa/sound/hdsp.h	/^struct _snd_hdsp_config_info {$/;"	s
_snd_hdsp_firmware	alsa/sound/hdsp.h	/^struct _snd_hdsp_firmware {$/;"	s
_snd_hdsp_mixer	alsa/sound/hdsp.h	/^struct _snd_hdsp_mixer {$/;"	s
_snd_hdsp_peak_rms	alsa/sound/hdsp.h	/^struct _snd_hdsp_peak_rms {$/;"	s
_snd_hdsp_version	alsa/sound/hdsp.h	/^struct _snd_hdsp_version {$/;"	s
ad_gain	alsa/sound/hdsp.h	/^	unsigned char ad_gain;$/;"	m	struct:_snd_hdsp_config_info
adat_sync_check	alsa/sound/hdsp.h	/^	unsigned char adat_sync_check[3];$/;"	m	struct:_snd_hdsp_config_info
adatsync_sync_check	alsa/sound/hdsp.h	/^	unsigned char adatsync_sync_check;$/;"	m	struct:_snd_hdsp_config_info
aebi	alsa/sound/hdsp.h	/^	int aebi;$/;"	m	struct:_snd_hdsp_9632_aeb
aebo	alsa/sound/hdsp.h	/^	int aebo;$/;"	m	struct:_snd_hdsp_9632_aeb
analog_extension_board	alsa/sound/hdsp.h	/^	unsigned char analog_extension_board;$/;"	m	struct:_snd_hdsp_config_info
autosync_ref	alsa/sound/hdsp.h	/^	unsigned char autosync_ref;$/;"	m	struct:_snd_hdsp_config_info
autosync_sample_rate	alsa/sound/hdsp.h	/^	unsigned int autosync_sample_rate;$/;"	m	struct:_snd_hdsp_config_info
clock_source	alsa/sound/hdsp.h	/^	unsigned char clock_source;$/;"	m	struct:_snd_hdsp_config_info
da_gain	alsa/sound/hdsp.h	/^	unsigned char da_gain;$/;"	m	struct:_snd_hdsp_config_info
firmware_data	alsa/sound/hdsp.h	/^	void *firmware_data;	\/* 24413 x 4 bytes *\/$/;"	m	struct:_snd_hdsp_firmware
firmware_rev	alsa/sound/hdsp.h	/^	unsigned short firmware_rev;$/;"	m	struct:_snd_hdsp_version
hdsp_9632_aeb_t	alsa/sound/hdsp.h	/^typedef struct _snd_hdsp_9632_aeb hdsp_9632_aeb_t;$/;"	t	typeref:struct:_snd_hdsp_9632_aeb
hdsp_config_info_t	alsa/sound/hdsp.h	/^typedef struct _snd_hdsp_config_info hdsp_config_info_t;$/;"	t	typeref:struct:_snd_hdsp_config_info
hdsp_firmware_t	alsa/sound/hdsp.h	/^typedef struct _snd_hdsp_firmware hdsp_firmware_t;$/;"	t	typeref:struct:_snd_hdsp_firmware
hdsp_mixer_t	alsa/sound/hdsp.h	/^typedef struct _snd_hdsp_mixer hdsp_mixer_t;$/;"	t	typeref:struct:_snd_hdsp_mixer
hdsp_peak_rms_t	alsa/sound/hdsp.h	/^typedef struct _snd_hdsp_peak_rms hdsp_peak_rms_t;$/;"	t	typeref:struct:_snd_hdsp_peak_rms
hdsp_version_t	alsa/sound/hdsp.h	/^typedef struct _snd_hdsp_version hdsp_version_t;$/;"	t	typeref:struct:_snd_hdsp_version
input_peaks	alsa/sound/hdsp.h	/^	uint32_t input_peaks[26];$/;"	m	struct:_snd_hdsp_peak_rms
input_rms	alsa/sound/hdsp.h	/^	uint64_t input_rms[26];$/;"	m	struct:_snd_hdsp_peak_rms
io_type	alsa/sound/hdsp.h	/^	HDSP_IO_Type io_type;$/;"	m	struct:_snd_hdsp_version
line_out	alsa/sound/hdsp.h	/^	unsigned char line_out;$/;"	m	struct:_snd_hdsp_config_info
matrix	alsa/sound/hdsp.h	/^	unsigned short matrix[HDSP_MATRIX_MIXER_SIZE];$/;"	m	struct:_snd_hdsp_mixer
output_peaks	alsa/sound/hdsp.h	/^	uint32_t output_peaks[28];$/;"	m	struct:_snd_hdsp_peak_rms
output_rms	alsa/sound/hdsp.h	/^	uint64_t output_rms[26];$/;"	m	struct:_snd_hdsp_peak_rms
passthru	alsa/sound/hdsp.h	/^	unsigned char passthru; $/;"	m	struct:_snd_hdsp_config_info
phone_gain	alsa/sound/hdsp.h	/^	unsigned char phone_gain;$/;"	m	struct:_snd_hdsp_config_info
playback_peaks	alsa/sound/hdsp.h	/^	uint32_t playback_peaks[26];$/;"	m	struct:_snd_hdsp_peak_rms
playback_rms	alsa/sound/hdsp.h	/^	uint64_t playback_rms[26];$/;"	m	struct:_snd_hdsp_peak_rms
pref_sync_ref	alsa/sound/hdsp.h	/^	unsigned char pref_sync_ref;$/;"	m	struct:_snd_hdsp_config_info
spdif_emphasis	alsa/sound/hdsp.h	/^	unsigned char spdif_emphasis;$/;"	m	struct:_snd_hdsp_config_info
spdif_in	alsa/sound/hdsp.h	/^	unsigned char spdif_in;$/;"	m	struct:_snd_hdsp_config_info
spdif_nonaudio	alsa/sound/hdsp.h	/^	unsigned char spdif_nonaudio;$/;"	m	struct:_snd_hdsp_config_info
spdif_out	alsa/sound/hdsp.h	/^	unsigned char spdif_out;$/;"	m	struct:_snd_hdsp_config_info
spdif_professional	alsa/sound/hdsp.h	/^	unsigned char spdif_professional;$/;"	m	struct:_snd_hdsp_config_info
spdif_sample_rate	alsa/sound/hdsp.h	/^	unsigned int spdif_sample_rate;$/;"	m	struct:_snd_hdsp_config_info
spdif_sync_check	alsa/sound/hdsp.h	/^	unsigned char spdif_sync_check;$/;"	m	struct:_snd_hdsp_config_info
system_clock_mode	alsa/sound/hdsp.h	/^	unsigned char system_clock_mode;$/;"	m	struct:_snd_hdsp_config_info
system_sample_rate	alsa/sound/hdsp.h	/^	unsigned int system_sample_rate;$/;"	m	struct:_snd_hdsp_config_info
wordclock_sync_check	alsa/sound/hdsp.h	/^	unsigned char wordclock_sync_check;$/;"	m	struct:_snd_hdsp_config_info
xlr_breakout_cable	alsa/sound/hdsp.h	/^	unsigned char xlr_breakout_cable;$/;"	m	struct:_snd_hdsp_config_info
SNDRV_SB_CSP_IOCTL_INFO	alsa/sound/sb16_csp.h	100;"	d
SNDRV_SB_CSP_IOCTL_LOAD_CODE	alsa/sound/sb16_csp.h	102;"	d
SNDRV_SB_CSP_IOCTL_PAUSE	alsa/sound/sb16_csp.h	110;"	d
SNDRV_SB_CSP_IOCTL_RESTART	alsa/sound/sb16_csp.h	112;"	d
SNDRV_SB_CSP_IOCTL_START	alsa/sound/sb16_csp.h	106;"	d
SNDRV_SB_CSP_IOCTL_STOP	alsa/sound/sb16_csp.h	108;"	d
SNDRV_SB_CSP_IOCTL_UNLOAD_CODE	alsa/sound/sb16_csp.h	104;"	d
SNDRV_SB_CSP_LOAD_FROMUSER	alsa/sound/sb16_csp.h	33;"	d
SNDRV_SB_CSP_LOAD_INITBLOCK	alsa/sound/sb16_csp.h	34;"	d
SNDRV_SB_CSP_MAX_MICROCODE_FILE_SIZE	alsa/sound/sb16_csp.h	63;"	d
SNDRV_SB_CSP_MODE_DSP_READ	alsa/sound/sb16_csp.h	28;"	d
SNDRV_SB_CSP_MODE_DSP_WRITE	alsa/sound/sb16_csp.h	29;"	d
SNDRV_SB_CSP_MODE_NONE	alsa/sound/sb16_csp.h	27;"	d
SNDRV_SB_CSP_MODE_QSOUND	alsa/sound/sb16_csp.h	30;"	d
SNDRV_SB_CSP_MONO	alsa/sound/sb16_csp.h	41;"	d
SNDRV_SB_CSP_QSOUND_MAX_RIGHT	alsa/sound/sb16_csp.h	60;"	d
SNDRV_SB_CSP_RATE_11025	alsa/sound/sb16_csp.h	46;"	d
SNDRV_SB_CSP_RATE_22050	alsa/sound/sb16_csp.h	47;"	d
SNDRV_SB_CSP_RATE_44100	alsa/sound/sb16_csp.h	48;"	d
SNDRV_SB_CSP_RATE_8000	alsa/sound/sb16_csp.h	45;"	d
SNDRV_SB_CSP_RATE_ALL	alsa/sound/sb16_csp.h	49;"	d
SNDRV_SB_CSP_SAMPLE_16BIT	alsa/sound/sb16_csp.h	38;"	d
SNDRV_SB_CSP_SAMPLE_8BIT	alsa/sound/sb16_csp.h	37;"	d
SNDRV_SB_CSP_STEREO	alsa/sound/sb16_csp.h	42;"	d
SNDRV_SB_CSP_ST_AUTO	alsa/sound/sb16_csp.h	56;"	d
SNDRV_SB_CSP_ST_IDLE	alsa/sound/sb16_csp.h	52;"	d
SNDRV_SB_CSP_ST_LOADED	alsa/sound/sb16_csp.h	53;"	d
SNDRV_SB_CSP_ST_PAUSED	alsa/sound/sb16_csp.h	55;"	d
SNDRV_SB_CSP_ST_QSOUND	alsa/sound/sb16_csp.h	57;"	d
SNDRV_SB_CSP_ST_RUNNING	alsa/sound/sb16_csp.h	54;"	d
__SOUND_SB16_CSP_H	alsa/sound/sb16_csp.h	2;"	d
acc_channels	alsa/sound/sb16_csp.h	/^	unsigned short acc_channels;	\/* accepted channels *\/$/;"	m	struct:snd_sb_csp_info
acc_format	alsa/sound/sb16_csp.h	/^	unsigned int acc_format;	\/* accepted PCM formats *\/$/;"	m	struct:snd_sb_csp_info
acc_rates	alsa/sound/sb16_csp.h	/^	unsigned short acc_rates;	\/* accepted sample rates *\/$/;"	m	struct:snd_sb_csp_info
acc_width	alsa/sound/sb16_csp.h	/^	unsigned short acc_width;	\/* accepted sample width *\/$/;"	m	struct:snd_sb_csp_info
channels	alsa/sound/sb16_csp.h	/^	int channels;		\/* channels, look above *\/$/;"	m	struct:snd_sb_csp_start
codec_name	alsa/sound/sb16_csp.h	/^	char codec_name[16];		\/* id name of codec *\/$/;"	m	struct:snd_sb_csp_info
codec_name	alsa/sound/sb16_csp.h	/^	char codec_name[16];		\/* id name of codec *\/$/;"	m	struct:snd_sb_csp_mc_header
csp_mode	alsa/sound/sb16_csp.h	/^	unsigned short csp_mode;	\/* CSP mode, see above *\/$/;"	m	struct:snd_sb_csp_info
data	alsa/sound/sb16_csp.h	/^	unsigned char data[SNDRV_SB_CSP_MAX_MICROCODE_FILE_SIZE];$/;"	m	struct:snd_sb_csp_microcode
func_nr	alsa/sound/sb16_csp.h	/^	unsigned short func_nr;		\/* function number *\/$/;"	m	struct:snd_sb_csp_info
func_req	alsa/sound/sb16_csp.h	/^	unsigned short func_req;	\/* requested function *\/$/;"	m	struct:snd_sb_csp_mc_header
info	alsa/sound/sb16_csp.h	/^	snd_sb_csp_mc_header_t info;$/;"	m	struct:snd_sb_csp_microcode
run_channels	alsa/sound/sb16_csp.h	/^	unsigned short run_channels;	\/* current channels  *\/$/;"	m	struct:snd_sb_csp_info
run_width	alsa/sound/sb16_csp.h	/^	unsigned short run_width;	\/* current sample width *\/$/;"	m	struct:snd_sb_csp_info
sample_width	alsa/sound/sb16_csp.h	/^	int sample_width;	\/* sample width, look above *\/$/;"	m	struct:snd_sb_csp_start
snd_sb_csp_info	alsa/sound/sb16_csp.h	/^typedef struct snd_sb_csp_info {$/;"	s
snd_sb_csp_info_t	alsa/sound/sb16_csp.h	/^} snd_sb_csp_info_t;$/;"	t	typeref:struct:snd_sb_csp_info
snd_sb_csp_mc_header	alsa/sound/sb16_csp.h	/^typedef struct snd_sb_csp_mc_header {$/;"	s
snd_sb_csp_mc_header_t	alsa/sound/sb16_csp.h	/^} snd_sb_csp_mc_header_t;$/;"	t	typeref:struct:snd_sb_csp_mc_header
snd_sb_csp_microcode	alsa/sound/sb16_csp.h	/^typedef struct snd_sb_csp_microcode {$/;"	s
snd_sb_csp_microcode_t	alsa/sound/sb16_csp.h	/^} snd_sb_csp_microcode_t;$/;"	t	typeref:struct:snd_sb_csp_microcode
snd_sb_csp_start	alsa/sound/sb16_csp.h	/^typedef struct snd_sb_csp_start {$/;"	s
snd_sb_csp_start_t	alsa/sound/sb16_csp.h	/^} snd_sb_csp_start_t;$/;"	t	typeref:struct:snd_sb_csp_start
state	alsa/sound/sb16_csp.h	/^	unsigned short state;		\/* state bits *\/$/;"	m	struct:snd_sb_csp_info
version	alsa/sound/sb16_csp.h	/^	unsigned short version;		\/* version id: 0x10 - 0x1f *\/$/;"	m	struct:snd_sb_csp_info
SND_SSCAPE_LOAD_BOOTB	alsa/sound/sscape_ioctl.h	18;"	d
SND_SSCAPE_LOAD_MCODE	alsa/sound/sscape_ioctl.h	19;"	d
SSCAPE_IOCTL_H	alsa/sound/sscape_ioctl.h	2;"	d
SSCAPE_MICROCODE_SIZE	alsa/sound/sscape_ioctl.h	11;"	d
code	alsa/sound/sscape_ioctl.h	/^  unsigned char *code;$/;"	m	struct:sscape_microcode
code	alsa/sound/sscape_ioctl.h	/^  unsigned char code[256];$/;"	m	struct:sscape_bootblock
sscape_bootblock	alsa/sound/sscape_ioctl.h	/^struct sscape_bootblock$/;"	s
sscape_microcode	alsa/sound/sscape_ioctl.h	/^struct sscape_microcode$/;"	s
version	alsa/sound/sscape_ioctl.h	/^  unsigned version;$/;"	m	struct:sscape_bootblock
SND_TIMER_CLASS_CARD	alsa/timer.h	/^	SND_TIMER_CLASS_CARD,		\/**< card timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_GLOBAL	alsa/timer.h	/^	SND_TIMER_CLASS_GLOBAL,		\/**< global timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_LAST	alsa/timer.h	/^	SND_TIMER_CLASS_LAST = SND_TIMER_CLASS_PCM	\/**< last timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_NONE	alsa/timer.h	/^	SND_TIMER_CLASS_NONE = -1,	\/**< invalid *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_PCM	alsa/timer.h	/^	SND_TIMER_CLASS_PCM,		\/**< PCM timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_CLASS_SLAVE	alsa/timer.h	/^	SND_TIMER_CLASS_SLAVE = 0,	\/**< slave timer *\/$/;"	e	enum:_snd_timer_class
SND_TIMER_DLSYM_VERSION	alsa/timer.h	42;"	d
SND_TIMER_EVENT_CONTINUE	alsa/timer.h	/^	SND_TIMER_EVENT_CONTINUE,	\/* val = resolution in ns *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_EARLY	alsa/timer.h	/^	SND_TIMER_EVENT_EARLY,		\/* val = 0 *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MCONTINUE	alsa/timer.h	/^	SND_TIMER_EVENT_MCONTINUE = SND_TIMER_EVENT_CONTINUE + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MPAUSE	alsa/timer.h	/^	SND_TIMER_EVENT_MPAUSE = SND_TIMER_EVENT_PAUSE + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MSTART	alsa/timer.h	/^	SND_TIMER_EVENT_MSTART = SND_TIMER_EVENT_START + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_MSTOP	alsa/timer.h	/^	SND_TIMER_EVENT_MSTOP = SND_TIMER_EVENT_STOP + 10,$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_PAUSE	alsa/timer.h	/^	SND_TIMER_EVENT_PAUSE,		\/* val = 0 *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_RESOLUTION	alsa/timer.h	/^	SND_TIMER_EVENT_RESOLUTION = 0,	\/* val = resolution in ns *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_START	alsa/timer.h	/^	SND_TIMER_EVENT_START,		\/* val = resolution in ns *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_STOP	alsa/timer.h	/^	SND_TIMER_EVENT_STOP,		\/* val = 0 *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_EVENT_TICK	alsa/timer.h	/^	SND_TIMER_EVENT_TICK,		\/* val = ticks *\/$/;"	e	enum:_snd_timer_event
SND_TIMER_GLOBAL_HPET	alsa/timer.h	113;"	d
SND_TIMER_GLOBAL_RTC	alsa/timer.h	111;"	d
SND_TIMER_GLOBAL_SYSTEM	alsa/timer.h	109;"	d
SND_TIMER_OPEN_NONBLOCK	alsa/timer.h	116;"	d
SND_TIMER_OPEN_TREAD	alsa/timer.h	118;"	d
SND_TIMER_QUERY_DLSYM_VERSION	alsa/timer.h	44;"	d
SND_TIMER_SCLASS_APPLICATION	alsa/timer.h	/^	SND_TIMER_SCLASS_APPLICATION,		\/**< for internal use *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_LAST	alsa/timer.h	/^	SND_TIMER_SCLASS_LAST = SND_TIMER_SCLASS_OSS_SEQUENCER	\/**< last slave timer *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_NONE	alsa/timer.h	/^	SND_TIMER_SCLASS_NONE = 0,		\/**< none *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_OSS_SEQUENCER	alsa/timer.h	/^	SND_TIMER_SCLASS_OSS_SEQUENCER,		\/**< OSS sequencer timer *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_SCLASS_SEQUENCER	alsa/timer.h	/^	SND_TIMER_SCLASS_SEQUENCER,		\/**< sequencer timer *\/$/;"	e	enum:_snd_timer_slave_class
SND_TIMER_TYPE_HW	alsa/timer.h	/^	SND_TIMER_TYPE_HW = 0,$/;"	e	enum:_snd_timer_type
SND_TIMER_TYPE_INET	alsa/timer.h	/^	SND_TIMER_TYPE_INET$/;"	e	enum:_snd_timer_type
SND_TIMER_TYPE_SHM	alsa/timer.h	/^	SND_TIMER_TYPE_SHM,$/;"	e	enum:_snd_timer_type
__ALSA_TIMER_H	alsa/timer.h	29;"	d
_snd_timer_class	alsa/timer.h	/^typedef enum _snd_timer_class {$/;"	g
_snd_timer_event	alsa/timer.h	/^typedef enum _snd_timer_event {$/;"	g
_snd_timer_read	alsa/timer.h	/^typedef struct _snd_timer_read {$/;"	s
_snd_timer_slave_class	alsa/timer.h	/^typedef enum _snd_timer_slave_class {$/;"	g
_snd_timer_tread	alsa/timer.h	/^typedef struct _snd_timer_tread {$/;"	s
_snd_timer_type	alsa/timer.h	/^typedef enum _snd_timer_type {$/;"	g
event	alsa/timer.h	/^	snd_timer_event_t event;	\/**< Timer event *\/$/;"	m	struct:_snd_timer_tread
resolution	alsa/timer.h	/^	unsigned int resolution;	\/**< tick resolution in nanoseconds *\/$/;"	m	struct:_snd_timer_read
snd_timer_class_t	alsa/timer.h	/^} snd_timer_class_t;$/;"	t	typeref:enum:_snd_timer_class
snd_timer_event_t	alsa/timer.h	/^} snd_timer_event_t;$/;"	t	typeref:enum:_snd_timer_event
snd_timer_ginfo_alloca	alsa/timer.h	181;"	d
snd_timer_ginfo_t	alsa/timer.h	/^typedef struct _snd_timer_ginfo snd_timer_ginfo_t;$/;"	t	typeref:struct:_snd_timer_ginfo
snd_timer_gparams_t	alsa/timer.h	/^typedef struct _snd_timer_gparams snd_timer_gparams_t;$/;"	t	typeref:struct:_snd_timer_gparams
snd_timer_gstatus_t	alsa/timer.h	/^typedef struct _snd_timer_gstatus snd_timer_gstatus_t;$/;"	t	typeref:struct:_snd_timer_gstatus
snd_timer_id_alloca	alsa/timer.h	163;"	d
snd_timer_id_t	alsa/timer.h	/^typedef struct _snd_timer_id snd_timer_id_t;$/;"	t	typeref:struct:_snd_timer_id
snd_timer_info_alloca	alsa/timer.h	199;"	d
snd_timer_info_t	alsa/timer.h	/^typedef struct _snd_timer_info snd_timer_info_t;$/;"	t	typeref:struct:_snd_timer_info
snd_timer_params_alloca	alsa/timer.h	212;"	d
snd_timer_params_t	alsa/timer.h	/^typedef struct _snd_timer_params snd_timer_params_t;$/;"	t	typeref:struct:_snd_timer_params
snd_timer_query_t	alsa/timer.h	/^typedef struct _snd_timer_query snd_timer_query_t;$/;"	t	typeref:struct:_snd_timer_query
snd_timer_read_t	alsa/timer.h	/^} snd_timer_read_t;$/;"	t	typeref:struct:_snd_timer_read
snd_timer_slave_class_t	alsa/timer.h	/^} snd_timer_slave_class_t;$/;"	t	typeref:enum:_snd_timer_slave_class
snd_timer_status_alloca	alsa/timer.h	232;"	d
snd_timer_status_t	alsa/timer.h	/^typedef struct _snd_timer_status snd_timer_status_t;$/;"	t	typeref:struct:_snd_timer_status
snd_timer_t	alsa/timer.h	/^typedef struct _snd_timer snd_timer_t;$/;"	t	typeref:struct:_snd_timer
snd_timer_tread_t	alsa/timer.h	/^} snd_timer_tread_t;$/;"	t	typeref:struct:_snd_timer_tread
snd_timer_type_t	alsa/timer.h	/^} snd_timer_type_t;$/;"	t	typeref:enum:_snd_timer_type
ticks	alsa/timer.h	/^        unsigned int ticks;		\/**< count of happened ticks *\/$/;"	m	struct:_snd_timer_read
tstamp	alsa/timer.h	/^	snd_htimestamp_t tstamp;	\/**< Time stamp of each event *\/$/;"	m	struct:_snd_timer_tread
val	alsa/timer.h	/^	unsigned int val;		\/**< Event value *\/$/;"	m	struct:_snd_timer_tread
SND_LIB_EXTRAVER	alsa/version.h	8;"	d
SND_LIB_MAJOR	alsa/version.h	5;"	d
SND_LIB_MINOR	alsa/version.h	6;"	d
SND_LIB_SUBMINOR	alsa/version.h	7;"	d
SND_LIB_VERSION	alsa/version.h	10;"	d
SND_LIB_VERSION_STR	alsa/version.h	14;"	d
CapMask	audio.h	/^static int CapMask;$/;"	v
FMT16BITS	audio.h	5;"	d
FMT16K	audio.h	7;"	d
FMT22K	audio.h	8;"	d
FMT44K	audio.h	9;"	d
FMT8BITS	audio.h	4;"	d
FMT8K	audio.h	6;"	d
MONO	audio.h	10;"	d
RECORD_H	audio.h	2;"	d
STERO	audio.h	11;"	d
dsp_fd	audio.h	/^static int dsp_fd;$/;"	v
mixer_fd	audio.h	/^static int mixer_fd;$/;"	v
ACELP_Code_A	g729a_src/acelp_ca.c	/^Word16  ACELP_Code_A(    \/* (o)     :index of pulses positions    *\/$/;"	f
Cor_h	g729a_src/acelp_ca.c	/^static void Cor_h($/;"	f	file:
D4i40_17_fast	g729a_src/acelp_ca.c	/^static Word16 D4i40_17_fast(\/*(o) : Index of pulses positions.               *\/$/;"	f	file:
Carry	g729a_src/basic_op.c	/^Flag Carry =0;$/;"	v
L_abs	g729a_src/basic_op.c	/^Word32 L_abs(Word32 L_var1)$/;"	f
L_add	g729a_src/basic_op.c	/^Word32 L_add(Word32 L_var1, Word32 L_var2)$/;"	f
L_add_c	g729a_src/basic_op.c	/^Word32 L_add_c(Word32 L_var1, Word32 L_var2)$/;"	f
L_deposit_h	g729a_src/basic_op.c	/^Word32 L_deposit_h(Word16 var1)$/;"	f
L_deposit_l	g729a_src/basic_op.c	/^Word32 L_deposit_l(Word16 var1)$/;"	f
L_mac	g729a_src/basic_op.c	/^Word32 L_mac(Word32 L_var3, Word16 var1, Word16 var2)$/;"	f
L_macNs	g729a_src/basic_op.c	/^Word32 L_macNs(Word32 L_var3, Word16 var1, Word16 var2)$/;"	f
L_msu	g729a_src/basic_op.c	/^Word32 L_msu(Word32 L_var3, Word16 var1, Word16 var2)$/;"	f
L_msuNs	g729a_src/basic_op.c	/^Word32 L_msuNs(Word32 L_var3, Word16 var1, Word16 var2)$/;"	f
L_mult	g729a_src/basic_op.c	/^Word32 L_mult(Word16 var1,Word16 var2)$/;"	f
L_negate	g729a_src/basic_op.c	/^Word32 L_negate(Word32 L_var1)$/;"	f
L_sat	g729a_src/basic_op.c	/^Word32 L_sat (Word32 L_var1)$/;"	f
L_shl	g729a_src/basic_op.c	/^Word32 L_shl(Word32 L_var1, Word16 var2)$/;"	f
L_shr	g729a_src/basic_op.c	/^Word32 L_shr(Word32 L_var1, Word16 var2)$/;"	f
L_shr_r	g729a_src/basic_op.c	/^Word32 L_shr_r(Word32 L_var1,Word16 var2)$/;"	f
L_sub	g729a_src/basic_op.c	/^Word32 L_sub(Word32 L_var1, Word32 L_var2)$/;"	f
L_sub_c	g729a_src/basic_op.c	/^Word32 L_sub_c(Word32 L_var1, Word32 L_var2)$/;"	f
Overflow	g729a_src/basic_op.c	/^Flag Overflow =0;$/;"	v
abs_s	g729a_src/basic_op.c	/^Word16 abs_s(Word16 var1)$/;"	f
add	g729a_src/basic_op.c	/^Word16 add(Word16 var1,Word16 var2)$/;"	f
div_s	g729a_src/basic_op.c	/^Word16 div_s(Word16 var1, Word16 var2)$/;"	f
extract_h	g729a_src/basic_op.c	/^Word16 extract_h(Word32 L_var1)$/;"	f
extract_l	g729a_src/basic_op.c	/^Word16 extract_l(Word32 L_var1)$/;"	f
mac_r	g729a_src/basic_op.c	/^Word16 mac_r(Word32 L_var3, Word16 var1, Word16 var2)$/;"	f
msu_r	g729a_src/basic_op.c	/^Word16 msu_r(Word32 L_var3, Word16 var1, Word16 var2)$/;"	f
mult	g729a_src/basic_op.c	/^Word16 mult(Word16 var1, Word16 var2)$/;"	f
mult_r	g729a_src/basic_op.c	/^Word16 mult_r(Word16 var1, Word16 var2)$/;"	f
negate	g729a_src/basic_op.c	/^Word16 negate(Word16 var1)$/;"	f
norm_l	g729a_src/basic_op.c	/^Word16 norm_l(Word32 L_var1)$/;"	f
norm_s	g729a_src/basic_op.c	/^Word16 norm_s(Word16 var1)$/;"	f
round	g729a_src/basic_op.c	/^Word16 round(Word32 L_var1)$/;"	f
sature	g729a_src/basic_op.c	/^Word16 sature(Word32 L_var1)$/;"	f
shl	g729a_src/basic_op.c	/^Word16 shl(Word16 var1,Word16 var2)$/;"	f
shr	g729a_src/basic_op.c	/^Word16 shr(Word16 var1,Word16 var2)$/;"	f
shr_r	g729a_src/basic_op.c	/^Word16 shr_r(Word16 var1, Word16 var2)$/;"	f
sub	g729a_src/basic_op.c	/^Word16 sub(Word16 var1,Word16 var2)$/;"	f
MAX_16	g729a_src/basic_op.h	13;"	d
MAX_32	g729a_src/basic_op.h	10;"	d
MIN_16	g729a_src/basic_op.h	14;"	d
MIN_32	g729a_src/basic_op.h	11;"	d
bit2byte	g729a_src/bits.c	/^void bit2byte(Word16 para,int bitlen,unsigned char * bits,int bitpos)$/;"	f
bits2prm_ld8k	g729a_src/bits.c	/^void bits2prm_ld8k(unsigned char *bits,Word16 *para)$/;"	f
byte2bit	g729a_src/bits.c	/^Word16 byte2bit(int bitlen,unsigned char * bits,int bitpos)$/;"	f
prm2bits_ld8k	g729a_src/bits.c	/^void prm2bits_ld8k(Word16 *para,unsigned char *bits)$/;"	f
Coder_ld8a	g729a_src/cod_ld8a.c	/^void Coder_ld8a($/;"	f
Init_Coder_ld8a	g729a_src/cod_ld8a.c	/^void Init_Coder_ld8a(void)$/;"	f
exc	g729a_src/cod_ld8a.c	/^ static Word16 *exc;$/;"	v	file:
lsp_old	g729a_src/cod_ld8a.c	/^ static Word16 lsp_old[M]={$/;"	v	file:
lsp_old_q	g729a_src/cod_ld8a.c	/^ static Word16 lsp_old_q[M];$/;"	v	file:
mem_w	g729a_src/cod_ld8a.c	/^ static Word16  mem_w0[M], mem_w[M], mem_zero[M];$/;"	v	file:
mem_w0	g729a_src/cod_ld8a.c	/^ static Word16  mem_w0[M], mem_w[M], mem_zero[M];$/;"	v	file:
mem_zero	g729a_src/cod_ld8a.c	/^ static Word16  mem_w0[M], mem_w[M], mem_zero[M];$/;"	v	file:
new_speech	g729a_src/cod_ld8a.c	/^ Word16 *new_speech;                    \/* Global variable *\/$/;"	v
old_exc	g729a_src/cod_ld8a.c	/^ static Word16 old_exc[L_FRAME+PIT_MAX+L_INTERPOL];$/;"	v	file:
old_speech	g729a_src/cod_ld8a.c	/^ static Word16 old_speech[L_TOTAL];$/;"	v	file:
old_wsp	g729a_src/cod_ld8a.c	/^ static Word16 old_wsp[L_FRAME+PIT_MAX];$/;"	v	file:
p_window	g729a_src/cod_ld8a.c	/^ static Word16 *speech, *p_window;$/;"	v	file:
sharp	g729a_src/cod_ld8a.c	/^ static Word16  sharp;$/;"	v	file:
speech	g729a_src/cod_ld8a.c	/^ static Word16 *speech, *p_window;$/;"	v	file:
wsp	g729a_src/cod_ld8a.c	/^ static Word16 *wsp;$/;"	v	file:
Cor_h_X	g729a_src/cor_func.c	/^void Cor_h_X($/;"	f
Corr_xy2	g729a_src/cor_func.c	/^void Corr_xy2($/;"	f
Decod_ACELP	g729a_src/de_acelp.c	/^void Decod_ACELP($/;"	f
Dec_gain	g729a_src/dec_gain.c	/^void Dec_gain($/;"	f
Dec_lag3	g729a_src/dec_lag3.c	/^void Dec_lag3($/;"	f
Decod_ld8a	g729a_src/dec_ld8a.c	/^void Decod_ld8a($/;"	f
Init_Decod_ld8a	g729a_src/dec_ld8a.c	/^void Init_Decod_ld8a(void)$/;"	f
exc	g729a_src/dec_ld8a.c	/^ static Word16 *exc;$/;"	v	file:
gain_code	g729a_src/dec_ld8a.c	/^ static Word16 gain_code;       \/* Code gain                          *\/$/;"	v	file:
gain_pitch	g729a_src/dec_ld8a.c	/^ static Word16 gain_pitch;      \/* Pitch gain                         *\/$/;"	v	file:
lsp_old	g729a_src/dec_ld8a.c	/^ static Word16 lsp_old[M]={$/;"	v	file:
mem_syn	g729a_src/dec_ld8a.c	/^ static Word16 mem_syn[M];$/;"	v	file:
old_T0	g729a_src/dec_ld8a.c	/^ static Word16 old_T0;          \/* integer delay of previous frame    *\/$/;"	v	file:
old_exc	g729a_src/dec_ld8a.c	/^ static Word16 old_exc[L_FRAME+PIT_MAX+L_INTERPOL];$/;"	v	file:
sharp	g729a_src/dec_ld8a.c	/^ static Word16 sharp;           \/* pitch sharpening of previous frame *\/$/;"	v	file:
Inv_sqrt	g729a_src/dspfunc.c	/^Word32 Inv_sqrt(   \/* (o) Q30 : output value   (range: 0<=val<1)           *\/$/;"	f
Log2	g729a_src/dspfunc.c	/^void Log2($/;"	f
Pow2	g729a_src/dspfunc.c	/^Word32 Pow2(        \/* (o) Q0  : result       (range: 0<=val<=0x7fffffff) *\/$/;"	f
Convolve	g729a_src/filter.c	/^void Convolve($/;"	f
Residu	g729a_src/filter.c	/^void Residu($/;"	f
Syn_filt	g729a_src/filter.c	/^void Syn_filt($/;"	f
MAX_16	g729a_src/g729a/basic_op.h	13;"	d
MAX_32	g729a_src/g729a/basic_op.h	10;"	d
MIN_16	g729a_src/g729a/basic_op.h	14;"	d
MIN_32	g729a_src/g729a/basic_op.h	11;"	d
AGC_FAC	g729a_src/g729a/ld8a.h	551;"	d
AGC_FAC1	g729a_src/g729a/ld8a.h	552;"	d
BIT_0	g729a_src/g729a/ld8a.h	531;"	d
BIT_1	g729a_src/g729a/ld8a.h	532;"	d
CONST10	g729a_src/g729a/ld8a.h	308;"	d
CONST12	g729a_src/g729a/ld8a.h	309;"	d
DIM_RR	g729a_src/g729a/ld8a.h	258;"	d
FIR_SIZE_SYN	g729a_src/g729a/ld8a.h	176;"	d
GAMMA1	g729a_src/g729a/ld8a.h	22;"	d
GAMMA1_PST	g729a_src/g729a/ld8a.h	548;"	d
GAMMA2_PST	g729a_src/g729a/ld8a.h	547;"	d
GAMMAP	g729a_src/g729a/ld8a.h	543;"	d
GAMMAP_2	g729a_src/g729a/ld8a.h	545;"	d
GAP1	g729a_src/g729a/ld8a.h	301;"	d
GAP2	g729a_src/g729a/ld8a.h	302;"	d
GAP3	g729a_src/g729a/ld8a.h	303;"	d
GP0999	g729a_src/g729a/ld8a.h	590;"	d
GPCLIP	g729a_src/g729a/ld8a.h	588;"	d
GPCLIP2	g729a_src/g729a/ld8a.h	589;"	d
GRID_POINTS	g729a_src/g729a/ld8a.h	304;"	d
INV_COEF	g729a_src/g729a/ld8a.h	474;"	d
INV_GAMMAP	g729a_src/g729a/ld8a.h	544;"	d
L_FRAME	g729a_src/g729a/ld8a.h	15;"	d
L_H	g729a_src/g729a/ld8a.h	541;"	d
L_INTER10	g729a_src/g729a/ld8a.h	175;"	d
L_INTERPOL	g729a_src/g729a/ld8a.h	21;"	d
L_LIMIT	g729a_src/g729a/ld8a.h	298;"	d
L_NEXT	g729a_src/g729a/ld8a.h	14;"	d
L_SUBFR	g729a_src/g729a/ld8a.h	16;"	d
L_THRESH_ERR	g729a_src/g729a/ld8a.h	591;"	d
L_TOTAL	g729a_src/g729a/ld8a.h	12;"	d
L_WINDOW	g729a_src/g729a/ld8a.h	13;"	d
M	g729a_src/g729a/ld8a.h	17;"	d
MA_NP	g729a_src/g729a/ld8a.h	291;"	d
MODE	g729a_src/g729a/ld8a.h	292;"	d
MP1	g729a_src/g729a/ld8a.h	18;"	d
MSIZE	g729a_src/g729a/ld8a.h	261;"	d
MU	g729a_src/g729a/ld8a.h	550;"	d
M_LIMIT	g729a_src/g729a/ld8a.h	299;"	d
NB_POS	g729a_src/g729a/ld8a.h	259;"	d
NC	g729a_src/g729a/ld8a.h	290;"	d
NC0	g729a_src/g729a/ld8a.h	295;"	d
NC0_B	g729a_src/g729a/ld8a.h	293;"	d
NC1	g729a_src/g729a/ld8a.h	296;"	d
NC1_B	g729a_src/g729a/ld8a.h	294;"	d
NCAN1	g729a_src/g729a/ld8a.h	472;"	d
NCAN2	g729a_src/g729a/ld8a.h	473;"	d
NCODE1	g729a_src/g729a/ld8a.h	470;"	d
NCODE1_B	g729a_src/g729a/ld8a.h	468;"	d
NCODE2	g729a_src/g729a/ld8a.h	471;"	d
NCODE2_B	g729a_src/g729a/ld8a.h	469;"	d
PI04	g729a_src/g729a/ld8a.h	306;"	d
PI92	g729a_src/g729a/ld8a.h	307;"	d
PIT_MAX	g729a_src/g729a/ld8a.h	20;"	d
PIT_MIN	g729a_src/g729a/ld8a.h	19;"	d
PRM_SIZE	g729a_src/g729a/ld8a.h	24;"	d
SERIAL_SIZE	g729a_src/g729a/ld8a.h	25;"	d
SHARPMAX	g729a_src/g729a/ld8a.h	27;"	d
SHARPMIN	g729a_src/g729a/ld8a.h	28;"	d
SIZE_WORD	g729a_src/g729a/ld8a.h	534;"	d
STEP	g729a_src/g729a/ld8a.h	260;"	d
SYNC_WORD	g729a_src/g729a/ld8a.h	533;"	d
UP_SAMP	g729a_src/g729a/ld8a.h	174;"	d
_1_16	g729a_src/g729a/ld8a.h	269;"	d
_1_2	g729a_src/g729a/ld8a.h	266;"	d
_1_4	g729a_src/g729a/ld8a.h	267;"	d
_1_8	g729a_src/g729a/ld8a.h	268;"	d
Flag	g729a_src/g729a/typedef.h	/^typedef  short int   Flag  ;$/;"	t
Flag	g729a_src/g729a/typedef.h	/^typedef int   Flag;$/;"	t
Word16	g729a_src/g729a/typedef.h	/^typedef  short int   Word16   ;$/;"	t
Word16	g729a_src/g729a/typedef.h	/^typedef short  Word16;$/;"	t
Word16	g729a_src/g729a/typedef.h	/^typedef short Word16;$/;"	t
Word32	g729a_src/g729a/typedef.h	/^typedef  long  int   Word32   ;$/;"	t
Word32	g729a_src/g729a/typedef.h	/^typedef int   Word32;$/;"	t
Word32	g729a_src/g729a/typedef.h	/^typedef long  Word32;$/;"	t
Gain_predict	g729a_src/gainpred.c	/^void Gain_predict($/;"	f
Gain_update	g729a_src/gainpred.c	/^void Gain_update($/;"	f
Gain_update_erasure	g729a_src/gainpred.c	/^void Gain_update_erasure($/;"	f
AGC_FAC	g729a_src/ld8a.h	551;"	d
AGC_FAC1	g729a_src/ld8a.h	552;"	d
BIT_0	g729a_src/ld8a.h	531;"	d
BIT_1	g729a_src/ld8a.h	532;"	d
CONST10	g729a_src/ld8a.h	308;"	d
CONST12	g729a_src/ld8a.h	309;"	d
DIM_RR	g729a_src/ld8a.h	258;"	d
FIR_SIZE_SYN	g729a_src/ld8a.h	176;"	d
GAMMA1	g729a_src/ld8a.h	22;"	d
GAMMA1_PST	g729a_src/ld8a.h	548;"	d
GAMMA2_PST	g729a_src/ld8a.h	547;"	d
GAMMAP	g729a_src/ld8a.h	543;"	d
GAMMAP_2	g729a_src/ld8a.h	545;"	d
GAP1	g729a_src/ld8a.h	301;"	d
GAP2	g729a_src/ld8a.h	302;"	d
GAP3	g729a_src/ld8a.h	303;"	d
GP0999	g729a_src/ld8a.h	590;"	d
GPCLIP	g729a_src/ld8a.h	588;"	d
GPCLIP2	g729a_src/ld8a.h	589;"	d
GRID_POINTS	g729a_src/ld8a.h	304;"	d
INV_COEF	g729a_src/ld8a.h	474;"	d
INV_GAMMAP	g729a_src/ld8a.h	544;"	d
L_FRAME	g729a_src/ld8a.h	15;"	d
L_H	g729a_src/ld8a.h	541;"	d
L_INTER10	g729a_src/ld8a.h	175;"	d
L_INTERPOL	g729a_src/ld8a.h	21;"	d
L_LIMIT	g729a_src/ld8a.h	298;"	d
L_NEXT	g729a_src/ld8a.h	14;"	d
L_SUBFR	g729a_src/ld8a.h	16;"	d
L_THRESH_ERR	g729a_src/ld8a.h	591;"	d
L_TOTAL	g729a_src/ld8a.h	12;"	d
L_WINDOW	g729a_src/ld8a.h	13;"	d
M	g729a_src/ld8a.h	17;"	d
MA_NP	g729a_src/ld8a.h	291;"	d
MODE	g729a_src/ld8a.h	292;"	d
MP1	g729a_src/ld8a.h	18;"	d
MSIZE	g729a_src/ld8a.h	261;"	d
MU	g729a_src/ld8a.h	550;"	d
M_LIMIT	g729a_src/ld8a.h	299;"	d
NB_POS	g729a_src/ld8a.h	259;"	d
NC	g729a_src/ld8a.h	290;"	d
NC0	g729a_src/ld8a.h	295;"	d
NC0_B	g729a_src/ld8a.h	293;"	d
NC1	g729a_src/ld8a.h	296;"	d
NC1_B	g729a_src/ld8a.h	294;"	d
NCAN1	g729a_src/ld8a.h	472;"	d
NCAN2	g729a_src/ld8a.h	473;"	d
NCODE1	g729a_src/ld8a.h	470;"	d
NCODE1_B	g729a_src/ld8a.h	468;"	d
NCODE2	g729a_src/ld8a.h	471;"	d
NCODE2_B	g729a_src/ld8a.h	469;"	d
PI04	g729a_src/ld8a.h	306;"	d
PI92	g729a_src/ld8a.h	307;"	d
PIT_MAX	g729a_src/ld8a.h	20;"	d
PIT_MIN	g729a_src/ld8a.h	19;"	d
PRM_SIZE	g729a_src/ld8a.h	24;"	d
SERIAL_SIZE	g729a_src/ld8a.h	25;"	d
SHARPMAX	g729a_src/ld8a.h	27;"	d
SHARPMIN	g729a_src/ld8a.h	28;"	d
SIZE_WORD	g729a_src/ld8a.h	534;"	d
STEP	g729a_src/ld8a.h	260;"	d
SYNC_WORD	g729a_src/ld8a.h	533;"	d
UP_SAMP	g729a_src/ld8a.h	174;"	d
_1_16	g729a_src/ld8a.h	269;"	d
_1_2	g729a_src/ld8a.h	266;"	d
_1_4	g729a_src/ld8a.h	267;"	d
_1_8	g729a_src/ld8a.h	268;"	d
Autocorr	g729a_src/lpc.c	/^void Autocorr($/;"	f
Az_lsp	g729a_src/lpc.c	/^void Az_lsp($/;"	f
Chebps_10	g729a_src/lpc.c	/^static Word16 Chebps_10(Word16 x, Word16 f[], Word16 n)$/;"	f	file:
Chebps_11	g729a_src/lpc.c	/^static Word16 Chebps_11(Word16 x, Word16 f[], Word16 n)$/;"	f	file:
Lag_window	g729a_src/lpc.c	/^void Lag_window($/;"	f
Levinson	g729a_src/lpc.c	/^void Levinson($/;"	f
old_A	g729a_src/lpc.c	/^static Word16 old_A[M+1]={4096,0,0,0,0,0,0,0,0,0,0};$/;"	v	file:
old_rc	g729a_src/lpc.c	/^static Word16 old_rc[2]={0,0};$/;"	v	file:
Get_lsp_pol	g729a_src/lpcfunc.c	/^static void Get_lsp_pol(Word16 *lsp, Word32 *f)$/;"	f	file:
Int_qlpc	g729a_src/lpcfunc.c	/^void Int_qlpc($/;"	f
Lsf_lsp	g729a_src/lpcfunc.c	/^void Lsf_lsp($/;"	f
Lsf_lsp2	g729a_src/lpcfunc.c	/^void Lsf_lsp2($/;"	f
Lsp_Az	g729a_src/lpcfunc.c	/^void Lsp_Az($/;"	f
Lsp_lsf	g729a_src/lpcfunc.c	/^void Lsp_lsf($/;"	f
Lsp_lsf2	g729a_src/lpcfunc.c	/^void Lsp_lsf2($/;"	f
Weight_Az	g729a_src/lpcfunc.c	/^void Weight_Az($/;"	f
D_lsp	g729a_src/lspdec.c	/^void D_lsp($/;"	f
Lsp_decw_reset	g729a_src/lspdec.c	/^void Lsp_decw_reset($/;"	f
Lsp_iqua_cs	g729a_src/lspdec.c	/^void Lsp_iqua_cs($/;"	f
freq_prev	g729a_src/lspdec.c	/^static Word16 freq_prev[MA_NP][M];   \/* Q13 *\/$/;"	v	file:
freq_prev_reset	g729a_src/lspdec.c	/^static Word16 freq_prev_reset[M] = { \/* Q13 *\/$/;"	v	file:
prev_lsp	g729a_src/lspdec.c	/^static Word16 prev_lsp[M];              \/* previous LSP vector         *\/$/;"	v	file:
prev_ma	g729a_src/lspdec.c	/^static Word16 prev_ma;                  \/* previous MA prediction coef.*\/$/;"	v	file:
Lsp_expand_1	g729a_src/lspgetq.c	/^void Lsp_expand_1($/;"	f
Lsp_expand_1_2	g729a_src/lspgetq.c	/^void Lsp_expand_1_2($/;"	f
Lsp_expand_2	g729a_src/lspgetq.c	/^void Lsp_expand_2($/;"	f
Lsp_get_quant	g729a_src/lspgetq.c	/^void Lsp_get_quant($/;"	f
Lsp_prev_compose	g729a_src/lspgetq.c	/^void Lsp_prev_compose($/;"	f
Lsp_prev_extract	g729a_src/lspgetq.c	/^void Lsp_prev_extract($/;"	f
Lsp_prev_update	g729a_src/lspgetq.c	/^void Lsp_prev_update($/;"	f
Lsp_stability	g729a_src/lspgetq.c	/^void Lsp_stability($/;"	f
Div_32	g729a_src/oper_32b.c	/^Word32 Div_32(Word32 L_num, Word16 denom_hi, Word16 denom_lo)$/;"	f
L_Comp	g729a_src/oper_32b.c	/^Word32 L_Comp(Word16 hi, Word16 lo)$/;"	f
L_Extract	g729a_src/oper_32b.c	/^void L_Extract(Word32 L_32, Word16 *hi, Word16 *lo)$/;"	f
Mpy_32	g729a_src/oper_32b.c	/^Word32 Mpy_32(Word16 hi1, Word16 lo1, Word16 hi2, Word16 lo2)$/;"	f
Mpy_32_16	g729a_src/oper_32b.c	/^Word32 Mpy_32_16(Word16 hi, Word16 lo, Word16 n)$/;"	f
Check_Parity_Pitch	g729a_src/p_parity.c	/^Word16  Check_Parity_Pitch( \/* output: 0 = no error, 1= error *\/$/;"	f
Parity_Pitch	g729a_src/p_parity.c	/^Word16 Parity_Pitch(    \/* output: parity bit (XOR of 6 MSB bits)    *\/$/;"	f
Dot_Product	g729a_src/pitch_a.c	/^Word32 Dot_Product(      \/* (o)   :Result of scalar product. *\/$/;"	f
Enc_lag3	g729a_src/pitch_a.c	/^Word16 Enc_lag3(     \/* output: Return index of encoding *\/$/;"	f
G_pitch	g729a_src/pitch_a.c	/^Word16 G_pitch(      \/* (o) Q14 : Gain of pitch lag saturated to 1.2       *\/$/;"	f
Pitch_fr3_fast	g729a_src/pitch_a.c	/^Word16 Pitch_fr3_fast(\/* (o)     : pitch period.                          *\/$/;"	f
Pitch_ol_fast	g729a_src/pitch_a.c	/^Word16 Pitch_ol_fast(  \/* output: open loop pitch lag                        *\/$/;"	f
Init_Post_Process	g729a_src/post_pro.c	/^void Init_Post_Process(void)$/;"	f
Post_Process	g729a_src/post_pro.c	/^void Post_Process($/;"	f
x0	g729a_src/post_pro.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
x1	g729a_src/post_pro.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y1_hi	g729a_src/post_pro.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y1_lo	g729a_src/post_pro.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y2_hi	g729a_src/post_pro.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y2_lo	g729a_src/post_pro.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
Init_Post_Filter	g729a_src/postfilt.c	/^void Init_Post_Filter(void)$/;"	f
Post_Filter	g729a_src/postfilt.c	/^void Post_Filter($/;"	f
agc	g729a_src/postfilt.c	/^void agc($/;"	f
mem_syn_pst	g729a_src/postfilt.c	/^static Word16 mem_syn_pst[M];$/;"	v	file:
pit_pst_filt	g729a_src/postfilt.c	/^void pit_pst_filt($/;"	f
preemphasis	g729a_src/postfilt.c	/^void preemphasis($/;"	f
res2	g729a_src/postfilt.c	/^static Word16 *res2;$/;"	v	file:
res2_buf	g729a_src/postfilt.c	/^static Word16 res2_buf[PIT_MAX+L_SUBFR];$/;"	v	file:
scal_res2	g729a_src/postfilt.c	/^static Word16 *scal_res2;$/;"	v	file:
scal_res2_buf	g729a_src/postfilt.c	/^static Word16 scal_res2_buf[PIT_MAX+L_SUBFR];$/;"	v	file:
Init_Pre_Process	g729a_src/pre_proc.c	/^void Init_Pre_Process(void)$/;"	f
Pre_Process	g729a_src/pre_proc.c	/^void Pre_Process($/;"	f
x0	g729a_src/pre_proc.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
x1	g729a_src/pre_proc.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y1_hi	g729a_src/pre_proc.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y1_lo	g729a_src/pre_proc.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y2_hi	g729a_src/pre_proc.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
y2_lo	g729a_src/pre_proc.c	/^static Word16 y2_hi, y2_lo, y1_hi, y1_lo, x0, x1;$/;"	v	file:
Pred_lt_3	g729a_src/pred_lt3.c	/^void Pred_lt_3($/;"	f
Gbk_presel	g729a_src/qua_gain.c	/^static void Gbk_presel($/;"	f	file:
Qua_gain	g729a_src/qua_gain.c	/^Word16 Qua_gain($/;"	f
Get_wegt	g729a_src/qua_lsp.c	/^void Get_wegt($/;"	f
Lsp_encw_reset	g729a_src/qua_lsp.c	/^void Lsp_encw_reset($/;"	f
Lsp_get_tdist	g729a_src/qua_lsp.c	/^void Lsp_get_tdist($/;"	f
Lsp_last_select	g729a_src/qua_lsp.c	/^void Lsp_last_select($/;"	f
Lsp_pre_select	g729a_src/qua_lsp.c	/^void Lsp_pre_select($/;"	f
Lsp_qua_cs	g729a_src/qua_lsp.c	/^void Lsp_qua_cs($/;"	f
Lsp_select_1	g729a_src/qua_lsp.c	/^void Lsp_select_1($/;"	f
Lsp_select_2	g729a_src/qua_lsp.c	/^void Lsp_select_2($/;"	f
Qua_lsp	g729a_src/qua_lsp.c	/^void Qua_lsp($/;"	f
Relspwed	g729a_src/qua_lsp.c	/^void Relspwed($/;"	f
freq_prev	g729a_src/qua_lsp.c	/^static Word16 freq_prev[MA_NP][M];    \/* Q13:previous LSP vector       *\/$/;"	v	file:
freq_prev_reset	g729a_src/qua_lsp.c	/^static Word16 freq_prev_reset[M] = {  \/* Q13:previous LSP vector(init) *\/$/;"	v	file:
L_coef	g729a_src/tab_ld8a.c	/^Word32 L_coef[2][2] = {$/;"	v
a100	g729a_src/tab_ld8a.c	/^Word16 a100[3] = {8192, 15836, -7667};      \/* Q13 *\/$/;"	v
a140	g729a_src/tab_ld8a.c	/^Word16 a140[3] = {4096, 7807, -3733};      \/* Q12 *\/$/;"	v
b100	g729a_src/tab_ld8a.c	/^Word16 b100[3] = {7699, -15398, 7699};      \/* Q13 *\/$/;"	v
b140	g729a_src/tab_ld8a.c	/^Word16 b140[3] = {1899, -3798, 1899};      \/* 1\/2 in Q12 *\/$/;"	v
bitsno	g729a_src/tab_ld8a.c	/^Word16 bitsno[PRM_SIZE] = {1+NC0_B,               \/* MA + 1st stage   *\/$/;"	v
coef	g729a_src/tab_ld8a.c	/^Word16 coef[2][2] = {$/;"	v
fg	g729a_src/tab_ld8a.c	/^Word16 fg[2][MA_NP][M] = {       \/* Q15 *\/$/;"	v
fg_sum	g729a_src/tab_ld8a.c	/^Word16 fg_sum[2][M] = {      \/* Q15 *\/$/;"	v
fg_sum_inv	g729a_src/tab_ld8a.c	/^Word16 fg_sum_inv[2][M] = {      \/* Q12 *\/$/;"	v
gbk1	g729a_src/tab_ld8a.c	/^Word16 gbk1[NCODE1][2] = {$/;"	v
gbk2	g729a_src/tab_ld8a.c	/^Word16 gbk2[NCODE2][2] = {$/;"	v
grid	g729a_src/tab_ld8a.c	/^Word16 grid[GRID_POINTS+1] ={$/;"	v
hamwindow	g729a_src/tab_ld8a.c	/^Word16 hamwindow[L_WINDOW] = {$/;"	v
imap1	g729a_src/tab_ld8a.c	/^Word16 imap1[NCODE1] = {$/;"	v
imap2	g729a_src/tab_ld8a.c	/^Word16 imap2[NCODE2] = {$/;"	v
inter_3l	g729a_src/tab_ld8a.c	/^Word16 inter_3l[FIR_SIZE_SYN] = {$/;"	v
lag_h	g729a_src/tab_ld8a.c	/^Word16 lag_h[M] = {$/;"	v
lag_l	g729a_src/tab_ld8a.c	/^Word16 lag_l[M] = {$/;"	v
lspcb1	g729a_src/tab_ld8a.c	/^Word16 lspcb1[NC0][M] = {        \/* Q13 *\/$/;"	v
lspcb2	g729a_src/tab_ld8a.c	/^Word16 lspcb2[NC1][M] = {        \/* Q13 *\/$/;"	v
map1	g729a_src/tab_ld8a.c	/^Word16 map1[NCODE1] = {$/;"	v
map2	g729a_src/tab_ld8a.c	/^Word16 map2[NCODE2] = {$/;"	v
pred	g729a_src/tab_ld8a.c	/^Word16 pred[4] = { 5571, 4751, 2785, 1556 };$/;"	v
slope	g729a_src/tab_ld8a.c	/^Word16 slope[64] = {$/;"	v
slope_acos	g729a_src/tab_ld8a.c	/^Word16 slope_acos[64] = {$/;"	v
slope_cos	g729a_src/tab_ld8a.c	/^Word16 slope_cos[64] = {$/;"	v
tab_zone	g729a_src/tab_ld8a.c	/^Word16 tab_zone[PIT_MAX+L_INTERPOL-1] = {$/;"	v
table	g729a_src/tab_ld8a.c	/^Word16 table[65] = {$/;"	v
table2	g729a_src/tab_ld8a.c	/^Word16 table2[64] = {$/;"	v
tablog	g729a_src/tab_ld8a.c	/^Word16 tablog[33] = {$/;"	v
tabpow	g729a_src/tab_ld8a.c	/^Word16 tabpow[33] = {$/;"	v
tabsqr	g729a_src/tab_ld8a.c	/^Word16 tabsqr[49] = {$/;"	v
thr1	g729a_src/tab_ld8a.c	/^Word16 thr1[NCODE1-NCAN1] = {  \/* Q14 *\/$/;"	v
thr2	g729a_src/tab_ld8a.c	/^Word16 thr2[NCODE2-NCAN2] = {  \/* Q15 *\/$/;"	v
Init_exc_err	g729a_src/taming.c	/^void Init_exc_err(void)$/;"	f
L_exc_err	g729a_src/taming.c	/^static Word32 L_exc_err[4];$/;"	v	file:
test_err	g729a_src/taming.c	/^Word16 test_err(  \/* (o) flag set to 1 if taming is necessary  *\/$/;"	f
update_exc_err	g729a_src/taming.c	/^void update_exc_err($/;"	f
Flag	g729a_src/typedef.h	/^typedef  short int   Flag  ;$/;"	t
Flag	g729a_src/typedef.h	/^typedef int   Flag;$/;"	t
Word16	g729a_src/typedef.h	/^typedef  short int   Word16   ;$/;"	t
Word16	g729a_src/typedef.h	/^typedef short  Word16;$/;"	t
Word16	g729a_src/typedef.h	/^typedef short Word16;$/;"	t
Word32	g729a_src/typedef.h	/^typedef  long  int   Word32   ;$/;"	t
Word32	g729a_src/typedef.h	/^typedef int   Word32;$/;"	t
Word32	g729a_src/typedef.h	/^typedef long  Word32;$/;"	t
Copy	g729a_src/util.c	/^void Copy($/;"	f
Random	g729a_src/util.c	/^Word16 Random()$/;"	f
Set_zero	g729a_src/util.c	/^void Set_zero($/;"	f
foo	gps_client/alibaba/srand.c	/^int foo(int a, int b)$/;"	f
main	gps_client/alibaba/srand.c	/^int main(int argc, char const *argv[])$/;"	f
main	gps_client/alibaba/thread.c	/^int main(int argc, char const *argv[])$/;"	f
thread	gps_client/alibaba/thread.c	/^void * thread(void* c)$/;"	f
gettime	gps_client/gpsCli.c	/^void gettime(char *timestr, int len)$/;"	f
main	gps_client/gpsCli.c	/^int main(int argc, char const *argv[])$/;"	f
SERVADDR	gps_client/gpsCli.h	17;"	d
SERVPORT	gps_client/gpsCli.h	21;"	d
_GPSCLI_H_	gps_client/gpsCli.h	2;"	d
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
JK	lt_enc.h	/^static int JK[8198] = $/;"	v
V0	lt_enc.h	/^static unsigned long V0[256] = {251291136, 3952231631, 3370958628, 4070167936, 123631495, 3351110283, 3218676425, 2011642291, 774603218, 2402805061, 1004366930, 1843948209, 428891132, 3746331984, 1591258008, 3067016507, 1433388735, 504005498, 2032657933, 3419319784,$/;"	v
V1	lt_enc.h	/^static unsigned long V1[256] = {807385413, 2043073223, 3336749796, 1302105833, 2278607931, 541015020, 1684564270, 372709334, 3508252125, 1768346005, 1270451292, 2603029534, 2049387273, 3891424859, 2152948345, 4114760273, 915180310, 3754787998, 700503826, 2131559305,$/;"	v
F	main.cpp	/^	long F;$/;"	m	struct:__anon96	file:
FB_DATA_SIZE	main.cpp	23;"	d	file:
Feedback	main.cpp	/^typedef struct Feedback$/;"	s	file:
Frame_header	main.cpp	/^} Frame_header;$/;"	t	typeref:struct:__anon96	file:
HEIGHT	main.cpp	/^	HEIGHT= 272, $/;"	e	enum:__anon97	file:
INDEX_SIZE	main.cpp	21;"	d	file:
K	main.cpp	/^	int K;$/;"	m	struct:__anon96	file:
K1_MAX	main.cpp	19;"	d	file:
LT_R	main.cpp	/^int LT_R =  20;$/;"	v
MIN	main.cpp	1293;"	d	file:
M_SLICE	main.cpp	/^int M_SLICE = 1;$/;"	v
NEW_D	main.cpp	/^int NEW_D = 1;$/;"	v
PORT_FB	main.cpp	22;"	d	file:
R	main.cpp	/^	int R;$/;"	m	struct:__anon96	file:
STEP	main.cpp	/^	STEP = 12, $/;"	e	enum:__anon99	file:
T	main.cpp	/^	int T;$/;"	m	struct:__anon96	file:
T_MAX	main.cpp	20;"	d	file:
WIDTH	main.cpp	/^	WIDTH = 480, $/;"	e	enum:__anon97	file:
YUV420Size	main.cpp	/^	YUV420Size = WIDTH * HEIGHT * 3 >> 1,  $/;"	e	enum:__anon98	file:
byBuffer	main.cpp	/^BYTE byBuffer[YUV420Size] = { 0 };$/;"	v
cam_c_fp	main.cpp	/^static int cam_c_fp = -1;$/;"	v	file:
cam_c_init	main.cpp	/^static int cam_c_init(void){$/;"	f	file:
cam_p_fp	main.cpp	/^static int cam_p_fp = -1;$/;"	v	file:
cam_p_init	main.cpp	/^static int cam_p_init(void){$/;"	f	file:
camera_no	main.cpp	/^	int camera_no;$/;"	m	struct:__anon96	file:
camera_no	main.cpp	/^static int camera_no = 1;$/;"	v	file:
collect_time	main.cpp	/^	struct timeval collect_time;$/;"	m	struct:linkmsg	typeref:struct:linkmsg::timeval	file:
count	main.cpp	/^	int count;$/;"	m	struct:frame_info	file:
ctrl_c	main.cpp	/^static void ctrl_c(int no){$/;"	f	file:
draw	main.cpp	/^static void draw(char *dest, char *src, int width, int height, int bpp){$/;"	f	file:
esi	main.cpp	/^	int esi;$/;"	m	struct:__anon96	file:
exit_from_app	main.cpp	/^static void exit_from_app(){$/;"	f	file:
fds	main.cpp	/^int fds[1], maxfd;$/;"	v
feedback	main.cpp	/^}feedback;$/;"	t	typeref:struct:Feedback	file:
file_v	main.cpp	/^FILE* file_v;$/;"	v
first	main.cpp	/^	quene_node* first;$/;"	m	struct:quene	file:
flag	main.cpp	/^	int flag;$/;"	m	struct:linkmsg	file:
fragmentLen	main.cpp	/^	int fragmentLen;$/;"	m	struct:frame_info	file:
fragmentNo	main.cpp	/^	int fragmentNo;$/;"	m	struct:frame_info	file:
frameNo	main.cpp	/^	int frameNo;$/;"	m	struct:frame_info	file:
frameNo	main.cpp	/^	int frameNo;$/;"	m	struct:yuv_info	file:
frame_info	main.cpp	/^struct frame_info{$/;"	s	file:
frame_no	main.cpp	/^	int frame_no;$/;"	m	struct:__anon96	file:
frame_type	main.cpp	/^	int frame_type;$/;"	m	struct:__anon96	file:
getdata	main.cpp	/^int savedata, getdata;$/;"	v
gop	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
iCnt	main.cpp	/^	int iCnt;$/;"	m	struct:frame_info	file:
inset	main.cpp	/^fd_set inset;$/;"	v
ip	main.cpp	/^static char ip[80];$/;"	v	file:
k1_max_init	main.cpp	/^		   with_local, with_fb, with_fec, t_init , k1_max_init=3000;$/;"	v	file:
keep_linked_thread	main.cpp	/^static void* keep_linked_thread(void*){$/;"	f	file:
last	main.cpp	/^	quene_node* last;$/;"	m	struct:quene	file:
lcd_height	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
lcd_width	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
length	main.cpp	/^	int length;$/;"	m	struct:yuv_info	file:
linkmsg	main.cpp	/^struct linkmsg$/;"	s	file:
locally_store_264	main.cpp	/^int locally_store_264 = 0;$/;"	v
lose_q	main.cpp	/^float lose_q = 0.3;$/;"	v
main	main.cpp	/^int main(int argc, char **argv){		$/;"	f
maxfd	main.cpp	/^int fds[1], maxfd;$/;"	v
mfc_encoder_exe	main.cpp	/^void *mfc_encoder_exe(void *handle, unsigned char *yuv_buf, int frame_size, int first_frame, long *size){$/;"	f
mfc_encoder_free	main.cpp	/^void mfc_encoder_free(void *handle){$/;"	f
mfc_encoder_init	main.cpp	/^void *mfc_encoder_init(int width, int height, int frame_rate, int bitrate, int gop_num){$/;"	f
mutex	main.cpp	/^static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;\/\/结构常量,静态初始化互斥锁$/;"	v	file:
next	main.cpp	/^	struct quene_node* next;$/;"	m	struct:quene_node	typeref:struct:quene_node::quene_node	file:
offset	main.cpp	/^	int offset;$/;"	m	struct:frame_info	file:
pCnt	main.cpp	/^	int pCnt;$/;"	m	struct:frame_info	file:
qp	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
quene	main.cpp	/^struct quene{$/;"	s	file:
quene_node	main.cpp	/^struct quene_node{$/;"	s	file:
read_data	main.cpp	/^static int read_data(int fp, char *buf, int width, int height, int bpp){$/;"	f	file:
res	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
saddr	main.cpp	/^struct sockaddr_in saddr;$/;"	v	typeref:struct:sockaddr_in
savedata	main.cpp	/^int savedata, getdata;$/;"	v
sem_id	main.cpp	/^sem_t sem_id,sem_quene,sem_room;\/\/semaphore$/;"	v
sem_quene	main.cpp	/^sem_t sem_id,sem_quene,sem_room;\/\/semaphore$/;"	v
sem_room	main.cpp	/^sem_t sem_id,sem_quene,sem_room;\/\/semaphore$/;"	v
sendq	main.cpp	/^char * sendq;$/;"	v
size	main.cpp	/^	int size;$/;"	m	struct:quene	file:
size	main.cpp	/^	int size;$/;"	m	struct:quene_node	file:
slice_no	main.cpp	/^	long slice_no;$/;"	m	struct:__anon96	file:
sockfd	main.cpp	/^int sockfd;$/;"	v
speed	main.cpp	/^	double speed;$/;"	m	struct:linkmsg	file:
t_init	main.cpp	/^		   with_local, with_fb, with_fec, t_init , k1_max_init=3000;$/;"	v	file:
time_dely	main.cpp	/^int time_dely = 30;$/;"	v
time_dely_save	main.cpp	/^int time_dely_save = 30;$/;"	v
type	main.cpp	/^	int type;$/;"	m	struct:Feedback	file:
type	main.cpp	/^	int type;$/;"	m	struct:frame_info	file:
type	main.cpp	/^	int type;$/;"	m	struct:linkmsg	file:
value	main.cpp	/^	float value;$/;"	m	struct:Feedback	file:
video_handle	main.cpp	/^static void *video_handle, *video_handle1; $/;"	v	file:
video_handle1	main.cpp	/^static void *video_handle, *video_handle1; $/;"	v	file:
video_send_thread	main.cpp	/^static void* video_send_thread(void*){$/;"	f	file:
video_thread	main.cpp	/^static void* video_thread(void*){$/;"	f	file:
win0_fb_addr	main.cpp	/^static char * win0_fb_addr = NULL;$/;"	v	file:
with_audio	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
with_fb	main.cpp	/^		   with_local, with_fb, with_fec, t_init , k1_max_init=3000;$/;"	v	file:
with_fec	main.cpp	/^		   with_local, with_fb, with_fec, t_init , k1_max_init=3000;$/;"	v	file:
with_local	main.cpp	/^		   with_local, with_fb, with_fec, t_init , k1_max_init=3000;$/;"	v	file:
with_multi_description	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
with_preview	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
with_video	main.cpp	/^static int gop, qp, res, lcd_width=400, lcd_height=272, with_audio, with_video, with_preview, with_multi_description,$/;"	v	file:
x	main.cpp	/^	double x;$/;"	m	struct:linkmsg	file:
y	main.cpp	/^	double y;$/;"	m	struct:linkmsg	file:
yuv_info	main.cpp	/^struct yuv_info{$/;"	s	file:
CODEC_NODE	main.h	90;"	d
FRAGMENT_SIZE_DEFAULT	main.h	70;"	d
GOP_DEFAULT	main.h	63;"	d
IP_DEFAULT	main.h	62;"	d
LCD_24BIT	main.h	84;"	d
LCD_BPP	main.h	94;"	d
LCD_BPP	main.h	96;"	d
LCD_BPP_V4L2	main.h	85;"	d
LCD_BPP_V4L2	main.h	87;"	d
PORT_A	main.h	78;"	d
PORT_GPS	main.h	79;"	d
PORT_V	main.h	77;"	d
PREVIEW_NODE	main.h	89;"	d
QP_DEFAULT	main.h	64;"	d
RES_DEFAULT	main.h	65;"	d
SAMSUNG_UXGA_S5K3BA	main.h	82;"	d
T_INIT_DEFAULT	main.h	74;"	d
WITH_AUDIO_DEFAULT	main.h	67;"	d
WITH_FB_DEFAULT	main.h	72;"	d
WITH_FEC_DEFAULT	main.h	73;"	d
WITH_LOCAL_DEFAULT	main.h	71;"	d
WITH_MULTI_DESCRIPTION	main.h	69;"	d
WITH_PREVIEW_DEFAULT	main.h	68;"	d
WITH_VEDIO_DEFAULT	main.h	66;"	d
__SAMSUNG_SYSLSI_APDEV_CAM_ENCODING_TEST_H__	main.h	2;"	d
BYTE	myHead.h	/^typedef unsigned char       BYTE;$/;"	t
CHAR	myHead.h	/^typedef char CHAR;$/;"	t
CopyMemory	myHead.h	88;"	d
DWORD	myHead.h	/^typedef unsigned long       DWORD;$/;"	t
ERROR_INVALID_PARAMETER	myHead.h	96;"	d
ERROR_SUCCESS	myHead.h	98;"	d
FLOAT	myHead.h	/^typedef float               FLOAT;$/;"	t
FillMemory	myHead.h	90;"	d
HANDLE	myHead.h	/^typedef void 				*HANDLE;$/;"	t
INT	myHead.h	/^typedef int INT;$/;"	t
LONG	myHead.h	/^typedef long LONG;$/;"	t
LPBYTE	myHead.h	/^typedef BYTE                *LPBYTE;$/;"	t
LPCBYTE	myHead.h	/^typedef const BYTE 			*LPCBYTE;$/;"	t
LPCCH	myHead.h	/^typedef const CHAR  *LPCCH, *PCCH;$/;"	t
LPCH	myHead.h	/^typedef CHAR *PCHAR, *LPCH, *PCH;$/;"	t
LPCSTR	myHead.h	/^typedef  const CHAR 		*LPCSTR;$/;"	t
LPSTR	myHead.h	/^typedef CHAR 				*LPSTR;$/;"	t
MoveMemory	myHead.h	86;"	d
PBYTE	myHead.h	/^typedef BYTE           		*PBYTE;$/;"	t
PCCH	myHead.h	/^typedef const CHAR  *LPCCH, *PCCH;$/;"	t
PCH	myHead.h	/^typedef CHAR *PCHAR, *LPCH, *PCH;$/;"	t
PCHAR	myHead.h	/^typedef CHAR *PCHAR, *LPCH, *PCH;$/;"	t
PFLOAT	myHead.h	/^typedef FLOAT               *PFLOAT;$/;"	t
PLONG	myHead.h	/^typedef LONG *PLONG; $/;"	t
PSHORT	myHead.h	/^typedef SHORT *PSHORT;  $/;"	t
PUINT	myHead.h	/^typedef unsigned int        *PUINT;$/;"	t
RtlCopyMemory	myHead.h	80;"	d
RtlEqualMemory	myHead.h	76;"	d
RtlFillMemory	myHead.h	82;"	d
RtlMoveMemory	myHead.h	78;"	d
RtlZeroMemory	myHead.h	84;"	d
SHORT	myHead.h	/^typedef short SHORT;$/;"	t
SecureZeroMemory	myHead.h	94;"	d
UCHAR	myHead.h	/^typedef unsigned char 		UCHAR;$/;"	t
UINT	myHead.h	/^typedef unsigned int        UINT;$/;"	t
ULONG	myHead.h	/^typedef unsigned long 		ULONG;$/;"	t
USHORT	myHead.h	/^typedef unsigned short 		USHORT;$/;"	t
VOID	myHead.h	7;"	d
WORD	myHead.h	/^typedef unsigned short      WORD;$/;"	t
ZeroMemory	myHead.h	92;"	d
_MYHEAD_H_	myHead.h	3;"	d
bottom	myHead.h	/^    LONG    bottom;$/;"	m	struct:myRECT
left	myHead.h	/^    LONG    left;$/;"	m	struct:myRECT
myRECT	myHead.h	/^typedef struct myRECT$/;"	s
myRECT	myHead.h	/^}myRECT;$/;"	t	typeref:struct:myRECT
right	myHead.h	/^    LONG    right;$/;"	m	struct:myRECT
top	myHead.h	/^    LONG    top;$/;"	m	struct:myRECT
ARGB16	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
ARGB24	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
ARGB8	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
CBYCRY	s3c_pp.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon29
CRYCBY	s3c_pp.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon29
DMA_ONESHOT	s3c_pp.h	/^	DMA_ONESHOT,$/;"	e	enum:__anon28
FIFO_FREERUN	s3c_pp.h	/^    FIFO_FREERUN$/;"	e	enum:__anon28
INTERLACE_MODE	s3c_pp.h	/^	INTERLACE_MODE,$/;"	e	enum:__anon30
PAL1	s3c_pp.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon29
PAL2	s3c_pp.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon29
PAL4	s3c_pp.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon29
PAL8	s3c_pp.h	/^	PAL1, PAL2, PAL4, PAL8,$/;"	e	enum:__anon29
PP_IOCTL_MAGIC	s3c_pp.h	55;"	d
PROGRESSIVE_MODE	s3c_pp.h	/^	PROGRESSIVE_MODE$/;"	e	enum:__anon30
RGB16	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
RGB18	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
RGB24	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
RGB30	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
RGB8	s3c_pp.h	/^	RGB8, ARGB8, RGB16, ARGB16, RGB18, RGB24, RGB30, ARGB24,$/;"	e	enum:__anon29
S3C_PP_ALLOC_KMEM	s3c_pp.h	64;"	d
S3C_PP_FREE_KMEM	s3c_pp.h	65;"	d
S3C_PP_GET_DST_BUF_SIZE	s3c_pp.h	62;"	d
S3C_PP_GET_RESERVED_MEM_ADDR_PHY	s3c_pp.h	67;"	d
S3C_PP_GET_RESERVED_MEM_SIZE	s3c_pp.h	66;"	d
S3C_PP_GET_SRC_BUF_SIZE	s3c_pp.h	59;"	d
S3C_PP_SET_DST_BUF_ADDR_PHY	s3c_pp.h	63;"	d
S3C_PP_SET_PARAMS	s3c_pp.h	57;"	d
S3C_PP_SET_SRC_BUF_ADDR_PHY	s3c_pp.h	60;"	d
S3C_PP_SET_SRC_BUF_NEXT_ADDR_PHY	s3c_pp.h	61;"	d
S3C_PP_START	s3c_pp.h	58;"	d
YC420	s3c_pp.h	/^	YC420, YC422, \/\/ Non-interleave$/;"	e	enum:__anon29
YC422	s3c_pp.h	/^	YC420, YC422, \/\/ Non-interleave$/;"	e	enum:__anon29
YCBYCR	s3c_pp.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon29
YCRYCB	s3c_pp.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon29
YUV444	s3c_pp.h	/^	CRYCBY, CBYCRY, YCRYCB, YCBYCR, YUV444 \/\/ Interleave$/;"	e	enum:__anon29
_S3C_PP_H_	s3c_pp.h	2;"	d
dst_buf_addr_phy	s3c_pp.h	/^	unsigned int dst_buf_addr_phy;		\/\/ Base Address of the Destination Image : Physical Address$/;"	m	struct:__anon31
dst_color_space	s3c_pp.h	/^	s3c_color_space_t dst_color_space; 	\/\/ Color Space of the Destination Image$/;"	m	struct:__anon31
dst_full_height	s3c_pp.h	/^	unsigned int dst_full_height; 		\/\/ Destination Image Full Height (Virtual screen size)$/;"	m	struct:__anon31
dst_full_width	s3c_pp.h	/^	unsigned int dst_full_width; 		\/\/ Destination Image Full Width (Virtual screen size)$/;"	m	struct:__anon31
dst_height	s3c_pp.h	/^	unsigned int dst_height; 		\/\/ Destination Image Height$/;"	m	struct:__anon31
dst_start_x	s3c_pp.h	/^	unsigned int dst_start_x; 		\/\/ Destination Image Start width offset$/;"	m	struct:__anon31
dst_start_y	s3c_pp.h	/^	unsigned int dst_start_y; 		\/\/ Destination Image Start height offset$/;"	m	struct:__anon31
dst_width	s3c_pp.h	/^	unsigned int dst_width; 		\/\/ Destination Image Width$/;"	m	struct:__anon31
out_path	s3c_pp.h	/^	s3c_pp_run_mode_t out_path; 		\/\/ POST running mode(PER_FRAME or FREE_RUN)$/;"	m	struct:__anon31
phy_addr	s3c_pp.h	/^	unsigned int 	phy_addr;$/;"	m	struct:__anon32
s3c_color_space_t	s3c_pp.h	/^} s3c_color_space_t;$/;"	t	typeref:enum:__anon29
s3c_pp_mem_alloc_t	s3c_pp.h	/^} s3c_pp_mem_alloc_t;$/;"	t	typeref:struct:__anon32
s3c_pp_params_t	s3c_pp.h	/^} s3c_pp_params_t;$/;"	t	typeref:struct:__anon31
s3c_pp_run_mode_t	s3c_pp.h	/^} s3c_pp_run_mode_t;$/;"	t	typeref:enum:__anon28
s3c_pp_scan_mode_t	s3c_pp.h	/^} s3c_pp_scan_mode_t;$/;"	t	typeref:enum:__anon30
scan_mode	s3c_pp.h	/^	s3c_pp_scan_mode_t scan_mode;		\/\/ INTERLACE_MODE, PROGRESSIVE_MODE$/;"	m	struct:__anon31
size	s3c_pp.h	/^	int		        size;$/;"	m	struct:__anon32
src_buf_addr_phy	s3c_pp.h	/^	unsigned int src_buf_addr_phy; 		\/\/ Base Address of the Source Image : Physical Address$/;"	m	struct:__anon31
src_color_space	s3c_pp.h	/^	s3c_color_space_t src_color_space; 	\/\/ Color Space of the Source Image$/;"	m	struct:__anon31
src_full_height	s3c_pp.h	/^	unsigned int src_full_height;		\/\/ Source Image Full Height (Virtual screen size)$/;"	m	struct:__anon31
src_full_width	s3c_pp.h	/^	unsigned int src_full_width;		\/\/ Source Image Full Width (Virtual screen size)$/;"	m	struct:__anon31
src_height	s3c_pp.h	/^	unsigned int src_height; 		\/\/ Source Image Height$/;"	m	struct:__anon31
src_next_buf_addr_phy	s3c_pp.h	/^	unsigned int src_next_buf_addr_phy; 	\/\/ Base Address of Source Image to be displayed next time in FIFO_FREERUN Mode$/;"	m	struct:__anon31
src_start_x	s3c_pp.h	/^	unsigned int src_start_x; 		\/\/ Source Image Start width offset$/;"	m	struct:__anon31
src_start_y	s3c_pp.h	/^	unsigned int src_start_y; 		\/\/ Source Image Start height offset$/;"	m	struct:__anon31
src_width	s3c_pp.h	/^	unsigned int src_width;			\/\/ Source Image Width$/;"	m	struct:__anon31
vir_addr	s3c_pp.h	/^	unsigned int 	vir_addr;$/;"	m	struct:__anon32
